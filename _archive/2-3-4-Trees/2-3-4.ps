%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: 2-3-4.dvi
%%Pages: 49
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: LCMSS8 LCMSSB8 CMSY8 CMMI8 CMTT8 LCMSSI8 CMTT12 CMEX10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips 2-3-4.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.06.16:1649
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 09fbbfac.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsltt10 cmtt10 cmtt12 cmtt8 cmtt9
/TeX09fbbfacEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/Omega /arrowup /arrowdown /quotesingle /exclamdown /questiondown
/dotlessi /dotlessj /grave /acute /caron /breve /macron /ring /cedilla
/germandbls /ae /oe /oslash /AE /OE /Oslash /visiblespace /exclam
/quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon /less
/equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright
/asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l
/m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /dieresis /visiblespace /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda /Xi /Pi
/Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup /arrowdown
/quotesingle /exclamdown /questiondown /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /visiblespace /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: LCMSSI8
%!PS-AdobeFont-1.1: LCMSSI8 1.01
%%CreationDate: 1991 Dec 10 07:35:01
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.01) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved.) readonly def
/FullName (LCMSSI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
end readonly def
/FontName /LCMSSI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 69 /E put
dup 78 /N put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-110 -208 1391 857}readonly def
/UniqueID 5029036 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF92445A20A2285C8AB1196A47
F3F74925627A9AA6B4BB9DEA2B4366A405F38F1BE88DD664AA3C4C3B8AD266C1
508FD562B96783DDC99A4B3B86B17746E3118C3BB5EC8FCC3F1B806DFF63CF27
76A7B722476FA492A04BC21712307F7F07DFB18423A0A345FA227DDA5AE9AF54
C6B10253B6714D725B22488FD86608A9E51A6CA8C352076521840ADF22D5A918
0541D6D4BA99AD79C326EDA9466A8FAC2E19832785F7745122CA70AAE6B4665E
2290A37F0969A5F01F453D4C6CD9711FBDC30C311F873F807337CA8A8D021F7A
2F3B49ED08FCC0B22EEF2B01D841AEC2365B983CA5DA7220B7EAED5357ACBA7F
85CC4BF0BE30344260DFBCA729813392EFE768D1CB8D8D44DE6C0A769E792087
8BC0A916C4D0B23AEA3A0889D16122C8EC2781E03049B0A6C7293F09330A0295
74C81896A7389875B60DDEE2F68907AC2F079A55C2383E21B03F7B1151582292
2AB30C680BBD1C7F00F05F0D6D81A5C323AF3179AB9EC11B940FA962768EA4B6
F74F6876A5F63421341ABA04AA3A993EF456CC2330EA7D219432F8EA2B809F93
D69F4432C5A192F74A9EA2F3985C938D34D67BF40BD3FAFE257716313E5E0FAB
D750E1476E5A1543260141B9A412BC703E617DCC2AFC7B89E0F469FCE99342D9
71FDDB944AE4C22ACA3A0D441A5E3BE2C6403FAD7B4C8D240F780130816B248D
320852F5DBC70057E41312E92EF96E3CC228BAB46CB6CED21DA7797C86A4D255
9C85723337B72025AD081E61AB1E54A672AC2EF6D612653E3CE60DB776EF731B
500B94C3CCAA774783E10F38E1A6EFEEC5252BB905AF8A992EF1D0FB43E4974C
DD193A491A203CCEDDBF7C0D98C101C1BA997F6D1A22F98026D7395C143EB8D2
98F4226B6225BCDB6CF649C8EA65B29784304835D3A50A20DA273807E9E986EF
4C999F77CCAC9EF58F4363E5B7F6FAF687BF7BFD7D924E29169F245E0E8433FA
62D60C50F49E11E503328E6EFD39454D22A641E68AAEFA40231F39595CCB2258
A9BAA74A96BC01DA76A1FA2C0FD6C72D587D7502D64D43DFB6A2D4346B3CE4F4
20DCB81EB429705EB560043148E036543B2A02B52E2A9D608A110CF04B67110F
A11A61B02CCDAD1907495E95562BBF98449A5E06976C1FA128A7925C26833789
2E80DEFA18155360A461C8B1BF6AF1491E8DA53D830129DCE4EA1E38B50755AA
5EF203EF5549356EC0F4290A4F70745DDEA6044BFC4AF75499D5585742618074
8FE668944A04A6A22E95540C5C81884EF2F28A8F7D676A7F50ED4A70A2F9E831
926C97A764EC17ED39906D1FCB7D192D2CB3C5A28B65E4DCCD6AC66BCCB8DFC9
3DA01897F0EE6D46458B3F217334A7F9378C9E0FC64773E6230CDD2276BA4513
19B9F8E4F3AEBBC0109BB7A4103CFB89EE945660601FAA0293AD61BD9298D4CA
52B8F8C3724CA3317D76A37C5CB996C51A34CD48A90A850DD24A7468494D26C0
09B35C7A5EDA95AA3C20BCDFC77F24FD55B1A65F00629C5FD2654E481B6F644C
A14597F0BD3846CD0CB50104FD5C157B6369494192414A4D31AB3A3FDBF8E3D2
F0065814D0B0EC46D7B8263C82724D9DF9497C5855A53117256709A7BCED7717
D45C1D36DC6919022645BE3C452D50B4E8F07953EF345E09EED52068A09199F7
15F681F89EC1F16A8B5BDCD6C30388CC62657A12B86F023926EA760D14843AF8
4217E744587016C59173CAF70EAAF9CF1DD9CCFB066F8624D0E15976D4C3C089
913DCB04D40E027692778D75132B1F4F030794A6E25B2C978D40EDC0605D9AEF
ADF33CDEC418F58A7BEBFBAF1AD15C9162E87A8589FC4A53CE4A17FA96153B99
E732A0BDAC32AB4A2AB6AEAEE31531AB27FAB98330CE03CD04FA9D0D19EF8597
28D4A56008B3E72CB9800521522028946EAA4F15CAFC94D99AE40CDFD17ECF3A
4C8F99CD32D4065A35322FEE1F67ABE64FC673C65B0C0172DDBE092879DC34B0
58537608F84954685803471FA2ECC28B262A5FBCC899421E738E323DFA2B6C6A
04FDF871F20B20AC43D4EE2D7AB4837503C64FEDB308B00039500D4FD0148BE2
624ABE0F7C5A5F07124873E41854169B45C59B8A1F28C9BFE10C6B0B8298DE4D
85083BC77F37FCD75FF25D89CFBFCE114A2E08A6648264D1594A730DBC57701E
FD9249FCD325FFE2A6C03DEC6DF36C280FA0FAF9403F681B7F184F3C42DD8F0C
91FC5DCC0F58AC42E2552176E8DFBB8B971DCE01CDBB2FCB81A3B46171A23B4E
F7575CA14C01548E8BA7D26EC74FC24267371EED15E37C2814DD585783DE10A3
0EB51F5DD863110E41D157DF3EE015289820DC91EBA638E624FD56DC004FEBF0
25B7CBD52C439D0F291D557D475B3BBD7889AE2189995C30FF0F4EC8121BCBA8
8CC0DDB78361C8E29144DA3401A1CF5B884FE5C94D5C9F7374D35FBA3CF2AB72
7ECB7BB355CE2429B2298A32A7BBD53F46CC7C5C9E237051EBDFE59D4ED1796C
4BB32A892F977EC0680575CD5D79DCCC2284F29B442666EF12850479232A2E81
9098138A598C42387CDD6AE40098E162F379E7475C7BBA7CE3B3B05CBC123F9F
1E338A97B2CEE6920237BB6EBF1D722B72EE625210E98F546ED03C5E941432CB
CA16EA06BEFF679E3102AC64CBA1A1B1A2CBD30C3432C518EF36AF6CF2F3291E
CFA4F74076C4E0C28D88FBAF4BE66CA85C17334E45EEE49DFF28BE8E403060BB
0AA27C3C9ACDBFAFFE356855D898041A7BEE823499689CB0F632A170A4F7F6DA
0609237DF2499FE5C944A5C03367839394D53C02241654ADB57DF2D2FE30EBAB
979DEA3A7A0D34137F89FF782E2ECB1156AC72DB703C6213971D8459243FAF06
B0D7E66E3D8D05C21C024D9E563E185518BDBDA79458DAF0DD0621E14A971122
5343A9AD8184950021AFF8D729FC792506727E98077DDBD2027BF1E0E8827AD0
CB6C3F25293F09E3FA40F753C608CE58A8145A420CAB676393F0E2EC5E8CD7BB
2503C54A6940AD742F940A4314E761031A289E663A292418330B96A84D496962
20D2FFAC92B47FF1F58C181E6E165A1EB51E0459BEDD75A941571595B14581C6
E90C326D8B4A668C0D7190A03BBC541CE193BC1A8872608457B09D0E22218A33
FDBAAFC44B3CEE468E56683AEA4EAE2527C6649D4EECB139848B4877D71E8998
596A9EE84227716E57EFC5295444BDA0B30BD6E5ED6750F9EF15566F31C9CA8D
B9F530116E4A634ED4EC1F0096716DB36421A614CDF43C362748DB33F842A04C
442735A1CD869AC9841BEE26D18F324032E92C28D6E1253BB5BB0252CD20AAC2
1DDEE0ABFB7BD875A40ADF851DEE6683F0FEEDF401E50FD5DB2B3626353C1110
E56D88BC7C7DE3407D559DC2FCCC26118442DE3DAC8DB99EA991F8A5A82AA202
986C04F4A06F9617AF68DE0AA1AEC32FB330C119D577A2A000ABF2150916ED77
6A1E3907F9B3AC4FC0309B5BACC3A162C4BC790ABAA6359288C4EDE1646252F9
1181DC60FD27992FA39F11B7549936F5AF467156976BE5B2D90F0F51724F6FA3
3B5C8D74D3D35715EDB269BD020EE486128E838E4CB31B40E5C93B80C6D106EC
86C7C214A2EF7B05805A71B4BC894646C4CBD31EB82848126A6D0F2435ED88C9
A7BC8905AD18E3DFDBE792180D32465E44148A3F27D2388612B506244B7C191F
36C97CB5D934F9FB36FF356DF8E19AEBCF46F49180D365E9877C6DB0440F6880
B1BED2197BF0C9FE07CA9C0E5879D9D1952DBBDF284B2E4E150EBDADA21AB885
CAE8B00D05432A39AAC638048EFA2B2B1B4C6A2989F6846D463B13517FC170DE
11E8132D720416271FDDA87185F0FF107D866ED4B668FBEDDB82F22F11E8CEF3
0EB069D23C91B6C2FFA5B268EFFFDDD4127EBE9C097D603323C23F631F8ECF66
09BF553748220DFE622993069ACB9D06687FBD41B5C2376820A018558D767B68
138C314122523D1C8A703EBEDF6416D7D77A6AC8FFE88FE438CD08746DBF0CF3
CCB1146F60E6C5DA17900532DA30D9529152CF7C529587C0A1DE48C10C8A9A5C
A4C0FD547543AFEE9E3C9CD7920CC1417B17A240AB9E891525D1BC8D833563FE
73E7F6C5BFA264BA9486B29B5D9D5B294F975053BB8928748A2800C11A9A89DF
1131F606B6167BC2746EC91D3CAF410DDF2A19375DC73FE8C95B5ACBD6E697D5
64CA9D78E55807E4C821129DAAF8F41E3970FF01657430B7C1CB51F84091D4D5
6277638F289B976B31174CEC221DECBAC917E6250D15A7121EF3E318B9C7D46F
35ECD33171162C64013CB9E884124A7739005014F0FC0CAA9976813040E5B043
2D598CA06E98EF5F39425C4AC0BEEC2A7996172260577E0F65D0AB4903B45589
810E6DC5D23E13861315FD26EA2342F1DD1C386E4581D37ADE10D11302552639
4DE37011ED812E69A98DB97ED8E6F6CE101DF7296C0A46DB96D157A0213D3DE0
A98F3AA6CA3794055DE8DFF6449D906C3F153117E81EFDF6E89DD7EB6C39FAE0
5B0D5342D9EE11F91DC3BC177BCF051DDCB8A4E68910DA13213AFE28AA536896
E14B9F21656BF7576DA572CB5100D21AF5AE206FD5D2EBD86958424889464EB4
AB995A43D5282A3CE4E200F830513C7231E297D7619667D9B794CBEC5D313380
2188637BC429020A3B6D7306FC4485B93462AD99C4EA91B7490819690F1610FB
3661F6CD39C9A98FC3B1FAA8B87A80371695A5134A7D86005C892C6C8F0E2017
82BFE050B1D994289FFFD3B062EBF1BE9669782121EE28DAED33F1BD236A7924
EFEE1EDEBC0BB0BA6DDB46FBAF1107EE35D734EB05CD7B081E2631F01C1CD5EC
9B0A762A5E8C84D62E5FCD9C2887397F8ECEA6C9F7DB1C345E1A26F8BFE42532
26A877BEC46960C059E3F543FCF0DA5231B0183264CAE1E95DF828FF3C57BF68
2881899FF9CBB8CE11706328AE2A1B7A7E6E3981ADDD1AA242BD5182E33F0412
5C5548BA79DE040B9CA315396FA690BFC6D0C38AA14E51516F2C5CF1569C2834
7C6401A074B04DE25F302A1075B7F2D0E355A45D9E2F1DC06A6341D6B6409ECA
5887D8E5F98EED72F33493C83098F4E21E450607BA3BDD39FD697BCD05DEBD51
8332C2A4605D44D67360A78452437486349A73AE30CA330FC29BEEA55E2ADD07
E500E89D73F87414410E0B5C962F1377A41149545C7EEE63C98150EB9B9484E3
C084CAC2FC89D862FFF61A1223A55F9330F3CFC7452C7351EE173521FFF142F3
E8D5A356B57DF62D2B9CA9F652EDE1A4C4B437BF3C1D4E9EE62CD9A48E8344C7
85827CB699182B0981F61A7055268CAB65AB08B30A0885A40497B786A3D5DA27
E92E3DCF997F39C0D815831986491A3E78FA0ECD86F5E7E8D24BF0E3DBAA931D
2822DB3846647F35A5D5B4E84746FE488EEA4003872CDEAB8C81ADC0B7698EBE
E75FA9692D9BB7508014855EBB09293A888832001F4CD872F8638DC868EE3357
991C53E807676DD3EC2C515C08BD7FE33F288D89F859568E3DE093D2F821E147
071ED4B6ADD468F01CF7AD6969D443709E5F30053C2AAF69EDE550117F73FB49
755FCBDCCFDA32E3A467D871226D761DB98C7CB795F6E501551661234611B4CE
DF6DD917992E516436A414CF949993DEAC4E69DBC742FD376CA4F5DD6C8416C8
1771AC2D8FD14FBE415041969D09AEE44FF9FFE74DA64531381F4D79BFFF0E01
2DCD627939D58A892A8E200BA72ED47CB0775FF3C8E15CC28F6CFA4A8437404C
ED31680EA0499F2B1193FE37C8AE83B350742614D0AD9FB59E3FB887E2C0F49C
BAD361E7B9CB3D9A1FD50957EC68F4ADEC8BA8AA7B1C8E5A8A71DF842D76584B
D5D1E5D0129A1EFBA4CFB8EEA91DF3BDFAED2F4CD447BCE4791A1C829901CFE6
ADBB98830A285DD287BA9EA46F8361FF5FB028D53DB671F645A76A6711B2C78E
04578EFF6331E9265AC71CF11DD7E78C5C2CA4402BE4A335C5174DFFF4D82427
70E5D4B9039D7EFBFC4CDE9AE4BB367FB573851AF263BF56FB8F0ABCE033A0FE
F6A038B9B5DB056247FF2DF7D247047CF8579A346878875DFD1BDC96E75CF113
D79202BA7714A6D19A2AB6C55A0358E5FE12FEF8D08CC10C1916EF6794DB52D4
8645D57A11B9CA71C5A8038C1306C3817D9C9D82FC31CF4C6D7A133E4C35817E
A9A282FC945BB9CCC8AA5B1EAE9438622D4499232C06C1FF411E6A6DD03EE37E
78F2AE92B4AEA3B289B4F21C6F1891B1655E53C60514F9D7CCC758D1FA846C82
3DADB9B5D6F07BF9B80DCEA4528EDE0D36439F593747549425994118D2237DB6
D76364721B9C3C2FB2EE12FC030E4D5F0D6D49BAA71F9BA5AADC72795FCE74D1
0FD3CBDA8DEFD7D4A4D810C5C9F8177664C301A8E6E6F7E8A276E1CBD4D66813
AED2FF5E28D6D0B7ACAF85120530B1AD2EF86AC6686B898C31F13660E6D6FF4E
E15DC5F6918C801B73E05E712FA5F7EB1736E77DDC1C874EB27F64190F359492
C58B0080FF6E14FBB91BB6403D0A700CD92D1A9B28E6887307865EC1643AD7E6
C8D2E58BF5EF72EBE0C2E56508D18C1C3B67BFB7124F11BD3CB3AEFBD38D78CE
69779B9FB785EC68D93F7DFBF688C46ECA918BBA4CC840C3C500061C44BE98B9
5DD7DA1C23AB6ACD9CC9F87EF83E5D0C1A9A2123394EB365EF46B358DA51988F
3BC3AFBCAE6341B5D3C0B6EBC0709B8101E2708032616629B691994657E48E85
0AA115A2C5E4D0F5484D527D84EED0C6584139C7B3B7CADB6F6439FE75C95262
7EF9EE82F145534858CF388D9468EF2D8DAAABA50056EE42CCFA2B1F49384936
318ED78410D82B68783FE58CE2ECDF9C2D521C7BBF86979CB464B76D79A08C43
72B8B624D22414DC8E91EF97A1D97210240533E19821763DEBFF1EA18D9DE7F6
02A4F3949AB6F10762084DBD1F01AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 122 /bracehtipdownleft put
dup 123 /bracehtipdownright put
dup 124 /bracehtipupleft put
dup 125 /bracehtipupright put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CD006CAD7ED8E8165E496FA0B191B69671C16B43D92082CA3571EC9E
61564007C3B7236A7E232FF0A6DC428B4B819D157E9FC09B74927E23149BA2B5
BE68FDBA54E11195A7A69BC0D96D5233FF2BE7B78EBB611E52D96BC82A31C63E
164BABACF345BA00E9EF9B27C951DFCA279BE43D84023293356A6A368669AEF2
54F9A844DE13A92F2AA3ECFD20F4014D1D5FD1D99AD6CE4353510155B6450291
542F544ACA8935805A8B79D1EB394371CE4957C045906B339F3FF9460726FAEE
59A9F8D7C6BB6C8F5E67E03CFDAFE74AC6AA35F207646BD8A4C16BD6D160550A
0644F8A4159DBD5648109DA67C0CB9CD8AE878F270FC2FEB9F7CE591A09B7649
53DE58FA95E6AD814FB182CDAD00973E58339C7E7CCB3C7ECD0A29D1F10787CE
3C1054D756BCEB5B2739DA46D227E406596B946C241D4BAD6CD25527368B60AF
E4C403A0AD5DB87AF1F1F13F1BE2175D062DEDBC2538098BF32DCE4D05ACCEDD
636FEC680AF2020EEA4EEBF87F3474F8D16783D880BB9F2181B49A69B33ABDCE
D25FA19F01BEABEBF3F3308CB2987C2AC99DD9344B1C63449EA30A5A3DD32A0B
6526B92FC28AF85541A58CA1EA3715B86080758C84828A3B1CD18139D52AC10D
CB5D3B0848C04A415F246682A5F48D95E4A5D64AADC24222AE4007B17317F159
05B50BEF76A54D18821897F28CFADE87722439EAE14AE05DC551709338096F39
627D0A304CA372FF6066F0DB6D51DD3D13323E14064FD8BA2DF93A8D41D785CD
DB6DE046CDFCA4C05D6910D1D21EB121B7BAA62138389AECAA4A07A1E2635FB0
A8CAE07B4658AAC6F4CB9BBC0AB5F8E2F543BE7F79DACADC41846BFAF0D7D0F2
6D12188502AE0F2963D5480BF8E8A55ED9C1F72B1215104C729E578C65CCB70B
F404087AC0D9A29E77F9612E096B866C84959693F00142ABEDAE2403633A1C56
4387258A9CC14D616EBDB7BEAAEB3BA9FB83CE3D4642DB842432AC008219531B
B77955C7347B893E94F9A28D315ACDB382F09134C1578127AC19738B16D65203
C65455EF8EFF59BFA4F5A839A5B9545125EAC8AFA82B5663DAD7CC7DED3206BF
5957291DF837535DB23BA63F9F7ACA7141E1490A68327E35FB7888C160C2D47B
C4A7CD84194FF52646DF43AC83A51489481CBA4D201E5094E7AC3EE66A5828BF
1D87A530D7786577F164AC3D5C0D624FC6CF1DDFFFC2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670CE03DB
9EE77ED067036595C9F3B1854343BE3A12E486B6E5A2F8AC44FA5378D28DCCEE
306B0E283AA444423F9A4FF38E2B56DCF67A39CEB2C643DAE86865517D5D0371
CB8797208ADEC637330A3A57902C9A88EDB75A7C16FA9850075D9F19578EC666
1353CC1FC512D59DFF847ACCD3D3A430B504B211673DDC4479821337AB4E5E54
71A340A2AF07812637B60850D25C413A9C927259E29F041E11D6A2FFB98877CD
91767E07701357D19FFD9D5385026F839861A310D3470B81C9BB12C8C3BFC5FC
F2C986A782D8F6233F23A5DDD39EAE1548B46293C09D8983C5943B216EFAE358
74134C056605F9CE4AFD21CD705CA13007FAF730BB38DB2E689C85890682340F
DC3CAEB98D7A340C9E4A1601427E954A5C8D53B2E8512A9822056CE412CA2A91
1E5063ECED944A997FD923F007542C8E04B15CE53AAC748B48A9EB4DE5E9BEBA
7F36597FC05066AACBB59A479A6ADE8BC51B356A0FA331534BDD9DCAA2B4A630
74BEE3854EF34E54060FF99662A4285B64F63FF15731D7379411177B1C994AE6
81E2A8D76A4030DB29836733CCB36C4888E295D01004917C565D7791294CA4A4
1C488DEF45CBAA935A0FAC01B2E18B36189975D6081232E8E9BEEF45C09AC4FB
704D28C833797C4BCF44483F294B6DEEA7872C8C9C62336BC7AAA8E460CD50FE
349936205F86B8DCE75B5CFD13A009C84941715786B06B61C968926A38C66E5C
7EEB2031B1E0968DFE02862080581EA24AEF295CA0CBAC1E90734C1051ABDD78
EA738DEA3B76AEE92340C6A3699D44A0B4645806C36A466887EE42E464DFF09C
4A195A657D0E726205E3506BB49362C09EFCE4358129790BE16F64E1E24641FA
7978136A1B97F0ABFF8E11AE09983CC4AE72F13D33269ADC57D5351D266400E1
46BD7F1A12A5D3BEAE5F0F7BEB20ED0DC7513E738A888FF6626D8B84E82752C2
1CF1515C638A97BC32D5EF2127CC511D3ABBEC7BC5F2657D940DF99406E0AF49
9B3AD2B2157F51167AE6F731F09213B4A8103ED14C31C8E8C1C6C9388FAC91F6
BEFF5AD57FA2FDEE08A518782F1FB4C5FDD57300164E4AFE416E932BE01001E1
B884A650CD99CB52176F9FFF3F8356A6E6A0035030AAA9C34B4C62CE9DA314C7
54CB689CFE59A1E4E912A616425147A1DE6B408C60E61421C3EB0BF09D69F9AD
6426B005D9F8D7714B6E5CF04DC9627AC94E98008762431F17C00849DF19C1AB
273F43205F6C1C45CCFA3A7D9785AD3F12021FE3363AA1B62DE8FF235F8AA623
8DCC58E2463397C9B727A04FE45AC21AEA1A9DBD98068A525317CF1440BEF011
D178B5A63111ACFB88D5F6084EEDD8055579DEE82F385B2F3E79DC3FD2E97373
C2FDC63515A5AC6AB93A31CB6A6C8E0EFF8A508074B3B0C4E4369B24AB39108F
CBFB432DED8CF6238FACCF5E5DC79FC8135695146800717F289E23F56523E86F
C7EB6663856FABFEA0D75C66E57468326357FEB03E6E68246C71E23CF56FF2D9
A53E2EE76E55C0E06791368AD5A29B83CBB7C2DC41D862DA785C99378795CFEB
E3E6BD446027BE8FCF51DC8639804628E4E0B101A136D7BCBEF6825758D8E558
171CF46061079E091C5079532E5BE5FA05AACD83B615137CDBB5135C4D37586D
22EB4604C84CA448BA480B961369DDBC6D22A21246506113521FE17388691212
91C9ED605B38EA7B70C5C80607F7C32E22C969729A22717339A7743C068A5862
6A251366E6CAEC594EE0B47ADFBCC235C43B7C081DA1FE674387D5B31393BCC3
B5A09E3912D9812ACAB9327DF0DE1831946D16094667F3946992B88F95EF9F40
BBA157F3B82DAF0C7F29E8F94853C044741C024D6101F2A95AD820EDD2737ED2
D666747005B8F6903DD595E8858FD2410E1F01633A70B156822D1B703A81B4D4
00DB3B43D58FBF4E68E9884DC8E343DD675720C134B011D1DAD3A86184BE84E8
DCBDEFE75841AB0586CD6E216935C2AA8592C2141A85AFC84D06E2479F1A5ED2
F0E9585BE477A672606E4B207B4E8882E6B86A6A37B6E6BA64127AC2E4E272A7
76ED221A15409614E846DE7A948A2CB50BA5BC971654EDF795CC88ADDDACB4EA
48109E27A2DF1EF257810EAF3A35BEAC229032E6D23C6CDF1954390C69347C32
FC7E66900551CC5A333CB496C9CCDDB819ADE26579492202A19CA2CD1CADD7A1
5572B8BD6B9F66F7ABE669E3A95B7445F6CBFE3FEC7C29C6D1F69E35CFD90C16
B06C823A4047EA2F417B34C063F260CA77015D9467EDAC4CCDF9AA9528A4263A
0F0B66234C6B2532C6D7C1E6411E1069DB3EEDEA276690CB737EF0EE3F07E45A
94BE2282
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LCMSS8
%!PS-AdobeFont-1.1: LCMSS8 1.01
%%CreationDate: 1992 Jun 07 22:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.01) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved.) readonly def
/FullName (LCMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LCMSS8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 25 /germandbls put
dup 33 /exclam put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 127 /dieresis put
readonly def
/FontBBox{-87 -208 1285 857}readonly def
/UniqueID 5029034 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169B077C51B8CEC58A64F93279
93461255C3731B4964C586F0ECB1D4C4C11A8DE9455681C3D6AA88DB5D5CB0E9
E61D0F2ACDB447F7E49A41DE0DC2CC77A92307FA6A537D9C89200285DCECD31F
7A27378A7C8FE034B7D97170D6726FBF822C1AE63089907009D50CB0CC866635
3219425C3FB9C4F5EDA7689F91874E7A4EC808BD8049E8A6CFC64E302287D4D5
B644489738732002D249E2747E7DC11795BF966921D2E61E0C05256B71694853
290DF3A86D07AB423A0CCFC39634293BF07D3B8AA140A9B12B291454BA7BCEB4
F0EC576E89C8DDCCA6449C94AC2229A8D64B0D26F811A0B0DB8913A2524051E8
76420339699D91F262A1F227C82E0EFE4459F4B367B0820572700FA5D89884E7
91A29A7048089836FCF88784E64AC6B6B19B55928AFFBFA5269A8DB8AC9506A8
788C8C5508CE0DAD2185EE7E2B530374C21B8800686D96862A621759E2984DFB
FEC6ADE490672F0D7F6814525930961A841DE5B002EC3DD47EAC6C35ECCB29F6
A9FE3A5900A6CFA164066FE572C0C9941EDEEC5FB4059D394461AECD3639DDD0
4A64579AF5E545CA5A5B5AAE2459DA49885D00B7EE3DD9418D6FE413B5B5A6CE
31FF6DD11E1533D94899DECDA802056546C95B1401114C88A8756AE64EC7E4C6
13985ED6FF61C00AF5F01079EB583384E9E84C885DEAFCDF0035EEA425FA9554
FF0F25F83AEB75C4D53B953D6C0337FE3218642C07F59C7299AF2A67AA991AE3
19F38A9FFA0E4384BC433A99163731E5B2E43F04252B8DB083FCBD2C58EB6E13
10D9D15D82E557B5534C3EB3BECD84ED479C6F0B7FFAD5CC58CFB186696DB351
35CF8684059AAE6EA3AE2606FCDF1FC16B7E2E99CBD1AC1A0CB1E7A887D7D714
E0BAF9DB3CAEBE3FCFDEABA5ADF2EEFE64243B829C36AF0414B9DA9E2DE87A12
C3ECFEA3F7C006359FE5314EB9B6740481DAC0BD122DC392380F1CC7CB67AB5A
5F28A8B61D0A921B500506F7FDB56C6B2B90609852AE25072E8F69322D3B1206
3447A303B296134AAC0F2D4267B81D0CC36047AE3FFA99E452F9150FC99E3320
8EF3F437C3BB54B2BBD563F872F022148874A3D4B38DD2F9B1F55C5DCAD742FB
D7714F833895100D8D476DD9225012C1E126ECCFAFB9BE7929737B315AAF962A
7EF7ED0303792CC6868130D7EC270675107F30FF14E646A414F7416702A884E7
0E95129EFEAE9D488FE4F4308116C74115E31A68B470F66E48FFF81CBFC1F380
367E30C340412FC72D2610C47E37F4BCA4C77C2798E176920291E3763E318A57
DA887901DFC3592BE91D1394D872A9759436E8716A2F6A22C74370BE59E0D7AB
E22C82AB5F87F1A9F83EE88E7D7A77CAC4C3DE4C6769607AC437844749F7DAA0
D70A804363B0523832E87815937D4D5E8BC1B8DF15EDB82A8C06CC874848B6C2
AAEBD8649882B7944BD3917BEF28A0B6E54EB7187072771F7F0481F1032D3451
16C30A6181DA463CC94F9A85A814AE8ACDCC92F12978487E4A285ADDF1EE1E6F
75C8FCB94D42CD6DC6C225684F8AF37B69F05522F488F2257D971D596E0F250E
9D3EC37774BF26B82E20854520A19501B503479C082C7F20BA94D2E6F78D662B
58BEF94135E804FA8EA543A8D3573C91210695ED4A57DFD4576D7CD880BE1C9B
24CFF1C0369776FB2D98D27AD8B3CC3482A12212D71D9065B4EEB46B7C52BCF9
856B6ACFE49DD38A18D878C12648FDE637AD52DB23C77746CD2061966DAA879D
8A5A4CE665A0C740BF26D063DB4481013AE871BF8847DB48547D8A1F41BF014E
5057EDC1CD8E4BCA5A7AD577243DAE45FDE8A482ECBE15392C9109588597678C
2BF49BE36684CA4948B2129C5C3EB57D29D8876DBA1E8BECB98545B3EE9E4026
ADA3867D693B2C8E9E9068EC83F0D7A4F2F0B6BFC2AB5467D7873321631FA87E
25CE5ACBB8CA9EB25450DBA4FB04061E1BB10D4B50AEF63F80716D943E9F0B1D
F22053F9B38DFE0769D4C24E0CA4DB0145F4FED6EF6B02ACB8AA601D5FD19F25
559C46B28A8775CF2BFC62F686D68F71F68E6E96F039AE26756C2B6D271BC433
19886AEF81C309C07CE8DFB632C22D979F8B5A8285266FEC29CB08A7355BC2B4
56606D57354A9592E9D175FD2ED0550032B8C8B43E41C4DDC7E1BC40B6EC8DE1
F35E6220BA86394FD0065183EA10DB79139D478EC68744CE15271DAB9FC9D2FA
A672FAFDA755424F2A8ABDDF7C06C3C21C2C17847F4632315EAAE22CCCD92951
449738CA821E043021805D2E0AADA08614DF89D7087C8B1CC0BDAF8F71302C38
F927B321F6C18634CF7F0C2E6C18EBA4B193E3623B895953FF1F1B45922AC86F
6CDE2B79F836AA7BE4AE8F6EE40F744D2E9B780B50171FA5F069B1F4B5A16E0B
48773A53EA7079605EB5640DE1EF8E35CC66BEE38D766240F9A955756BBC66B3
ED97746C450D02ABD524828B51CF9798B7A74331FB0944D9CA0602E88770C13E
8EABA322DB3906B8E5F58FF2905409B3CA89EA00EDB0BC499B60419B4621039E
C09F00E549B0A1B62BD49B0ED05CE7B788FF5916A3AAEB6084EE12D72689CDA6
983CFDECF13875D13ADC6FB8389E4770042CE404E462B80521B8690A2F4A52F8
C2D70B95F7F0257585642A7C95BFF63619B9E2F9618D5C9438C7EEC8587B5B48
ACCF5C3D7933FB9B848805378A6C5E11872C6E7D581826B8829DD7960E250693
0D8C2B5CAFC8F7BF7DF687F3DB360C806D582EC646B3F26E326C98DDC60A1D39
7EF452E0DDB72B724B5533B3C5CB60DDC3B1CF82D1B1B3E61CA26644833B1F1E
35ABD9A10FD757EE6276EB2381B1C641565EB28A45D6F57F64184CD2F86C6E4E
4CB7E3D54705966EF4067390B73D401ADDF52933E84CA17AAED6A1906D164247
5A5EEFA9F6F6B72B3D3A70187A550CE0D883D334AC9C1A5301147372CB97FCCA
3CA92AEB578C114DAF587A1AF3D7664756AED6AF8B71DF0115DE5AFDD44C15D1
F601EFF7027A980332FE12DEBD2B6C34C4377A96FEF3BACD9C45842DD5C9D3CC
477DC1C630F5F0225B3658EEE2DF71740C25D1DB35FAB8FEAEBA17EBB2CCFDE0
B4046ACE5E16D057B6927EEDBAC3F1D8FE01931CDE53DF8BE83CA47EDA4C03C1
FF8863715654F9CDCA01ACC4CEF4F47EC272F91627AAFC72CA0B620240776240
8258D3F9A33CEA66DF18A96CD60384C92EC4FAC38B0570230C6203E3A8916A69
5390C467893FC6EE5077304838186B45D95C2A0D00F5BBC58606EADD933D2DAA
9C116F8B4D60F4871EAEC42A0A58B975CF915350682E7DEB080ADAE28F6EBB7A
6281486FCE66DA66EFCAEF34EBB26C4BB29E05F693CA3B8EE851BC19D51269AD
DA7A7D3247FCAE06F9544975D17DCF5ABA9E3FEFA92671004FE08B59F7163470
CBFF402BA7EDA87BE4794E35675AD2C1D05919B72ABB203B8A91589F0DAD1133
10E151CD636063F953B3AD483039754F5DBAE205713CE752BAF95A126C28319E
9B0CD22D5B58026FC0644F0E66207EFF6862EF1D60AD926C98C14266181DC4B4
966DC1D31528140660E79E3738236C6275AB61B40C0E1EEAC3696A006C139586
2D650CED7BCAB31E7E2A41D9CA6DAA5C0C9BD32F0FB2156EC33EEEFAFABDE45B
2B22AAF799C7D31DA3316E1BCA9C79A883218E4FF52B8FD20698F92DCD72DFA3
586C31ABFFFEC8C6014E938B53E3761A9FBB08CFF4E5C5EAF08449F700B22CF0
D3A15FABD6F5E164EB42535AD3B6AD32336B421F20DA6D1B916FAF1F29A5BE13
DB6DF5F56F1F3EE289BF66D620ECC6F462F3711D39612FFCDD1B22DCE5370152
1394887BEB0EEB0C30F236368C7DF3B6116D23CE6C472EFDE423820F3EAFC875
8F8515F14998EAE73021BA37E64DBE2FB065DB249C47EC4824AFA665BD9DB513
3930680FB0A74388CBD960EB413E099C71F1C214D4C4A121556C779FF08E5D38
5B8EB25A322A457E580389DCEC6AECD583A1F4CC79131A891DAE958B1BAAF695
787B65E2A15B69124F2886C0ACB6DAEEDDEBBD76BFF2E5D82DDCFF2A81E7111A
1816977E8737FA0393474E19B8394B869091935484120E5B01037898B8809DA3
284665FCEC963B580A7336A6526CA764676263E2EDC166FEC701AA47A9178D3C
4C649B9ECF918A3CD546BC2A28C3F1ADEDA874C90C6A2EE57EA888F0573D7094
A891B37C0DABB2FD9BA7A0FD204E229CE4DA1F267A805216C06A7CCBD036BDB5
91A5DC7BF37179102D539280B0B5C0D8E8A4C3940365DC643EE14AC512918746
1475C75A83EDEF584906968E96EFABAF576843ABFE4ED42C6CE992BC11A0EA5B
CE60D99E15566B238157D7394DE271705DB98DE9E3FCE6E36065E3C2E3F83E04
44672EE639B17FEFB755689211D3C8105BB51746D5D5BBC22F58661FD78AAE8F
960BEEE7108DCC8BA89F16C820F152056CFFBF4F032FD3855155B44B7BECBD16
C52D39BFAC72414273E370676FDE207FC26B9400365D509D47598585825EDDBB
B87FB01B85DA04979B2BD1C662A8F81A542197AFA36D6D1E207784DC8BED75BB
046805325A5E540A0AF1D01267E24B17AAA5794873FCA4E0BF9CAFC7091D5400
E41C6E7DFB0FABF1D62CCC0424257D6D1A01F317D90ACCB1B385E4E6EDF6514C
C7ADE79A3C846FDEFE452536DB79CD4CB0ED4937B4E08A814F9C5E59C03ED56D
F09BDBB6789F744531AA75F2237125A80992FB6E6BC852DE661889222A9F43EB
0DC7EB65F0A3C5B3ADD0D15A22BA03DDE089BC73817AF59E91F6EC126DDBC0D7
D8023F122C25035B379EA5676B7C612C64272AFF887BEC9920C3832428C47883
7701D53AC3B829BF2783A5B7AEDE5140119F13C2E52B4BA81AC318FC8FD18CF2
AAB1B9B292788AFE07B59484E63B9F663E8CCDF9EDDE0EC5AE15659E47B6A0B4
8D7D0E2633938A78C2A5AFFDD7F4021C5CFE354A3A11E85364E1D946A2F494A9
5D254DCFC8A02ED8AFD3C417545F718D81A20E8FD2C7609CF41FAF128B824634
E30F096FA6248DC48F4E24C753F421D678DF97702F76135F40F208DF03CB575C
F94648E94786A83E8743CCE5679E4CD72418D8EBB17E63BD4A36947FAC5E484B
28EADD80035EF57330E0CFEF753C87634A91358E717A52DF48DED505968266A1
7E9F6E32BF04317236F2BE904013E178224FCC328B41114BC164A99085925B18
B00330BFAE0B8F8941C61CCC437F69CF227088672630AA36349A9B7D195603A2
E3FBE72E5AC50EC018371BED208F8190F9700DFEF9E1DF4014D789CF5B3377C4
526B52BAE736DD2CBE9CAF9427C71CACFA869A057029E93C806BA4DC17F52681
95A3A8391655FAA399CD0313F6CF43F7F7CEAB34CE6D8132A1E8CFD69698FD6C
B6B6773138A1F1F6117A2735F8684B07C8F083EB23A981285EB88A59EF2AFAC0
D2BC1B35C3BC182929E9064C57BF9B81265220D18DFBE67B66E59AF595DAAE62
84327369C02A0AE903A19367E7A522754F22FFCD405C2E83EE36392BC6D90993
3386623DE584CE6A3B3E3DF9E95BE91AADA021532D92499140708AF33203B35C
CDD23F53308B5654922334690D9AF799D74263904AF8649D510CD2A6C12BE9C8
91118B0C3420102DACDA028DAA97619901CD5E55BF49A76E63BD57434AD42180
30CA22EB6F03A83AEB60326EAE99CF0DC9EA555AFDD0992FBDC31E66951621BC
2F655BD50AEC4A98F88659E962502D88FC3F8EBCDFD701F3DEA85640B181C948
54C9B8D1A0381DA7F7092BF2CFEF2ADF796E5A69DD11F63CEDB3CD1B371123A4
2BA4D2045BFA4705A4D2A7D9C3FEB8EB19E3221E070558012397BB4D11F8752D
5130506AC0DAEE3CA412FA1647523D31BD672B7BE1C4779DD4D7C2E5AC98FA4D
151830800FAD803880DB13A3038D5DB0E6CAEDF86A6FA253667C09D48BF41D6C
074C83EC07CDB4F3C319A242392C9800817B2687537B5CC9E0F0539BE7342258
48EA119DBD163D1F39A7FD2CF97CAE818B3D09DC614FF2A454A8BA431D4242BF
2D2D1DA8AB21C45B8A2FB46EDB2BF26918C4FDC395E47D0E1EFD6BA773C53B5B
14E0B933989ED3E2397EDD27EBFB687C9F31B9679AB858DC67A7DFA04EAAF8D1
36E8899D486DE0199F22D895219097390D2C64E5AA25D156CEA4500C0958B560
8B227C835B9D1BB802938C6B624279998AD3F9A74C6F542E8D20201F17F07988
9D41EA83E834E2FBC741DD1A49089EEE85888109336B17D871140E29FF8DF775
9605E6273F07422ACCFD1AC47522DE68FFA999F84A3D5AFA8338BA0572310C7A
DCC716059755FFE717C17F62093EECD90AB59552E6188DF7373C9D6233CE173D
E95BE117139EEEE0208DC4A2568F63611201DD5265BDA3BA84FDB4F9D9333A2A
3004F63E386AFA34624FA893BC12A1F70B60C629BC0C6E14953E2E8B57C167F3
A7B138E35717B72E222331B29CDFEB427DBA5BEC99E4564A08BD64196CC9C3A3
249660145AF44C20EB5A21154673704FB2133583B06197766E318F0C4961BD6D
DADAAA8FA88118A35A1972E8991FF4B1C76442F66B19E220A23591D56203541A
80C1917006ED0BCCCD0AE2F0CD9D97A017B20CF607756B2D5C2E9F1F0D017049
24BDF45FCD8B3263AC3432370B469DD1E34ADCC6DC881ECE84624E1A9E49B99E
CDEB121B5D457C6D758C235A76D93E15C7BBBE1EB035C46F6A8A34381852870F
C7C9FA3DC74D374EED45844EB151217680B21335E9201E77D67B893A647B0BC2
DBF6890727F16E44B48C4A38067E01F5FA0B2090EFA9DEAA69DFABF4FB0D9500
6A3E702CA4182FD2DC2230ED4493E8D5966210BE0421154168CC65D0268E3A34
F5FF48EC00D00C37A285E7D56625EEDF4C6B92B763AB2FB34125635C79B33029
9B7F1A66F1EDAA00155DD4546AB6985A3386F1FAEBF6CEA2A088195BC9A6FC9E
0C50C9AFE6A13680158B1100CA7E9F01CE1E8084650472F11935332E4DAD10BF
EC30A9422D639E7F2F7907C7D43A5E4F19F4395C6E9E77005DE2B0EF854C93BA
CB9C5FC769B0E962687B7CD52789ED07A0AF29D178D708AD47010710DD4758C8
FA8AF9BA99EAC4EB2E8CBF3CD4DB247648281D721CD2F52F8E0E48F98C9D2CB5
99CB78C936B1DF16C7E3F2FBDE4F76BA10F87F5897FDBE71A73D284ABE3B8021
F0A9D18884B9171C52C654D2AC0144E789834E792A58717019D892B4F8705C4F
C022AFE64CFC3FBC4D306BE798E4D5D603103B9C651D221237DF5950B8A0C09E
3A889D275D8280983D72F791CBA152ED2E4BE8C5F6D8D1138B2DC7913BF9BA69
6961322C39785BAE90A95176E04B5ED149F4A273C36248A059F1077B049CFB93
A273657B85F55C20B2651B86153B95064EE9B90E761E103A7070064CB9561F0B
9A40DC1A6AE7309C77B85A83DDC3342F5181CDA1C9BA4542B1746FF62D8B9704
CFEDB5DC0B16B09D4C031A711FEBD0BA7455013EF86093DD0CB8C58DBD0F5430
80332DBE372B8BC86FF8BB186F68BE0FBF0533801154C63F59E6402812ACE3BF
C6D5C63D7A65E930E39CD50D00ABC2CAE31958A6CC686D24152D2288A8596506
22E258AB8BE96C4040A1D9A31F65609B75D37085956BBF5635F1B981F442B961
857D8DA3105AE9D1320A4ACBE73C76AFA3013101429EBA56951AA9640B5C3126
B4BD3212BC4E5A33AE58DADCCE03A6B895DDEA13DC9A07D3D14ADCECA7D01033
FAD97973B04661BF6CD56F7429AF74917492830AC5C0D646EE6ED8E5C680572F
AA84B456A16262D4BCB90AD3CEAAD100B8AE9122717A58A1B93AF139D6013EE3
6A9D3CB8609CE8645A7DF688705A9D6D245DE525C69A4A8E4147541785B763E8
173D4D5592D6CD659590EF52F9B7B0B1C28F669923FFD49C96752C3F025FB11E
07A5C0C0443C4299FB2A8108E436E4DF9C47766A10B2F02DD09D11EAB2C7C070
31E7096CFCFEF4935CFC62F6E38B08215600395614B0F720C27B3AD57014935B
27163C59E447D64C89C64DA980F905BB46CC73615E98E08143092D48A59C08C8
B2B9DCD51BECD97A8C3DB38CD8F33E668660B3B2745C0B9E4491B1BB378D5F2D
CB05450AE23F03E48C37CF45CDB29602E1A3501498A17AC4BC8DB4F9F1BD728B
86BF5DAB607BB64AFC2F4E3AE4D6E71719F9C9251BE38961692EA63F9B820C29
BE9AE4BB521A7D41541CA4FCC18EC0101A9FF9F6349E464272D777FE5AF49837
CB0A403CD368BC41CEEE048D1F67266CD7F145378236A0B0943D15737E584FB6
1C4504E60D0AEFB0441C91A6673C8293E7C449E34F10027E3FA72FB6337B999E
404ECE22A4A41ABD14F5E27242716101F1D8870533C305437CD31992B71F557A
65475E8D0FD0BDAA29BD9ADFCA6A0EC9F9168820550D9C51E70FDDB6C78EA5A2
A5BA141FBC8CC0705BB7270FDE65FD7A0E6E3492DFD0FE33462C14EA91BE6379
78A5B53AEF9725A204548C6F495062462719ED5457C07FB3FEB10E9D8218F5A6
C0CBCA746EE732AD8479960D2D6F2144EB1F528F3928BF8B00277DBD6F606084
C424039238797777D9E8DDCC9D7DE6C789528334D0D483846A84F9EE4FDEB1AA
84010CA6F7321A89F36A90719942E663999762926A37280C87545756BBAEC942
1E5B368A5C67033F521A2AAF8C9D5A503399255BE97D145B7F60B3532E19F2B8
30669F86554EEAF170CB55A0625328C9A165D6ABB68B5F8BD9D0C135B6F48CFF
073EA21284DF2F8CAC6451F1D5C9AC25C71B00BCE0FB1FF00B867C51138F20A8
94CA21D010798309418385879DD61E70FB4345CCB90FEED3BAF3EC514E0BC9C4
740FA45337225D9984D55E3FE1197F11A5B22F74CDF588EFCC5915442260B28B
C684602BE70C57ECA4DB8B3DD831EFDC245F62F46EBEEAB17611D8708C8B790D
F717B9001F2D130421AB9EA2B7141A3BFD74F874D326DCD72EB749B219AF087E
682CF1EC253305E04B460EBAD3190CE3D4C9E9A861C06A6B8216898F910F5721
84F51D694AF63C7D1C0E172F5918A47956BFCC560039CF670262ED1E4E694B53
8D31D292095AABFCE118CC7646B287858D3383F064D99494E08505D6D1D95DCE
EAAEE10B399560493B6A15291A0F620581FCC9DC778ED20C84DFF4C8F821917A
D905D1A4BF228F9EDB96A677C1453BF75A78DA4E51D110B656E69CFCF99E38D0
0BA6F868316063579AD0438791B484A717907D9E4E3FD14DF83384EBC9B5B2F2
14DF73EC2EEEE0DF4D73B6660BCEB386F75FAA81A324614F537F6C560D8E8620
8E06573D388B921188CB0E525525615FA3B178F5A922F5480E7139DE9CB469B1
5A2F3CF3842E3D7BBBA1917C03FB433804CBB5C7A27F283E8F47869E6DF0EAA8
F9202DFE81317DA818685D52565CAC9306DF75C8010E5B5F2433393D1CD07270
4236FF77B7C1D462DA4F18B3DC389DBC0CE8A6CDAEED58E1AFEF6162451E6834
4C5C12CBD598111F160CC4FA700F5347A38B58EF9C49765AFE153BF32C92CF58
50DCA8FDE68AB023E56F7CAFC1AEBF70743A28DABD132CC5D394DC5AD32E0EE8
03DE2B130A39F0D2B457AD0D565A3E999FE8114D380A6D9C9DF3FA926A81EB63
1A97FD43B673325CEB4ECC2B4002CF4FA3BC0E73D92BCE2F28B7B893D6A570D0
B0EAA43D723AC529AB723DE568AEA743A170E2E073FB4321A9A28B600AA14C77
DD58FFD7A1034D66A86086AF8148E2DDC32013A033EF7C1C58B3E6BF00DA5947
098A6CCAF55FE8262282A083E5844CB074911B727514379887FC607D0FE9E2C2
00C095314B90575440A7013E6BC57604AAA0483F412FE07CD207348CEE1808FC
54B76C0511013DAD9B01000CA20B76D9A3960483B486F22BD64961AE13DE4E63
4B6FD691582E1B0AA7BF9AA63C9F4755DCA4A66613C43AF0C9B4B6FEBAA54692
CC4118EFFBA339B7A407E7536CFDF214FCE1723C08C2CF10C36BBB8B159E7986
5EFA86D0A7E31DBC4194F5016F187F9FADF844F29C3C2060EEDB4FBC838AE21F
48CC3268ED96EB090C63FFDF75786225E364DAC055A650F09C3B1E612DAAF177
EBFFCA3BA563EBF2AA723953DA53245BDC495BBEE9E2B64C298E1EE3D12A48E9
EA7151C353912DA414C7C7F15D1B41E748DFD9D45E78AA4DD7BCBBADB549EB7A
6E6F2D365CEA1B9204F05F0B9EAC44951BB97E389E6725016D11F6FF7ED96090
F168FCA18CCA3A4C6E5574BAC01688DBC378A84D59EC800EEC4792EDC2EE06D7
9A13F90B41B068D1BA3B544A986C6D054B944FD2C2BC242FF45C06E5EE75CA47
8D02DBB6F896F916FCAC58552DEE1FFE40FFEB302D3F5DCCF1CF6F6C693B149D
149059D2E87C339F2DEF6B9D442B2EF14A70E23647FB8C0CAD74471588E35C73
609D4B722D2F5D2BBACED303CFAAA22783239ADEFE784D576FA8A28F738C89B4
B3D266489A630DAA6975DF8AA8B96E574517E6FC853C3F83842ABF12F3811745
8D81B29472879C51F22B2BDE015E2A0BC3EA2941663BE46819B11613B3A31792
DAC8A7F5901C8A28A0CCC57B3D358FA0504452D63182512970D29ED71274F083
043349D5251BDB901F379B2C5E0FE8C2C79D58514D1D07E6EDE0C8441A997415
7E32D872E5521174301DB7A829CC0F1D1DEBDEE0061651B234D21B413F3D0094
28663842C3FE9770E74066864F2F4CA8FF971A8356C416ECD4127CBFF66AEEFF
7CFAD0DA35B79F99279C4BB0298D11A9FE9CD62D5B39EB253933752A0C005F0D
62EA2769F37424B729B936BB7DC09818C1720765E5DC0477B774DB4723FBE529
9AC6BE9ED7B7B31FBB648DCE2261A39B8CCB5C18185D6DA49D0F9A3E4CE70E0B
0368ED5FAF74C7C9336E39BC6B7E7D59F4F5A84507E5F5FD1D58C9B3EA58FB56
FC920B884CA07D730348C81F45F04E28DED6CE148A92EF7A11717700E89DE740
621015DAB337D700EE7753A626D0D79908F32965888FAA3622C8C11DBE4BFD7C
1A24E7610EC7F87FA9CC9715DEA563FA62DC1B92DFC1A3BFB49B8D497D6C4EDB
05861253194D87E8B175960719C9B994FD0554CCCDEEA6C3A1A7B3091A0DDB39
FC7B732032FA0EC9BB4A010BB4EC253D52801020122CAF8A30CDC24F4452D087
160B70A1C51B83CDE6A5F9A0945E0CDA238D2F4B148617D0D0EAB07E83A2DE69
ED07DBA34499978AE5B901795C5A6913E1518EDEC21F80E6260A3AA7938EB92F
A08EC71008A66815178A4B1829257F677AB0FC949D11C897B34820B90DA92F65
A3909638D36A0F3DC2674493606730233A6F2235CF382C9DA8BC7CE57F64D5B5
708E763FE98A7BF4E24E53620EC00213C18B4258B24B4A47A0ABC33C48380C36
3FB5097A8497DD71952F639A92ADE94959269F9073EF8DB049F17C07961C4D3C
FED0574F00306119276F49E4039B1B3AFBEC6D7BF1C826A3BEDBF5B5038F2D25
E05C634EF5E2F931205EA5052A60797A999F21C3DD2EE379CF57F2449050EE07
843A3213D0830CE9005116BB2C0C62DCC8FE0786760F9F6DC42EB15664A8B61E
71AC60E02279E1105FF89D2114FD68BD595B74EB5FE637DBC7B736D8AF428E7A
69E29D1CAB7B82917066D0AF3B7A313860BB40CAA5454E9D731516CE0DE784CA
1A398B72B0E984321CA101ED5F8B48354B3AB0B52574D7637C0FCD7C4B4C0F71
70D22926C07E7EF4D2EA74FF368B4EFB224F46DE8280F587730B8197A09136FC
3FB93680DC34FA166AF2B32F9C2A456EBF48D22B9E1CDE5163E977D4CBFA0652
38BABFE5ACEDFEA94F61C56A55B2B650D741FB03B63F47559783A3566C8546D5
07CADBF8C3823CC840C923533DC18924D78A541C78D2E44D0CCE7D7FC653E144
2A11A951C932B7C11173F45EEF8F1D44274557514473364B9F8FE7BC0B8E2EDE
7EB8058E0D11643A37F6C1EA9FECE250D4AD00DFCDADC83AD30EF955483341C9
22356C1BA8933B560EBAFCBBB8107A4EB6BD9B0431662508E794FFD06EEA195C
7265CF33A541FD5466879EFF9393442C66A18F35C7EC1DD2D6E669BB4FC4EF55
11C9A0D2DED370AF60A2C0FCB9E7383366E2C32B81677CA709C24B0694761257
3CC74F7EFB2E3CBC89AC46CD6206C9B120F3E0CE338B1F92356315119FEFAA02
5FF13A9CBC99DF2B258004E335F02F8434DFF4DF4CF8E7FC41A68C1408348972
9CA31EA97DB86A172BB4AB36120CCF37E3BFB614BD153E08E561BD702A382D2B
BCFD6A8CD506A4198B4BE4F63B4DCFBDD385D3197538D26DC7B4CD49F19527BE
9D7FC267584C2FB9443E42577E501CCD5F4B606E5D136562BCA18C6A0EE7A660
5613F1D7EDB78A2FF949A164AED18BD7CDBC8F90D00B69EC5E5987CC31F72549
5994BA57AE0919DDFF0EBA9A776C2A08B49893F4F49D09796AD4EDB6592CEFA0
51563B9663D72413DE03A62D13551FA83EDE8FD3298691E3DA527B295E4B51C6
E632B1DA5B80E8CAEFCE90E883BA1DCE431EE634C7275617733A9DF9CDB7C3E9
0A579278CFAE60E111E4A0157ACC99343D134F559B74BF4F4A5F17DFC6FCFCB2
1E7A795389BCE7C5BC4AC71B418BB14EFA5C14450EFFBF90C54DADDE7D0F7E0D
E1DE92800849180A10EDC5B23F1FF126BA428CB48E32DA37DE75B7CEF3AC21F4
CC63B5F02E3E323529A3FCC66BF969704437E6170A8EEC637B2AB4B4CC9F1C11
B1B0C1F6B71404DB786361C1CA7C2E32318C3510313F1B8FFE3A8531BB7BF292
4FAD526EC39ED9DE7916240C3A78D6FF67139F21A44735CF1230E526DE9CB3F6
AC95135D36BE50030B22923F4B204AA701360F9F758F6C0BF8097F16A9641E40
AF402432C0C4E42D170C9F84399A465F5AF83C5A4FD84831BB4760FB72D042AC
E6F104D2377ED3160C817577CEDBEADE4B4CF517E29B10E455068C4B34C69C09
97F1B7485CF1F5768ECD664B7AD8ED5C0D111A1498A356F221BCAB7B5AFAF7D9
BC14A14BE34AF88911BE19D835B741EFFCF0427B2BA25A53A83303DC4A93C568
E52A6D4EC02E20F78035092E7B51B213091C6976B6FE9BF2EF6193D150F96635
13BBE80401301F4C99C8E52A4ECEFF7D27E6D40CAB6DE2F62BAC286C2A5A319E
DFD13A00436CB78FD861C597DF58BC2940396F63DEAF7FBA1C8A65B98572128E
58A8EB787DCC9C563AA6B45DF2256FF64447E824CD6881FB6A4C2738A962962F
A67AB3E9A07220DAB0F2E33EB627CB7D3026FE1B9CE6447321572E58E40F0CA8
35AFABBAEB8E838A014A5AC89738EC0A632A10529853523173F752D5CA51CD2A
D00A1C0AEC2A45E2AAAFBAEA57CD363F88666881AEF24A7BE54C54D22D6EB9F2
A68DE19D399E6D4B0EB6F0B4919E538093F58EB686984EF020E4D04DD4CCB0C2
DF7E39DA2947C53C0613426766E0217363F6A119A98A3E34D88415747A83E263
F5B23372BB700DF5370AC197DBFA060827A1279E0ACFA402BD87B0192AC3E696
4B54816F6118F35792DC6EBA0B2A0236388298613A66EFA23807775B08ABE160
8C7E42F81342094DC3CEBAA49D94915383308AE48C9998CC604620F40F0966CB
08209A2FA877A7849167546F45AF05E39F8D6636E38CD39EB42C55D6089BED99
A644CB5AFCA2C79B081461440A630792506BD2F2154CC33A2893C70EABCF6FD8
C5859EF05BF3B7AB7E529B594A212C3C1615FC4787F2925F18011E199FA9585D
7AD913A0A4871A084BFF9A600FE87FE05F13B84BA0122C66487A1C9F88F31341
03108F700768E279E717E106D17C370767DD66F6DA82FA4127C5889647C2553B
BBC63C8CC84E29D1EA37D2DCAFDA08807171BBAAE6DD5D687DE418755712EFAD
FE16A7769E2FB6C176F4C63911B22829313FF0E8466F18DE14D43C03C3DB701E
8D7CEF983C66BC8FFD35586239C7EDDA8C91581241951D923735BAA21324819C
868D3106642686A8920EBB87BA85D7013823E6719A42688D44B05BEE1EBB039B
3C8F0CB2B02D229266DB220C461B5FB0803172361CE09F903A4A41C728B04430
B25887370454D4C349C6F7D2396C125D9BE1F7E7CAE2EF8EDA16DB669D672B44
CEA71AF4C9CB757EE8E051BAF41118F5D5629CC22CA84EBEB9F0E1B6B607757E
5184F2F0D0FD7ACC822ACCF93AB6AF38A586CA1B224478B3245C9ED53234F26D
AFB618B7080DE56C590ACB0B7D7A82A4CA0ACE3B25E0CD8CCAC870D565ADAFB1
A0145DFD7EA9CD9863BA74EDB93D799E5816A799D38647328171DFDA040A0B88
D28C2A631D62FD1EFB5C77FCE7E1103464560DB5EEDD3892E979668ED3E9FCFA
414B0791D857B16C620E128CB5444BCA33FBC1F996B25AE375201509DFCED9F0
653E4E87C96CBC2B59B0889017AA713F3EA7C96B35961E25D7BD56BE4514ACF7
5F1C354867E3F0391F95C6013B0D301B99D79C5CCFA7F2DC1F94BA85D862B8D6
14355A2C6B137118FACB5543674EA55FC8BCD6D84696C92A6D78DD076550DFB7
71103E0FB68457F89F64F147673A8A53AB7B99289E4790806E2CB3439CC95A87
85ED4095938BB29DD1EE38FAA000ED25D794C234878CEEE614E8CAAF4C3616EF
6E64FC58A2D4A9862D74109B0916E940D3BB668C89C0D5EC5FF1B5C0A2736DFF
38A7D2D53DABAEF4CA9FDAD8EAD2C3FF7ED997D9010E99AF518E06B74E0D5D9D
2040D5B3F7CB1AE411AF284BA50AAB2093DB5EF63228229A26DAD9FBE5FBE219
B77E2C6755C132603BDF01C8E5AF89C85ADBB3BAF20D03C954D818675317AC92
4A5A23A93C3C876D89A6FFA92FEC30614459A5DEFB5FB41594D4CAEFA22C9724
9209C5AF97E019C0DBC0719FD4C0278E8CA98CF1FE987EFF1F3E0DBECE592DD0
82CB8A8CAF51F5AB39B58BF577096C87A8EE59A6E089207CB1FFFC8E91AEF717
2C2969A5A4C598000DE17632DC13FA3645DD572C1B30C1F1BEA53489E53EBD82
93B1AEA438A826C8C1923A032907A35D818567883F94B6584E9540C6F0FA9E0A
627F845F58CA4A58DD080D8649F0C6F653C424DF1320E7E952547B61E5848B61
C8508A0B61CA09F7141E00328C1DAE355927386B0266B289789D4466C0176974
8CC5724433A52B02D3398E690203667005DD74AE76FF066BBDC8C666107D33EE
D9353851075F2214BA17BBE2045223EFD6039A150C4C748CD585BAA3B8027F5C
2895FB5A19DC45CCF0AC22C44B84C6F7F682E2D783E56F01F086A8A8140C9E1E
B193CB9F6FE3F06BD9FED5E7D0349190A59C54D1CF5084E204B31B389062062D
EA9464B38CE5017A9F0B5D2001919E8A71143DC119D51941A115CBFC4CDE1255
8A4178FF0E53540259FDA4B5B61799DA12610719CAD25354B9204942404C23E2
9028DCFD548262F64EA734AAB376B27CEC5D3644C0CC0AEBF2032A878F89D090
6CEEDDD1D63551D8B48B3A8B9EDC736959847278EB4F44C43A363D2C548AAB3D
D099AAF0B95937DF51A697619FCCCA1BCFE6260832075E15A954414EB9C4D5DB
200FE5F9B1F73168E6F0A3FBA506A8A13907FB033D0DB52EAB7F7A84A660605A
9D42F7DD1920476474CDC19DDD17C83CF9DD0491DE2814449AD15445C0D8C220
A922428DED950CF1D2831739581316170F8B0D84C8F21D3DC6636BD7ED823305
2F82FFF7969CBCE42D78A184F3F4CAF5981E47CE5A30A1BC9DD3C6C41BA5CDCF
7585BD010530C0166B464DB2FF923928F40A3D4874A0AD6047D3F4C68E5B28D0
02D88DD8319F6DA3D8C88C20EA0955255EEF0A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F430A49A3ECE0D8FE162CD1E248D809313ADB000F7C041138918982
FCC8BE09560EAA043300DE061FF0173A05B40C6BF29FF51519CC6E7E83E952F8
0802BDDCD89B1B6B5AE6869CEE06E22AC7FDF5B0F3294B8DD0F6AD17997D069D
5CBFDEBF6BE9EEDC93669AAE735DD06BFBE132790752E1409C5EB9A0FC606442
368CA7058DE00B883FEF4A4B682CAC1EC2F5E669138BAAA95D029667BF653AD0
D9C4D9CC3B3E6F679CBA13EADBC8D45706BFFD03F2BD5F514B8F0999909F0145
DB08C1F6E2B3146DBE13E8A5C1C8388A82A1964E0F5C9701FE4A5192783F4234
37152718753754CA3EFFA1CD3EF680B35407FBDDE56EADF7C8B6E89E54419356
3CF69DAEDEFBDF6595F3C695182DAF898CD2EFC6F578E7172E6DD739CD7652A6
BDCA56DD681FDB6ED8B647DF53BDFE34D1189AC71F571C4A665B2F7CD066B2A4
29A578DE24F3276435B87549343F650834263DF83F0D57C6C91958FE31B030F6
CDCAE0D1C21246EBEE14B279D7C4ED2C1C56EC2317D681CFFA0555BC68D4E046
626C54E1452C0FC2B641CC620BEFD6269F6F464AA37B8386BC97F7658F00115E
4345597690316A00508CF8D1738666D36E262232907F284422F06F4B5381B7A9
7971529C2C870EE16A630A5B59CCA1BF6E5CC7D76B4CFF1730ED7B488353E554
FBD539928E0BD212CFAA23B3CFED450EE7FECAADE186D476BED0685406E656BA
FAB78438B1B4C97E57BA3151685B5027341F086F6748501D919E96B193584538
DB3E1D4A39D8F1ED7977A74E5F80843C95B2F8FB724E8E9198EC8C53C541487E
F7890CB82740EFA0A7EA258CF4CF6DD3662363BEAE6F6ED6DE96D8BEF7F47D40
6EB3524066DE197C6A1023E8A3F87E7E01E097151674AC071981F815C42D1D31
3DF15AF851FBC220EC5A3AC230EE742F2E978B3F2AA2312C428ED990AC8ED1AA
40FB53DB0E8C5974B3806FF99A64814122BFAA49BEA378EFD9C11C45B464BFC4
66AC78C675ABDCB28372316C6D875956DF9EE4D03CF6363530DBAE186093E2C2
F731B296C845CAB87E8F6977DA3377070ADF6F41505F615E27654F6981DCA7A3
979677651D18EFBF7205A18613C1928FB7A4E9C6DAA6DD5D325B0A5F90D506DA
EE438517AE69CEE1FE78527831EEADDFA6E09D5614F1F98C1934FC8FA01E8047
4A36B7F925E1E7D5F25DD7EAEE92ADDA4918D5ED5428257B50BADBE3E11B7ADF
305C59350BA70A7845DE8B1E6636F5F30BC5C04A8BEE06CD4165B6D47DCA7E01
DCF2AFF7CD5B914EB868BB2A6B1706EB465AA51370F1238F4409D79E293EFED6
47DDEF10675B297D31F1591BAE3E0C2616B215C153B2089FF3D9021A6CC2B482
193A71E0038CDEC2CF45E260AAC3A1672F04B234C078B83A2774167310B89F27
77DA7B7068E3A41904FC44E88032013EE9D1D700DC3BCE780FF91E511ABD3DD4
45F51261081475C58AF2D10BF143622B125C3F8D87DDFE492B19B3C85AD324A6
10E810269C9016509275D0F614FCCF3910B3F0B2113BAFBA183188CD29EE31DA
3D0F6628A7ADB3E326BD215337586035866B69D53185F8056564BDB233147167
646452E6D58EF55EA9F4A38F38758BE316EE653BAE152A7C75C652AD59863757
F2C2AA3101B03CACE0F2E0BF56CA9026942B25EF963AB89460458BEE918D1769
6C63BB19C29D7F3B5EC70C87C89CAB4354F5033BAE3B58A0C56D641E301FD697
6E7A7535E7D83DF40785D922FB3AA930F43A3DF33FB6E0716FEFC16122BF8DC6
31F35DD4F8F63C2D8D274BF2909E71F1016BB9DB63DBAA582461CB828EA333DB
EDC20245F264F666E5E4D8DD5AC405C30B6D15D65EC5AF221F54593EBCE8C6F1
F0EA170BDB4DF075B6CB4F4C6EDA2327322EE7DD07FF83E4F4C1005F55DE0FF3
731CCBCEC3E2533587F99EDB0B7D0745FC29162C288206EFE8C4119CE3F41121
CB82A3E167784E6DF3D57C76E81FAC5A55D7C91BECD4E17AD22EC07E4A646F10
23A0380DF52A01D03230CF5A53865C32345112BC4244BD70319B34F94EABFF53
967F9DD21298B766E00203687B4311156B01719E53A89D8C582C3379D6695523
F686F2C0F194F0ECAF0CE7820B38935B195EF6DFF30B59481451B8A13441D25B
00AAE142396F065791FA16B05F04289221B5349320DCB41C5934F97D9F57F817
08CDD3224DE1B05599F386A0BDB1F0CBE8F7213E4AAE19EEEEC9FD78F1C64530
B0E01B0EA60247CB8B02310372F9FA0BC84CDBCB3359B16336A301D851394447
E57A8023E97FC39E667A4CDCD405A150D0B53B2D4104DD852580FA2E42DAECFB
81F1DA073F4EB6A10348715811494313803E487791F91933563EA49AA62CD230
A38263EF2F5439795058BF4DDC9FE37F61945DB1A510A95B4D88D3DBACEA9775
EAB2CF766894130DAA640820456A32D7786B6B3FEB49B24F78527EA3DD3D4D24
7F5604C167EF425136F39E8B1683E6A7883FF368A1A35B627D39CDDE29AE5FE5
1E9A357F9DB3D875D8FA00C8627F836BE5EEE7C649B332BB550C19CAEE17FB1D
607CBFD1CA9A41F64802A8021262FD206A425D461834A1E14D00F2290FE97BDA
4BB8065BC22C06A33521605101746BF2AC441E9A151169E6708393553F620D2C
792F94CD63408AD8B5CB38E30AE341C35629D1DEE79744D57AB161DD7DC21C91
819172A5322EB83907E664B233ACBF0D637B97862A89AC167E2265FA286CE655
B176BB862C7D4FFF2A4337D2DE9630123B68C7528165AB9DE32F2D5AAD943604
6B65F881E9D50759E46DEE1923D46A361D01A06BBE0F7D99CB62F16C7CFE58E8
2B603A2D269A6A15591ABA1BE8497425BC6A80EA43B4C0587FF6AB27CF9B07B0
C31B4FE3FA6AA02257AB80B3383851520D61AEF35519C647E7A67235A5DA4FC0
A50E98E2363732E40307C6BBCF064F19AA94B884CA8896F9CF7F24DF427EFB87
DC273AEB1D63B2831AA37B7F53406E734DCABF54F3AC2FD1E53BE8CF262A4F62
4B37673C679790BE40ABD4B97CA20D3F9B3E91917338E0DD040E58FCD50510C7
5BEEC23FCB24CC334272506C6BD25E2000022025D4A5562F5CB2DE1DD0AE3A3B
692F0459E879A5FDF477FB14D88708B1B8569756263B0A93A86B39DF4D2C0B70
4DC8AE2028E68A6410958A9E5E206A446723E2F41F3F582509BB142B7FDC3CD0
B82FE7941B1785C379CDB5D36B99E85DDEE2DCE96609F43FB6BD27B1A4A4CCFA
61F8AF7A205D3A9F877F8F9BAE74D8F8335E55EEB5603150E330284702C4813C
00EC6FBDE634972A1DA89BF2AB2BC649B63726F0EDEFBBEB258EAE598C2DBDF1
A0B4BA629C90B68A26CE1736A540C9E9F9E6F1031362C5DDFCE09ABF9FA96DF9
802C6A4C95D3C0115139212EE8971212F317BAE0B3BEB2B57D48AF935AA49868
053E21AC8BD709AC141014811BFAAC9AAB1ABA796F9B818001EE102DE6A5C6E6
8368CE0D849B02FB2C56103E6DC56C887D83F81223A8F2B73989269C60ECABD4
AD7E34BD2035A8E176985286584BEFCE2509CABCD9FDA8F0C71900316CEE6BBF
9288A5F3EE470674E6A2FC6A55C5028D61D68538B1499E240300DF2C23E21D23
2A4CDC0D57146608CECA8911FCD2AE8E724F338AF09A3AA9B56520A23020062B
694A9F6E3F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.1: CMTT8 1.0
%%CreationDate: 1991 Aug 20 16:46:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-5 -232 545 699}readonly def
/UniqueID 5000830 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0187316F83DDE3E2D27FCDF6C5CE4F95B6EE
3317BD91B7921F3039DD35FEA387D5CFB6C6E9DC84C178F3432994FC7FAC6E5A
ED41A1E2EBA350178FBFEB45944511731BA827167DDAC238FC69A5486B995477
C469E2E27493B0B711DF8E267D3D5613B450011921685147114106C9472580BD
F531022F6DF5432B2A4EBC51A8032C7F9689B6FA942D849B29709631613DA68D
4DF7B6F059A19304F40A3C3580CE3B51D79D42984194D4F178801720892FB6E7
61FF43C63F9256B5E9F4227B1378222BAAD4D52C77462DF01892220E11129C16
6C9E45BB9F01ED7C1AD5D8B4D72BE0E12969AFEA90FEF170603CDB91CB243173
B19A56084D10293B80A35275F41BF78A054DDC98F4A1FFF592463D944960FB31
6BE5F03960F9B1F213CBCC7FD448657FE388F10104D42B0715FC9571CC60CF23
C72560CBB8835A0CA208FE06676B3B48B093CB7FB2C0C53AF17EC5B372A9771B
BFD52FFB7062B4FE0106A01A2A1A1DD4EF5C8C7623EC9324A2CB3B402FCC1FCE
52BFC8662F8A39D5F1B41C97E7CE34E16AC28A1E94007AEA7D4C519399F1B7A9
48FA7DDB671067244F09C29F95DD60668223F45BBDA8B1C452E930A9F3F341C5
351D59EA87462FFB30277D3B24E2104D4AAB873BB2B16DA5B23BEE25BE2C8128
C4CF2F4F438A4E520CD864F3EAFB5363753B82978F6FD664A14E5D6F3A929348
5839EA752FD635619C4FABF1E1454510BD9D6B538A343BE748AE05B47F917367
1BA5EDB15F1BDBE806E51B294257D7087334165419A6520462D794D670A1D6E1
3BB03BF689391D056D55AD660D15A386E6D222C9572BDC4DC8A46EEC75124BB5
F0E8978FD6031A90E4768CCBF62A5ED8C8087FD66D2033011947634878BDC0AB
6501DA7E6D96E227068E993DBB0072F037CA4111C8C7D42673B95B781A85E636
7B77C133F588DBD0CD39AF4F6225F6986C9F2547E771FB9C6B850F002C569939
25AAE5D859A9257DE98D9DABBA02E955F44E99DC893CB2C06A14F306519D129C
0F7AA6EECB2CFF93E2D6547AA75160C12744602CDC27D6B6ECB3F9085714A7E2
2687EA9F5E757A592FD844BB2525C881C187F17CD579A37C9FCA2CF0AE9989FF
50A9761285469CCF491C0B5C3E554924FCE914828479512D8C07E90F14A4D1DD
787A5DA458BE5C5DB7E5A066B5E76A526A5299F72A21B0BD122F8281C43359D5
FF7EDCF45CBFC54FEB12DDB4BACC884BC6A76119ACFF65F47A41C769C7295F8F
FC06B8A6A049CE105D03E857B43BE57CCB7C02BCE941423876F56CB422D2F644
AE867AE1A5AB3C395269E0AE4A3481AEC3BB58B96A2C8E0490D320EF17F6E6DC
BE736806C743CC6291DA8435472565C650F820D5A368ED77E48F42BE503FD11C
ED7D2A2602899C403E45A50B31D401F6163A9C9EC665A42A6DD472013B91E6E9
9EB69D5B76DF4F91C76F5583FFE46479A22F2357EAB483323E334EDE2476577D
1B91E6AA57D0CF8909188BAC76699BF8CDD882B0D4D3A62EE6AEB62B33DB6308
1736A535EC7A9E4316044A304E87317355455A309320513CF2FBEB1C9D1F8CBA
536D8AF0A0610EC665F4494C684559E7D2D3FB7A0F3C1CD784837E7BC3654039
A8A2B19940FAC39309BE5778B1EC05483C0203EF201EA8158C7A08B7A45E9153
1FB9D635D37DB79B85B361DF5C7E89BAE5D905C8EF2BA6DA426496A526A41128
28672E28FDDECBEE87F486EB8388E5188A2646E29288E619988D065FDA74481F
CDEA7E1BB72E9501C727C38A77B3C0658A890B240C55AA3BC57054ABE77D42BB
D6BEACE879DCAC35B1193241B2BA05A11DB19A3A4F60CCAED3B7405748AC865E
2622D361C7F748CC8E9DB400971A84DB697E67361A87A23D8C9C7F0CA21EDB5D
CF3AA12BBD777A138D75B1AB57F5B6C980CF9F515ADD814CE4B493FCCFC8F579
F4758BBB1BAD569AD89EC65012051A6FCCC5198A2B5BD8007A4EBF5303884B6A
1B6A05805D00225D69BD6FA0D6052878D4D0760C4B78F5DC857BD5444C3F1999
E83043D516394D44D08F1B6282513D2DF28473887107E0D526DB7A0D7AD0DA03
02FC174BD5A1C29B494467CE92384914C8859ADDBCE963E0BE8C5526D40825C7
5224ED1D0FEE2F5D98FA36B1A9A43961F4E822B5F2277C3974507B86756A2519
5C585475F4829BF6A431E6399B6C7E8AD432927DCAE7025D8048AD4917112923
EDE7259872136EA6A0EC8FE446EF1C0F375B1A7A15BCAE0111826969583489DF
DD9D8408F52FB9A6FCC9F04DB6AA3D2A2D75EFFE746F1047A8FE1FDF414FC223
94A526C551E45A4143E25DE48C649A55A8B79205D980C2D52D2A1116148C8C1D
5756C267E4FD633F6C1894F890D6941C59A08EB51EF1E105192E7DE0CBFB4249
D718E84E841FBC76CF0319211DE510753AD23469CCB7AB6A3F3438336F9DA577
5B5CF30BF4B7FA6E164224D7FB0D3E57FB7C771AA3E662138343606CE1FC8CB9
7A0B342371385028C9425E623124C2F6AC680E12C2485AC8AC9EE0B4A5FD21D5
D5B2D6F235D5936A76B3A57C3A0F9E784DDE78A8DE388CB3524CA5AF190CB9AE
8C71EA4806BA106E7DE49F8399BBC6B90B09740D9DDC21933C831D55088B86FF
2DA28C06F945ED6EB592D85A16240E987411AC6584A242703D131264C9E7945F
C215AE45C5C18F7B6BBD2888BD557C29F26AFA404DEC1234BE740C261ABB0406
62A89C1A5FF25580A19DF13925E3978976E4430003D275FC6955E2C973D99EAE
6518AA24AE79184B77D5A1F4701DB0E9E0ACA3B3E65006C903BB38294DBF6E50
8AB5354FA170E31A39F76B473AA592839AFAF8ECD9FBDB3807FAE3C7F6BF3133
86AF8723BAAEE596F2CE3D3B09FF0BE5E8A5FB4BEDFF05591BBFD509C6C62E52
1330371FFAB4196AB37E4CC136E89918C1B49A08F8FF70DEE4F5BDFF41C486F9
C1949A0F86EB611B269E32E2BA054AB945FB76274F5709D960C610D6F1AFAD3A
1CCFE7BEBC13B934D199D07DD0500752727EE4CCB2384A425F43328711173740
A0617E87EA72F3C084213A00DB441E14443D9BB9437FBE7A777DB1F223F81EA3
A719CF20038B5533C6BEB055C3C3E9BB25FB412965C3743D1A32232D7B64B2D3
87FE2D3413911F826B072FA623E526F4D156DCD54A67DE5E1152DB97192101FC
15B13FD3CBFC98F0816982EAF19D805AA2740615C0081D4387446381396EF0EE
DC2182D811457FF9C728D8823744F6BDD6BD1A8C3E0FCCB0F95A4372742F7DB9
026112ACCFE054AC0DD40195996526A1DC1E5EF9B1A095C8097D7EBCCDC6C3AD
41F984BCE275F3325B53F73BBEC67F79D9CDC696F5C3EB06131E1BACFA5E38E4
0E343745AB7BDA6F243A652864DF64B23ED119C75B61ECD8D93E0F18FA6B4328
164EE403D6092D9E24F95E0BB1E3E0F1A0A1F827E7E986535C619B15C41A6B0D
0D9C2B2A0B3C63CCE5C4AF9C9BB3005AF2046FEAC79C2C94CEC3C5ED9F0C1EEC
859D88E919FCF07296DBE6B9A23CFB8026CDC81E83130CEB6E0F3A704241993E
E798597E03A2302EF29B670443C0A3F67EF859BE72DE8C4035019901712D6641
442CBF7D9C875352256128DA23AAAC170D170D794B233C0D4C4802F8C7172C87
9E275F28A67EB403D84A68CD3D7907949F3A4DE298D5FCDA98CE019A6D8472C9
70C9E04CBAF06F49EB9C997220428DB98E77ACA2E94EB01C443041000D2586F1
5910B83BFBC7DDBB6FF35836A6B08378FF2A2D31696E5634B991EB06DE27D815
50F7B0341DA80C13B8068FF1B6327D2F7A7F30BA342E3FB92FF97E91874A3187
AD9F5B0D9E017B56EBB518C2BFAE8E08E1F96D1526C6DCFAA6278AA1763FA2D4
19C4DBEA2DD539224CBFECB94C4112F97D0AC68F8623E4B33D798AEA192C8426
C2378519328FA6760BCE153DE3F56185FEB20F21E27856A50385509B84FEC1D6
1087A1C6F480848A6D870C1A087F8BA52F3EA6B29AFF9D2DFBC5EF1A4D793BFC
F7DCAAF7B7B2AE5615E0D1059F734D693AAFB667AE2D9A7BCFAF993E43131E19
655B26CA2D571FFF7D7FF7CFCE3D5F6ED2F729C5CE116D22AFBA0F2466062AEE
97911F9E687C461F1AA85342CB451020F6FD5F04668B8FC6F53809B7536B1C88
2C83D79939EE21216142329E4DC457AF8C055BAC2F808B63622A739DF6929AF0
209D99880F828B2321446ECA2A0E98BFBB6F4FC0FD54888AC7E8A28594CB406E
1A6C7FCA28F5C61991CCC16C836E1BDDCB180E8DD40B89A64F6ABF9B0FB0813B
04AC81092BCAB17D33BCD88EB7945E2D0A000AC8AD8E5D1B428F7222E81DE429
3B699EE13278B984FF39F62C0CC419FF5DDF083F145EF1450742A2E2500ACC12
02BAABB4595C0B7EDA45977C146F4F0FD2DA85A26BCC1051D27D30941B132AA1
E7A5BB8669BD19396A9F0477083E352D427808FF7C4382BEAE0CF9404657436D
D2C01294F065A85F67F44ED3DBD07F97AA6E4A67D6D3C098EFBAE80E147EC8BD
824346C1A03442C8D5892D7CE1849FB09158D1D1A47C20DD2A3748C6860A8442
836726056165BB89EEC35FC5C9910904C7E333C79FDCDA56AD0ACEECD8FD2865
7A9F79CB79B2A65F82C05A1EA3CF3B70AD531CBECAD8EE4F369D3E50DDB2E2BB
89E912F40DDA526CEA5E99E4613247BBFD44B06AA50A2E555E9CDF98D1975A7E
83CE1F1A3444DA6F302C8FBD6A186F344051E5AC36A0835B9B40F185C407DE89
C5188AF78F99E30DB9AE3AF4DBAFAEA91A1E74F5F7AD93EF72615CB7A98DF7A0
E720D0B536558D209F9B313E0A87342C31716A470853E9A5531328CD568E12B3
060AE867CDF4BD11304AC02ABD32E96DE61C173D0B9E98E269AE530EEB193021
0F41DADEC4C0E714831CD16767062F3D0F18911BC81A27AF99BAF8E7F270FFEF
C0748E4CF380A3575613DAC92CD758EE3C79BD6F67D0DC8B5D60029C2CF3319F
C60246A3705E21D9DDE6AC37DEC6889E53A357DC863681F421039E39D6C66543
04548CBBCAC5389F258BBC2A9E8BC4456C9F651CB2075AE8B82E24018C4F43B2
6ADECF2BD428207ABD762DDB095FF023E03023B909778DA448F885D24A29AF4D
ADB8738E73A6C767C25F21AB5B3CE9CF927B8C20CF31B9717769F6503ED7B40B
2CA2031D8D82E28579283B740BE7124FA7CDC59CB7A69D502F5978219FC07253
FA99077190E87BAE13D994F3234506BF0B7A5C237EF8E792E300432D7065B714
608D899E43E176E09A7D8CDF5AADDC72D207F62807833B367C50080D474B9719
CB2C11D5D531EB5A5F40E3F4C1FA2553F0FD75BD9C9FCA80DDCEFF3780B04EE4
6C973FC1134A01D28DD992849C941B4B2FDE1FDC1B3CEE94D493A896A9C9B85A
4292C390C15E2726C86B1A866F5A45624F2870BBD06305D3DF72442693A2BD08
908FBD673F2941158819EA0CAA34ED50750CA81CBDB0ECDD0315D525559C2E97
DC03A8BB6A07A1B53C7C8326A5C5495CF0A124DA23BC24CA1D45AE96CA1BA2D0
C1358C028CAEFD08C924AA41FFCFE9F7DC6B56E84AB954392935E5AA7F35F388
9AF91FA8B0F8E48A345DDBDED9985149102841CB76F316D20DB3F0AFDF320871
4345E4FB96B71ABC36BEA861F591B76F6993EFCCA3DFD97450FCD3EC43F3E37E
E08BA4459C7F50701ADE6E2FF735C57FF63CB41C5C8D11597B5B21EE3AFF9D04
AAF0BC4C9BF3864B719C8B5D3ADDF13CC3D643CFFEC362F3D75BD95576A22C1D
88078E6715F10CE384080A255D6681A569B05E3733FD111DD6C92198A41557F9
A094C2D330BCDD8CA209B827BC020FCD0DB958C70354B9451A666CA5B917357F
2F00E6A646FEADC26D346A845A2BF49DA791D5713D8FCABC06BC8D38EEB8FA39
95DF24B4B5B05BB3F5B473DBA9303186C6E47218A6CC9975A458E96E27FB2731
FE7EBB139030D2595CCF59139EF01BFD0C4FA833EE70CEC2D218B07DCAE52E50
8881F966811E8962DF2576FC15679A5D4875893A23B4E7CDD0E736B772FEC4F9
FCD84169383EE6B4A53AA29EFC5E120416974D500157B179E7D0A99D8E330EBF
722B77CEC4B45C9355F9DA6B714ED07CA0C9543DD7844B87122CA25C9C2C49B0
36C02955411B2C7A6BFA0BDE21FD3E19E87D3ED49DCF74495B6E7C7BA8C30A10
5FD1ED680555607DB100634F8F90B2873798FF2EF3450DD1C4C817FBD0A3BDC6
C5E5223777E2DDA6467E8DD3EEF37E15788F983224AC185E86CC664E991F4E2D
9735EBB8D3E7B5239F10297677FB71BB68580CE519D65CFF6B183DC9D0AE4963
53018C318BF456786F9036A3FC0BB0E6E0705FF2793C6142E0E19FD2C13E23B8
0073A05347454ACDF993AE9D39A86A660C43298D96E84D03ECA782CB8FC4F617
5738FC707B5BE15F86C9EB686D39200DAE9AFC9577A8E7C02DDAF9BF6C6A176F
4CCDF135887CCBDCC5F8E7A3605AFF862FB0DFD586AE8E13C492304137603A44
733DEA426CD89318C3B34D0F43E232AC42831661132B1F540A4F05A2CD1F9299
DA2961499DB6F25518887AFF07EC27E977FD4EC7B0675CE49576CC334AC32B0B
C08FC356F55822CE9A5EA79DE76EB781BBDF62A067815271EF672898C8CCCEB4
7B4E276476E80C932E4FD36E330B5A9FEB7E0C86B8A5FEDC6D8E299A897348D6
DF11E697F9210B237AB67012AA6582CCCA5A8D955A022326AD6EE5ABE48D1157
5CC071F78A4F20492F484E5A203A84663DCF560BBD010D952EBE4547B02467CE
8FB3170C65DFC35F6E8B99C0CBA222B31E71A5DD5FBB28EBB7E38755BB4811AA
E14B954B3592F18163F11D4D58344AFF8C5F1B931B4AE3A725F3A9D514E1369A
1110EF6DA104C1CBD3441ADCA0ECA69BCABF8BAB451586096F419B626247120E
212B997C5C71355F6C4A29E718064FE6FE7DDEF0252186140B344A886D0DAB3E
24E630BD9CFBEBFBA6EC14B1F8C335E4202DD49F80C7AEEA56716C76A8E218C9
F6A233E04ED59B7E483DFBA4C861EFD46C28C68CADF2BB8C89C28D2D895239E0
B69684670D5306813E87CC9D3A363E34F7FFC9C318B6F00C80CF6B016E39340A
99A9CFCD2FCD8BF4CAE392E85CAB16B84B9398C83986C7F480836EDCE994F83A
598573C88494545A9A46D640AB9CD4DDBE345CA1F755A39CDE7B83F28088F3A7
EBE92CECF96673D2478B34FC127EE8402B9F10F402EE3BA8B8623B86F8F0A8AE
AB8E8B8694A748A3B1421AF5B136A729CA1A515235842141B2DA7698F415D166
AFCBD32BDCDA7D41FBB143FE2E4A76AF9F17C2E47C55505F28D9F6F62A1BB1AB
A8D0C6FD95B55F86900712463638AAAE46198F39CC3A19DACD1F2AFC356AB970
E7DFABF8B7AFD4254AC2408DB1447052FE60C8DAF4D513BAB3960307482F22B0
FD90BC29EA9D588C1464E328D82414935F899EB9FC45632AD548406D125F6C94
7DF912B881E6C62550D7F2ACDEBEF017293992ACDC256D316573CB92EDF5BA90
52D11519F4DC25DF2423894084FA97686747575E6CD7E45B023F1A743EB52E98
5D55A90441E22A70B0491491C93FF7B1E9B25DC5A8AF79EA321F971C4DB8000B
96FD0D5A9EC8209BE8BA388D3EB543FCA763E798687C89E0E297B2362918FAA2
16DCFA15758604C4EAE736A3FB8F3BDF80B296849F715CF2090636668F690BDF
96DDCE8471C8E169F9685D7D6F7F118D3B42FD1CBE7F2D41684CA8129575D245
1AD9488971CCC773703FE47A9752BEE6E64DF1CAB05BA9A018473B4A58729974
7F5B89959E18C220C81237FE003EB0306B9C1AEE9F5C52DBE4469A341A363315
777E99E46703B8CAEBBD83B359BE2AF71C707A458E7880613D17A433748C45B9
DCD45EFF83FBD6129A2F15241E7875ECBB1843023CD41BBFE11C3D7EE8057419
106DE68043FA3D5904389603EF0EF61637A0BECD126C60350563316BFA3D8D7B
2C9A733EEAE5D0779884917595D07722D03069AF4D2EA88CBE01AF1B0739CB6E
86E6A7444D5068BF8C5EA07DCBB29E41B15275B3501F64A7B836DF7D5F0B92B3
78D9478FF79F31938D6EA21E56BFFA48FF89DB195CB0E3AB1C2F98DE60304378
4842E55B4929F2072EA8ECBFE9DFA0BCEBBE88D553164306C6BD49D71EDF611E
23DDF5FB770A8E68DC14E23DACFA6FA7AE6F71FEEB091EDBE8146843EE0AC70A
28EFB64F9DF69C1EFCF123A8AEAF20D30895622EB4159ED537557A1B4B036DB1
25B3DC033BAEC0630C77F4E1226CF72992602A1230AF73654E288805FC836546
8260A02F59FD779E4D06F2BCA65FAA5453D2EAB1178A3A1F0F1A6AD33F4B4DD4
31A6EE60CA2CC7F7471A0AD911C49CA9FEFBE0ADDB24AE8B633E9F6B87E8030C
CE8ADE6E38EEC0B4F7246AFB97855F2B86B4F3AF7D517D7A9363772496F4096E
3828153E2D7DEB4F1A92CE34D66D548D4B026208B77680D52ADE68DCCE2B7F18
001217FF89BFCE46FDB5ADB18619528F9BCDB5E7784AA97D7B59664ADEE41556
811CEE474F67A1D52CAFAD979398F24F4950CA871EBF237283FAA7FCFBE7FC4C
C6B8A7ECFFF6D3BAD70581067B907390AD177438240EBDC1FA3F92DF809A72E0
14201ED08798C952DFB556B7B3C490C53CA549EABFA8DD81DF288AE7954E7097
A42C97C6255B4FB3E3552410335AF0DE997E36F9D36FCDEB3B20FB924179D66C
0868F7126C4EBD581CB2F411680F9176CFE2BEE39FB23BF3D1D9C9C804E7B932
B777FE8284D4C6BCEDA95D21BEE9E5D66D702371EF27BE57DF3740530B4FF9EA
4715CF78745100F857CD42A58C8971DC40BDA204C79F74E13FADACC92C0DF95F
C39EF2E73D4850C0B94256645BA5D5734447906163C1F034359AD5C28C186BFB
1E4369193B1C2FCFDBB3214E61DFA6261DCCC89F298A67AB2CC4988C75808DB1
9FF57A8BBAE9F3F4D49B8F9148728035D5A9A33B60998B07C24230C89760B827
22D6DD3CBA6E20CADB20F49C7939E8670B4D22BF39A148D2D23F1A89883572E7
0BDCD83CF9149723340FD50EEC23F63207E15670433E63142B70E41FCFF8B8C3
A34DD5EFF8E465B5B7E17FCE429420E9D4ED3A948E05D7B8520618EA9F097DA3
8B4D349B75800BBE0F50EA450E029126F3E7422E0D90225132DC20AE6EF0CA11
74E6B9369687AAB03408E25A83C555B634411AFBD85AADED35C11AA9ADE76890
EF9F78A51E23D492D99438BC92FE6D27FC108D1035E8F560B54D9A38B202F3DB
B750FD9470E6047876BDCC465FC912D1A6B9D035E66E04792E0445BEAB6918A2
53C452B1CCCB89C15B4EEAF81430C96E30917F530A3AF28788AF4DF9CEC6446D
6B4AAFC9859BFE1F853623CD24CFAB3F046B0D4F643C239863EA408097ABBD50
A6C97229FA9E9E6178C02CE134E8E1358E75BE315B185DBFE1D267B3EFD3A16C
A5D417833D9D93DD79F482953B823706F95CD0E70C15183E32FB5878BB49AA7E
39B83321A418C7BB7370D8626926F007B067C4EBEB6BDCCC33058BE656363687
5F35218AF4BB5E3287939E344C1C5D0CAAF5679B63423330FC48E2FA822A62E9
1CF86B832E2AAD19D2F58C711AAE6356E864FB3E89EE21BD22F23A49FBE4FA2A
B72045657492A89854B7B499E0090071C7B93DD9A2AE751DA912DE29E0589233
B85CBF327EF3FEE27ABB010C093E8034BB024102CA925EEF9FBA7FF6057C9C9D
E6F5E65D9EF50D5D4E6F7D3A7B8660D2124BF9B1FF128A4DE14BFB80B0C7F787
623AA434065BA7F508DCA1DFAE68A601721C5576E4FA9CE61E976442CAE77935
5620A7F125E26E8AED0EA9BC8169C5246D42E0E973A39BDA2FB861516E0BC7CA
EAB235BE1B71AA443C67A008CD312BC423E88BD0660B6BBB9CCAABBA985B7E4D
4615971A8A505927C1E547BD850ACDF3AD6AC9D9B911C3CF2FFFBABA4D157E7F
1F28964EC8B3EBD6731AE45177C412DEC09D2F4E67747AB29A9F564D8591E871
5CDCBFCC7769912974F8CFB79A96BCD03C1DD8374E88DD89A20B380A8041BE05
E19D75FDEF0ACE3FD15035213976BAEF384C5FFCB16F4530696AA30A483BBCCD
11AF0F1C89C010AC11D6AB0CB4802A46E87BCFEB07A98801AA7FB0CD81C33A77
BA17AD5907EFF66FDD92E33A71DE51163099656CE279994E420741315676287D
2257CFBD0B01C9BC6D06E0F1C83D6006EEE9579C1254E95C8EDA21CEDD9454DA
E9AD661B1738C2B55D4B45FD33D273670D5859EA1FCC65436DBAC74B90DDB72C
A7C23ACFD7A36011591F0FF0467CE7CB395876E05A3961EC4EA1822448283377
1B319ED6045BCED838ABBDD37149B433125B79894A7BDE45CC6C954285A4BE21
83BE86895CDC7E3451C810DF5EEB4F4ACB2384FD0EA543DC344F046589513BB7
2A54A9EB3ED0BDF942F274439504C0693D8817B2B1D2E03B266A80DCED2BA80C
7B5E65271FD602047EEAE71C9E035AE8674D70EA3244E66366BF07235B08F416
17EE536E96BD54E7528484B543945D90CD5F93C8C6D9AF8BAAB24B4044036724
C80E2801E3A5329BD6D343CA1C0F9E502053D65B115A53567B09AE5133D2164B
07D715F03ECE539D864EDF24D551AA9CF2003E5DF0550522C2B36EE444611BBE
54B27C8FE77F97BC6C7ABB2477938FF7C2CB210F08276D3D0E517974FA379C58
B7802DB45700D92A2BE222CAE9B8B2780A40638B0E80991E6FED147694E1FC5E
D119D0A81AEE89D366F687F5FBF6A583D4EF4CF0A1C8135BA77314859F8BD477
8A79D8FC609289BB9B9F9D895CD45831624EB52B75DFB8879A7D90FEAF9ABFDE
3F5C261E3D7D85FF43E98163D89D321442AC6D5E9DDAD11B706C16EAE7478703
039F85685013F4BC98AC3F9DD006C3BC8061A57EB5B543A73483FE9156B213DB
8FD3F35C526439A32F2739F66204F98A597C02FE4EE5AC33DCED966F906AD95B
3B56FE0231C2A16ED6BF22D6655BFE5BD5C484959004952C559359002FB8D48B
024CA09964DD28C22D3D66D69F95DB26966D03291687869DD4C200506B7530AD
C0A9ED7E1364A3B023DDCE246F623206B65DD52CCF1737C31C96BB6340FE04D6
47DB34C676DE7421A731E9BCC1F32B4AEB0A40AD1CC2B7E85836A0C6A5979A88
2F82A4F8744953C8E4837F107FFC7D06BF0DEBC39BEA1DE3B37F9273DF419B90
F159CEBF6A020F05FAE1E6BAF6842CFE7FF45D65912F2FBE3CC6895005D19DAD
BD69362F9AFE2988BB7E0DBCDAF3A30B1FC75EFBEA5C573D5D27475977B74310
2D08C56CB34790DAC470F3F66F5522ACD6C0B7F41E4D8DDECDE3D66C20AC7EFD
3D842C3F89D915F779411300A74D2149EC0C739D2D81E3D542F5D8BBB3339950
B9F3BE129DE942ECC7DFE1E6081845BBCD7D766D8EAC81E309437512234EF693
DC945D451D8D8357C4AA21179325C9152603787997F4D90F7804462F72AA75CB
1A21D6707563B8583E155BE9528576DC916C34724A1C9D43568B02D7EDCA1057
7324B1FC36DC4B002D6E12BDC8137E9AB0DC9D945CE9E40A705699B8729BEBD2
4B69D87D379F6373A2908F38DE225A9AEA8F8744CD9BDA6EBF160B2559D05785
259F983A44A8552E69746DA7B011A284387E25F8EE4815A1EEF655F87C10C508
B4E5B6346670907E4870C77CE0026F501C73B23D6EDB92F83947C18FFA12D3CA
943C8D83036C4CF857C2CA7EEE329C3B8468E60FFB23F8C41D2C8DFCE3D103EA
3155CE8FBD32C61F93743DDAE34E390C3348BC508AA2D2BA318A62F033160915
6D7362D07745A94A1477FA4165CC838990E4C550426AB822DD6CF506E0740885
FAD9C69D2AF700F5352EB4A800C54EE9465106BA9F8AB0F0800DA59C55636363
DE9DEB3C91E8AD28502DD4BE6627451D4165A82AE59C1D69326EB85560294A14
446C18894A4449F650CDE14C169012BDF80B6FC77B0500664DA1CBBE61CAD17C
83D252218DBA5629A8FE20BF7F2D9D2E087F0E9A5E772B6CB2F51C17963C967C
83C28B19903D84316CADBEF94D5C55DFBA85B4363709EB0F6AC34BDA7FAC1502
3B75BC14F9CE47856B7EC75BF68F6219D0884B07F2CAB84726C60B978F98AC0F
3D5CEBA5F6928DB02C0186CEEFE747A1B1C62BF36CB7DE32CE3617B4CA102498
624283584AA061A17765BFFB13AFCE3C23638D095DA3476571318940C1599C6C
521147B2F72744CB137CEF4D1DD9330E225C70EEBB861198A303EEF0EB71875F
047E17CF00B7DD2E5EDAD4130436359444EF99F7AF9B8BA70C1505118E0EC353
C655ED12374C79FF41B1F42463E1AECD4259D8051F0B98EB670F3DD177BE1240
3695F0D0BF342A29EF681A576043C94B793727A7E1ECDD6997CCE4203AC7EFD2
023FA262BF77383BF8919A8DCFA631DD62DD75776427B2378E707744EB0B0BC7
907B8B1E99E82DD6BE471451DF2CD262D37D3B6BDECB9895B8AD8FC9D3F23393
4FDC14040C44C1C60F2DC84BEB78CB06224431A131945036A7390BA08727A615
C71551AAA7E64432C7D0EAA36CBCD663CB20B03A05D0A7D9C260898328A18805
3B0F8C1F19BA306075FBDD4932DB3509DAC92628BD07892F2C3E6B38B40AC05F
D0D4C8F1B3F6FBF67D62054C55EFE07C56FA39F5BACAB1A20142FD0FC2C69D21
37E42D69BE56654AA639A3EAEC424E9D614409A9D742DB5E561BD88FCC1CABCA
404DD9195E9F1C857306AEE584123914A36EF22CF87958F93184816E3084A2ED
37B76CC90B8D3709905171255349CDA28B889ACCEA19864597840A633199BB49
46BC4CB5FAF32B7F80E5F85EA84C17993885108D7A623C19E39E1CC0295366DF
EAFC7D9C4D58BAEACE9DF9FBC66FB6CB8A9186E165AE08CC60B51CF4DFAE2118
FD6A89A6127E82E0F68A6D1A9646D74F13EA4D2D03FF2529CF71C625826E336B
0354CFC50F45AA7E6F886EEDB7481323030F2B438BE30D5F57DCFB6F269753E7
397775679103354D245E452E490ECABC077850B7D5739EAB1671A4CDFB209EB8
145F696B89611E331ED1F696D3B19ABB9824E3A60D3DA3CB499BBE87EB8F39B9
97F1E9139015CA2BEF8C6B9CFEE8B0F5E084F0EB4DAA0C5F96D7380932CB2AD0
212C12BA4CB992BF9D1D05937C0195A6965077EECCD2D329C4EE22A6DE8F84DF
2A9DD34B5307B2FDDBEB50B222340570D1DF620B6E81CEF77BF0348AA831B1A1
5ED0AB609596C5343BB110CF3CC99F17A76FC764CFF8082F4527FE385B4E49A5
7D1A2DE7AA6BCC556EC90DB79E3FEDF285D6A3A45D8708DC94AFBC15D9B529A6
8BE78797D6CDE4CAFA91C469E595AEDD06FE02581A90C06BB3D6CEF95A4D4480
6F8A9044B76811DA8C840CDF73057E551F148BD71BABB2764F4F9337B63E5583
3208798B83B68E7A704A0C31463124DF92CA0743720D9E632EB225516515EF0E
5E75C245E3CF635A24A145146F3A176DC9D7FED8FA1640B4826A8E38A96974F4
41A4546A1FDC5040D1D49CCC8E46F277287F8543EA8093EEE95531CAC4917C25
2937491F896A4FB37598EC097D6CA651A86CDE2B85072EFF642227063BD79D16
2893C552C4E02C5C305F917A9C0C76834C9D78859DEE2E037BDB325A56EE8DEF
9A29B067CB4DE9906810F1622BCFBD63BC4CC98CF97BC3460E4E501C3D419743
45074FE915C07F0D6B9F22678AFEFE906A9B1688AFEE590C9D5561911693C2DD
977A80645A21DDD839DB52EDCCA1FB1D5936B7669A5BD6D203E27AA8C1892A29
187C6A54065D49A3ED9EFA2C816744074A6E3D83D25A5F1F1E0D0448565B9B0D
C2611FF6787A511C2EE9C5EBD29288542EFB4756F21D8405AF069E93843D0BEB
9240780C59375B5CA180DA87E23C8E3624D5899A1EE717D67AFF6F456F3BCAF9
3A01DFED2C32A55BDAE0D5F01D9E1D85819D688EB025B60925A17AC273827D8B
C23C0B6ADBCDAD15C1D27C7C14D512A9B7D819FF2140B873C16B4FCE760B6220
21E0BA5C0EF19C948E13F17E4E607364D676945B11FABB6AAAE46C30FFA905DC
7BCCAD6B0B841E32A91104D98D5C2FBFCAFE746B14D2C0F5C06483EC0D13D966
F95D3BF6EE638AFADE93E6A682435529A781272CBD42AED6DCCDD4E7381DADF8
264334848DAEBEA1BE4C0CC7B4657BD387CEB210E82900301C09DE8247894ECF
CE42521FA908D2ECB0F19141A917969CF8F092D42C4730B5B6B3BC5AD53BE2B4
966EA530F373E8E995ACF1A9CD8DE9A93E5AAB2FB2A671E902430E09795D41F0
147F1B8831E77180CF39231E6F398AFF34D2D09374B15FC8B8FCF69F0AB54C97
55ADE5D80182F2029E57138B7124D78B092FBB750966665B33073EC4F281B196
2A8686E4656BB7D434A6DBA632C48D28F8E4DB6FD9EFAE3A9653698C6A0414ED
ADBF47C0406CB056A6C47E57FD6D92195B6C40849C4E1F2C26E8F168150BEAE9
14938C49378A772A87716BD382FB3522A24E9B678DE69638A97206711298F868
D375CCFDB719CEFE1E8572480C3A95866C3685AAA9610B68E600C2E5BAE03C44
FF9355656392072D5DD0974B858D8F883CE4C3E5768A92CA0928593D6CF4A612
927AD18A86BA312C88ECFC0A40B6FC9D89DBAE8FA8489AE8C148DE3B21FCFAFA
0810E35493A100619C18E28D99C5844EEE402C624E4977C5D22555BE2C0EDDC7
8EAAE728A8EA62DFFB6C5B597C15E17BDEC280C403CDCE218277FB0B7CC42839
57859C2624BCA7CF6B22CB7B139B706ECA6C1BFC83A8C031845697AFB31567AB
33096AAA75FF204CA556FCD1CE48A5AD97BEAF8CCEA84BDF4741CC7C283C65F4
9F15801375D6D53AEF16D45ED8273DA8CD90AF42C7C92F54A3D54974A1C6B454
8116AE94A92D3F3E837900AF22FE57F0A72A2F6D7C822A443EFCB1259458AB15
35952AD9EFDAC65B3D8A83BF1E541E68DB190D2E2E49516A3FA135757A180A15
4AE346A426D55C9FFEB28491D18AB862B5EE0067C3D8FAE8DFBCCDAB9DF8E279
7B9569528770B4623BA571DA3FFC2852EBE8335812017CE8DF220EADFF39CEC9
EF1B6F49144A2398DD1465AFCD4E0DBDF120C3190FA2200C0267F7A64187155C
497B3EBCED6FA80B0B9D645FF999D4FE29C2CACDCC1C7D68F43581D3B0AAB18C
34348FF6C3EFB6D0DA938192B65AECF0FCEAF3138C4651BCE76783EEE8273185
044EDC9D6E58B62E3A7B02C3CBBF66DF614A5D9ABB04BC5484520170F9F76B94
03E4839C4EDB0C9D48BDCA254B911BD3F5BC32E377FD1381C88D4CFAD204408A
48D9CFDF579557ECCA13EE294AB5C051178F04DD6B6550CBB43DD936CD4048EF
B3828E4EFB9FA8E5FEAB74236A7E62B4C6B95978D9C34CD68D748938DC5C7E4F
81F556C2998D54C7CBA10D3BED0F21F243A3F5C1B62351AC7157A99260317333
736AB2D4A170A2ACC14CB8755D32932ADFB1A02A3B999039CD9AB908108621E0
6F300C44A4D9FEED3445452FD40D497287041406EE4B681C22A79C4B226E6C61
AFE3A8ACE2616265598A0AD69EEA2FB6BF0D4B955C6E428B3001124569DE6F91
5AB5F30916B060D866C1962B3B9A9F236BB5F845C196F2242507E272D7560ADA
BD43FD99DBCE08606C74E197DE3374A4A8F9B1299CD0AE36B37B24B12FA78B14
7914E141EFB6342215D4EE95BABC279955CA7333D798F73B01A37EB7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302532464BD3A87BB4BAABEB40184D2D
419B5A7DF9EA38A27A732A88BD23B66124627E76D37A4CAB4944ED0B7348E358
1959E74429818EFA1DCC661B06D4B985C63669FA8DFB8A050D2796B0C7B93523
2A7FF518201937BFAAEDC265E906942C2A748291F69278B8E50567785E4CCB4A
09ED24C43E242B5261CD6DB1C55EBBF3DB35668F33532A2A353C124A719CEFF7
E7CF3C2C7BD645FB2B0CDCD916A746A7209BF0B4AEFDFDC4F79C86BE1BCB1C00
4A263F2D9623A0708A631DEFCCE91436AE4B631D9632C7FFAF5D8E59FC9681C3
05F3661FE8A5545E66F395FCFBBB8287FF139D1C4829E086D48F01DDE30559FE
0109F8CBDC7A38B92C1074855AD38AE89E0A16DB749FFFA5BE80AEC1467A90A0
1EC5D9AFDF444D0675867F91545AD3370CB21EED994B1FEC26E67C8093F4E192
8F1EA4EF4DBDCCAA26D3F307396F01B8BFEAFD24B7E103A9E7B68F040121F614
2D774ECBE215EB45D1F86BB99E498A5457502F00BBD79EFCCE2A2032F2B49FE4
EA0F3B0312D462E412BA83C7D64628D76D8973F8FF590D62456474AE185EFC4F
EC8ECD578F1B043D4979B650991C16BCFE2884EAC2959E1416B243F449234D95
E1B7208EDBE331606D63E4DB0AA08D6DFF8E4685432764130350F7BB4662039E
19458273255D626F6188476BB70F03431ADC701BD22592B36691B1D5772AC8EA
05F3E72172763DDD8AED95E4F8C714E4CCC790B84A00814A6707939D032D158D
093223435DEC823A9ACC161215F1266B87C1C1A1D315C416F36DFBB353AE57C8
6F874927F3837DD9F3A906E8BADE1F0524B8E4392AE49BFCEBC3CEDFCE014ABA
2A1CF434A0CB55ED158E2D3E4BDDDB6F5FE24E48CED96FCAE2AB1E26C891B098
3B01A5C75B8A86858FBAFA4E1501FAF96969F11A98004A11FE6A0EA23AAFF7EC
52E4A86C1E72545A6696B1913136CEC8E64948D83C4C8AB9BEF429B19F7ACC34
26E3FDCF777A59D182B13A2BA9068B7B9FCD46F77EEBB8867536FC51256804E3
A839457B03A88B58EA3B54C3FC9F3E78676EB740971172392EA5A1826030BB5D
8E61115A37D11DE1F84390C4D93D029B501E1191B87EBB434E4839D621B3C81E
7F46B770F9BF2469FFCCEE56BD3DEB777D2EA2A0ACE448E2F99A561871854CC6
AC2B5CC1CDF10EC3F1C762875366E856B113C9A090C2F5155E3DD3127121B995
908FC14379E82BEBF9E31863FF7C6AB7BD1D18D23B4008925859E6CEB69A3929
903D2B2BB74C1B9E88C23DC5D10BCAA57E397ADEFB62602525A935C2905ECB60
856E55E324529CDA452B73BAE3842072B0E3D2F9DB68F53C385235150657F367
DA1B1BDC286309C03B90BE30EAB5E0281A088E5EA60E6D2D324DA0C5511A40E9
59A2C8B5AEF9D6657E5B800AE15F414950133EF77AFFB7F9157352CCB534C4D9
A77BE69EA04FDE4C181DE1EC00340FCCDEA913847BC6E84907D7CF3A4A53D101
2C52B8DA53B17374EE63054FF355E6AE201B4DAF33FDCD8922DA9213C4691B6C
54399D1B511C2FF83AA4B4BB59C352EBBBC30110E592C50A98CF9E0D5A951C2D
54E9652C7C478F7D5E7BE47DF4A0E4ABCAA655301B2C9800569EC925D3A2B2F5
9AF38CCE0C79290D9F05D74E364ED1D30ECF6904D380D874F917089E40149992
39283184401E88547383F9B43F16E0F59EB1649415AF55112EFD55DB73A5AA51
9EEF339FFA30246A430B4F5918FCE4AD5DCF5C70C5140E3871D87098C32AB5D2
14FFA0B63AA8EBA988D628F4E12E91152C6BB3B48C99F978AC352031575B1127
1B7DCDEB4ECC031E94BEA0C38D735597FAA9698C341AF300BE37853C5C602E0F
733A07FA36E581E39B1E156A716EC652B900F764B1DCD362B7C797A712F7B673
6E11F5E5B47C274C764C002D08C865F5E5AD539A20020B16B65DBCBB38116A41
537FA42E0654F60C6C55E70D579A3E8B4B98E216211335306926171B54A02B2A
52F5B46D82E35D879892CD76ACE6044A421E17A4132F2AF52BA78A4EA99FC88E
6E6031DD7F3E10107807D63911B46E2660648BDF0DA624605BDA3EAA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LCMSSB8
%!PS-AdobeFont-1.1: LCMSSB8 1.01
%%CreationDate: 1992 Jun 07 22:46:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.01) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved.) readonly def
/FullName (LCMSSB8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LCMSSB8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 65 /A put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 127 /dieresis put
readonly def
/FontBBox{-99 -209 1413 840}readonly def
/UniqueID 5029035 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169B077C51B8CEC58B1BB6008B
99B28F68EB82B17D84E40582498F6C8F430BFA8C3DF9A3E5A3F0687B57645FC2
6AD5BC7F83ABD0A20FB4E4E98827A5C45AFD4002DEF71AD6056AA88139C3FF18
CF25BEC41A91C17F87E10D1097603B770F0B1053415F861DEA43CF4189595B1B
BA51A69FF2F004107C84A9AED71BA5CC80A34182E76D7B9B29DD903BCB03898E
C3B8F0E303F056FF6599B6302FDE3325E282D166DB772B4604331808C070CE82
809B134E5236FB183E0D846EF608C1E8E3E0D7EC471DE44C1E9EE0A76BDEF23C
21EBD44056E4C538AD97E29EEF62CBF53109753883AB863FF18CFF7E1BE6E19E
8DD042023264F0CD497E469042210AB5D39B5EA0BE8AB19EA32ADD51AA949BDD
5094314D0CD3A13F980D8FF9539008AF915FB167839DC9AD1C15AB37E438F812
97718E64130FC53E6B86549426602DDB4C01D211043CECDC39E3F0C08D07F0A9
547CC808E56BE6F0B563290F10C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A0617E0363E31D1245
650C3922BF51B4634625E5293F9F0C23A33E93268E77BCF1DF93652737929198
709E3D8452632D7F2B42713E0725D3C2D0AAD1EC6431E963C31801243D575434
7B2C808125EAABE2A2DA39E72BF6356B2B1A23891CF18D5169B22806C5AB609D
A835FE346818378B7CE6F39BC43BDCB5D708AC583A89EDBA52FFD7F2132C7ABF
0E165D9552A062F7607E95635031A63AEE0808D7BAF5665D52EBF50695198655
7DA95A486930A58165C7A0F972EF0DAA18A96E78D8663FCD0459A0D0F31ADEB1
0A96EBF7936900D4F63BACADC498A4D711B67D72A2E67C5E8C9A26A98B9313E9
87B3321F62C2BAB482B6E200A4A4AF51EDF130825F5C3A6C07B3048D5A4FBE2D
0009DE871151F963BDE805BE6E186295FFF8289128CA6433C84369913CBD81EC
DED1A32950F74B0A1C342A06ACB93624C7FB40F765C72594E10A41297A4F4EC5
333329FA3E157B4D0DA9734DD004628EFA207270FCDAA507EED4BDC8B361C08E
F1A9E38DF552A1515880C1C008A516FFE2EC1BECB88D85F8026984D6D9603ECE
A839DA9C46E7461314F1495897A7E9C9ACB85206467617D5BB7DEB9E535AA535
71961582A4C0E2C175DCC94380BC6AEC4E4B44C4B84DA117C175018B49CF3E20
38D91F67AD88C91DFBC21916299BFEB82D8C5FE53B5982E4506306CF7F56AC3D
3E93915E59A4131FFF4FAC4F301034FFC5274BAA5414FBDC396AEFAEFCA19BD8
E422E162C87ADB30A556354E591222EFA6752EE1B1B944C63650AE7664C55111
2B68353F4B5897C65186C6E80FCB274B66261049039ADB10E03A1A362F1F4D7F
5E148EB19ED1F7F3AF01F72B39FA821A06A4D282F9FB1F04BB3E8EE973F8DE22
B345FAD895C736F4DE0B1D4867FFBC24AB0CAB1AF5FD2F5D6BD009813177BE28
0D1CB426A9402F9E47DEE58EF030C70BE41753AAEF1C2D4AA52210B7FE0342D8
4705DB5C67B61E4F50DF896D7E3977CA175AF98ED75A20A4312DD309BD6A0062
2EE2DE5CB71D996076E8031CF2F012699D748235F3AA34BA6D4311FECCFC6372
C814CBB9127B1EB5B1DE670FE708ABBE07863275BA031C2D2920321D1BEF775C
C3EC780E40FF1143EA66B4976E6364931A750573D430FEAF0579F2163A4E76C8
E8EE609DF94B2E54064700255C5ED53227581C5706488BAEA01E6133A4386D6F
F5E7B7BCA356C50179927F6FBE449D4C67FB8B0660D5C66A3665CF04472E5FAD
12FC2D73F54C0FAFFC0C21A980694463E09400CA5F99B82D5C1573C9DF19BEFA
92D113198D2F3F1DBAAFEEB35ECA704A9B330C59C3BD7015B11ECED3342C7D79
EB3C2AD3542D113FDB3906B8E5CD95085BD76461D19B073579943572A2774B82
A063F7C70A475A4A16E29A517E472C8FED3CAED5D5C3F8977651A18893331A9F
491CA77FCBC22BF780289A03D772C4A51FF088EA450FFE9628F58EF439E11322
79A383D38A0A5C6F21E402AA2BE15DA7BE933F8F416B21A65DA309217EE3B454
5CCAFC24D117B0AEC0601C5785802EC452AF795BCC66E71111DE526D6DCD557D
C2748E1FFF023D15420444F89EA233BCF5FD54142958F1235B3CFC138DF67236
7FFD8B51D7483EC49466040F9364F1D887AD12D04A98BF2352A9F23CD1078A42
16D17E37D0232F7650AEDE41A5708AFDDCAA92289A3DDE90BA524C6B5016B1A7
A21982C25B5EBC2321D86F022C0327105B8E1C8CE237DDA16D5A0E0D7AEFE8EF
278A74E09D62FD5B0CC33AA740CAEC80EBB885B30FE1B0596D1E3EBC96CECA25
B51609CA8696E5BF28A49E4097A885887E77DCC60969E1B0BADB10986D69ED47
2615A6D4661F0487B07085991F7A8D634E9D71542A048015CE77F981B8638FEB
C8BEFBB810F92DEF4FDA1DC26927C10140100C9B104836C4AFE872CE696898B5
0595A99D6365DF164FCA5FB811DC86B4B292C4B67FA5D8D2335F2099F05B7A09
C4A48211F46B822F37CD64144B73A1C5844AF42A700B24347F4FF91B6287C56C
F205C72670C843F90D75E6AE3BD1319D22ED678A9F35CBF29B6BE5E820C637C3
8C0F8B205C9B295044BE82501037C8B8832478DD91C38461DF261F9C9D1C1E0B
3BC5456F7AF18318480F9E19CA812A935F9F133254E553419DDB048ACED93E5D
A8AE44E72109721445E29D3F04F5397159797013A3C7927013FCC65C401B8789
C55882E55FC7B87852ACFEB7F724901E520417B98270C1644F9C7E05CF28C9F8
BB332D5C5BA6F64C316221B5577CFC00638CEA75F5E78B87790EBD8AEC4E14F6
CF2D21F847CE8209588400ED10673BC83C452231199D60D814899C295F7AB1E7
AE59B8752E9EB1BCCBA23E1068AA3F4E327DCDC47D23A6303D75BFD0C8C2C94E
ECF8F2191BE7D10148A558E96E120DB85059FC35B4F193DB1BE5C587AA3A91AB
76339A363FDC4453C013F51526561E8ADDD15A6454706EB876732B4223A8B86B
9926E5ACA2996C68151BECEAB3EE4AB261E852287334E3A7CC88A19DE07BE08B
3BE3AB1BB195BD5491276AA2D8EA71FB485EC0A9A257099615756BD55BF2CFEF
4EBF74DDAC0B400FD3E2AF8DC82E752A01E4F86F39B39F442FF7422551B33C70
BD33A77B4C9B3729E6E4DBE95228B46EB2A1B514CE35023385971F55E649E7EF
98DB0E03BB36C70F3F1EE1FB06DD96E37F623687ABC65DD8A00CA5698372C2FF
3F8601CB6EBD2C2E77F4C69F0241A509FB3A3223C176A65EAE76A38F1C8FEF54
9A23A68130797CAB711FAD5507A926886D35FDCCEFB2B5F0C66A458878E1EA2A
5FCCE3B76199DB0FB280DFA3F163F621EAECADFEBCD2E5986540CBB654AEDD0A
F0C7347FCAAEEFA77CC446934E097DAB8D8973948D919A16185A8B4322FD25F6
02DD343075F36F404C5A389D6A4150DE8F12DF0C25FD97A17EC89D9C6F326F00
FA35182B28430AD2CE383DB4FF001868A0E7842A253EB762389C93C2680BFCCC
6CFD92A369299CEA2BD6B6CE3A62CB4CC3BEF33821959C6AF1D54BF18DC9F540
2169030989F7C729F564274A749EBBCE8CB038A9D9517E7826C3AE798412C6B1
FB1D7B994FA5BBCB77903F6583A88D7083EE2847E56752CCEBEC6C778327F551
B7ABDAE3D25648EC5F362748E103849D72E1A13F86898A6BD9598799CD1E288B
767F5CED64B701EDF46EA36A5AC5CC39815D97411D8A718324746861BC41B03A
4B0E6C569D5A2752FA6B1EB16AC94E8DD7FDFDB5B7E32467D6CF5B33D693C3A8
5B0B322E0E4912D387803B572F0ED7A06C7B8FD9BD7A225A5D08E39BCF4D0DA2
24426030B96FBD40B49009D6F071E95994D2A528431B15DDDCB38514ACEC86EA
C95772829A0BEBB2DDDCEEA25F7EABB8BA420F3B114FCBBBC80C96C0828C231F
71E7D8CB9F9D6807EAE8A317C12225A094A1E24DB04E646E3D45C11346873FDF
72B8CC64FA541D99FB3E66A33AFCD6C03E58DAAC25F51B04A1D354D4F42018A2
B739BC961A90133FA90064B56756F9B5B73CB47BE71F21AEE28EC5315D19EEB1
C3958E579F0E0E41A3821DFBAE8C1FD47581C2BF0695495797058B65D533D22E
7F310CD004361A347D8E6C6E9534387E5A2AA58C6D0D280C9D238A9DFDBA4398
2540AA3E325892E8001038E1A6E5827A248DCC2699D17EBF62ED7C71881502CF
778BFEAD3BE9718BD63A18FD82C2F37EDCB1798B685530C15B227DC358751709
77A7104CF108DC0BAA168B39E2237EFFC77C97B87A92C8523D5CCCA6B32E3085
9650779CDBBBC630D93ED82605D1FE1FBD277C9A5B54C887A6D30A97B90C8F39
F568D6FF9F257A797DA93178439136F59DA65FCE676B0A5B1167B57C317ED12C
E95CB5CDFC29D414D1975A4DE67C1767574C61B7E7AF5B9CA5E70FA7A71BA3A2
C2926DA79E2ED44B4BAA041B81B14AF9E8BF14DFCA727919E43E2690BAE4D271
C5DAE9D8D543B4982DFA710F2A1991BC82DD091A214CF37A7C71F398705D8CD0
02FD7070E307A0B2760B8A192D41D3518804584206A386A17A9C8833B33B514E
43260C1CEA0FAF4EFB666210B405E6559B961AEA7EB9001F16F076F1490E3710
BB90F38951310CCE38C4AE04DA192110C0768948CBFD7CFB5659CE301211A887
97A169DD961668B1E59BD38B35BF0FC6A05DEB2CAF007EF6C2A325A88B02984C
93074B3456EBEAF1CF8ED099F42BF5E7576963390FF507DE3B34397E6B2845A8
78089614F582C1C327F16940E21514030451C0D7DFEE0FE6C7B781A1E9F905A0
EF537219BEE2A8C3578386090209FE7A3D8B4033F27E996E67C423FADBB478D4
BE028C2C0971467F680209EEC5A1FD116344F6EE409483D6AC5405CD3E23C31B
002949C690A233763407A23CC082557847DA639792E34811C9F8959861D1EBE2
CFDD7B3FBEC84D371495890FDB9DF0E5767BC82D6E4A659316B77D691481F18C
27AE436E3E4194D1F84A3B1C42F2FD12D2A19B734A130EB9EC00D106297BCCFE
030E3B86F6456E0D2DCBE14FFC0402ACB5E1A4CFB58930504746635144913805
A1BE8976CE760DB04ED2E482F59D4409DB4E7D15AF620996C91323B3A427BC77
854E29C5609BC9D3E5DE549F473A2C25F77F2125AB2D1ABFD892FC3004B4F07A
D93C434C58DCDDB23E062677E36878979F291DB25ABA1527E8540DDA0070DD2E
D3C724C2C3E25AE331B202D160A8FC3DFB2BFB425FCCD8D0FB0377A6281A46E2
16CA2D0CEAFFAC7062700D41B0BE1CA1A523E42163179F73A77477E68F164F3D
262483E64B0CEEEC5A0213E148E0D9883A632278208A0D66E19C8ED5BAFC96F1
3CD3916DDA4C370770533237EB1DEAB14D7179D447B6BE0CA1428E78D191CDEE
31CB8ED530162DBD912995E41D2DC267AC1D252DCB7735BD7602A1AE61D61C0F
B37A20909B25281F29E31E0672B9CB48ED6EDF0907CBE73AB3571188C620AEE1
7B48BBFEF8CB047D15F6C7104E8A2CF0849D85D14ECE0CE90D6B0DE9CE8BB260
384D589A4F1A77B65EE11097812004504918EB87DDB42C3638EFCFFCCA8EAF16
CD2AA2D1D89E2B5670AA3388B7DE89D6C60BF12E9DCC2C3FF4370E5E2AC6945E
F92708F865C6CAF7ED1768E23D91A7AB5D97F8A4300CAC69BECD70FEC7B9F993
C286D74DD6F91E3BC93D7803FE68815C34349F61E14C6217FEB0CBB9CAD54E51
FE5D62129A94A1B29BBCB85AE5387AC552E2C06017F8CF1D04966A678A457762
96BCF00DC2FA1DD812C213B6523A824D66715DD3013758F302E8CB94A2E0F813
698B6D4E21CAF0C43DB96B9BE7053ED8D40543909124E5B300C9376E6C75999F
C0F7C4AF77F2FDD5973F7A0C6F803F0D3492F16F1D1CE980A3AB1809CF28846A
774C9EBD261D265818A5F136C2F6B8B79E0EFCE848CEEA270C27928319916B8F
C0D9FA7914005666BEDB782B50A6BF94D0987A2DC2E8C739E69DA0E6CC4B3A64
9EDAAE08DC885B3E777C4E5204BD7FBFDACF87E46E6D0B1157E2E09FD30C7107
BF4DB26406660A6DB500241703E1169BBF871F78CF4118426471BD48E9DF2FC1
4F60CF429F35FA1D8FE739B61CAD70E00B646D221DD953DBE1605673CA07E4CF
87E104E86CA4129987E0F3F9FE6580C560108212C76E3AB324811AF5F7E69B11
289848BD869CA35D4202643FCAD568395E6C4C6C916A2F41A83B2D61A9E56960
BB163FEDC4C055E5A1FDD665296100F2408893E73A12C84854263F5C54A484F8
A1BA8D1BDF8292F2187081D4D5FCCA413A959DC5809DA39FE91D5EF3A5D277D9
284DF0842BEB9969B9A1A4D97B1C23B2629C4364D36333AD3C471C1C57324195
9C2BCD27B2F7C02AAB88698E7EEA6FF82CCA62CD5BA57B5F02061531B90D2A0F
E1DF9FE30D056D9135357CDA5E76C3D56038F1B4B56A3FC7349876CD693F675F
21FFB6265BC3181E3859104F28F6E439D5BA5A4821FC92D0AB025CEC735CE992
3801C3FEE57CD482AD117CCD4DFA5CC413AAA0CB1B640F8021F5027E8C0B5BBB
B4E30E2A3D9251E465CB1B679438F7B2EFEB2000039CABA403C5235DB730F895
85924A7972
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (2-3-4.dvi)
@start /Fa 140[79 5[161 9[92 1[98 8[133 18[129 69[{}6
165.272 /LCMSSI8 rf /Fb 130[65 65 65 65 120[66 66{}6
143.462 /CMEX10 rf /Fc 134[74 2[74 3[74 4[74 74 74 5[74
3[74 31[74 65[{ TeX09fbbfacEncoding ReEncodeFont }9 143.462
/CMTT12 rf /Fd 134[77 77 1[77 86 62 1[57 1[86 1[86 134
38 81 1[38 1[86 53 77 1[77 86 81 18[112 28[86 2[48 1[48
2[67 67 40[{}24 137.733 /LCMSSI8 rf /Fe 205[62 50[{}1
99.6264 /LCMSS8 rf /Ff 151[61 104[{ TeXaae443f0Encoding ReEncodeFont }1
99.6264 /CMMI8 rf /Fg 130[73 1[73 73 73 73 73 73 73 73
73 73 1[73 73 73 73 73 73 1[73 73 73 73 73 73 73 73 73
3[73 1[73 3[73 73 73 73 73 73 1[73 73 73 73 73 73 1[73
73 1[73 73 73 2[73 2[73 73 73 73 73 73 4[73 73 73 73
73 73 73 73 73 73 73 73 73 1[73 73 3[73 33[{
 TeX09fbbfacEncoding ReEncodeFont }68 137.733 /CMTT8
rf /Fh 152[88 2[88 1[88 30[88 67[{ TeX09fbbfacEncoding ReEncodeFont }4
165.272 /CMTT8 rf /Fi 128[72 3[72 5[72 52 5[72 112 3[32
1[72 1[64 2[72 68 13[80 14[102 1[94 8[72 72 72 72 72
72 72 72 72 72 48[{}24 114.736 /LCMSS8 rf /Fj 137[71
1[53 1[66 2[71 89 129 44 76 1[50 84 41[114 1[114 41 59[{
 TeXaae443f0Encoding ReEncodeFont }13 137.733 /CMMI8
rf /Fk 150[57 57 73 73 7[98 14[116 28[98 34[73 13[41
114{ TeXbbad153fEncoding ReEncodeFont }10 137.733 /CMSY8
rf /Fl 128[86 3[86 74 77 77 115 77 86 62 66 57 86 86
86 86 134 38 81 43 38 86 86 53 77 86 77 86 81 3[49 1[49
105 2[159 111 111 123 96 112 1[108 133 112 141 98 116
79 44 112 115 102 107 122 110 113 111 1[81 1[134 2[48
86 86 86 86 86 86 86 86 86 86 86 48 57 48 134 1[67 67
6[49 7[81 12[91 12[{}76 137.733 /LCMSS8 rf /Fm 128[95
7[125 1[94 68 73 63 2[95 94 146 41 2[41 94 94 58 86 94
84 94 89 9[175 122 5[119 1[124 1[107 4[126 112 4[122
19[63 45[{}28 137.733 /LCMSSB8 rf /Fn 128[103 3[103 89
3[92 103 75 79 69 1[103 103 103 161 46 98 1[46 103 103
63 92 103 92 103 98 9[191 133 134 1[115 135 4[169 117
139 1[53 2[123 129 147 132 135 133 6[57 5[103 103 103
8[80 80 40[{}44 165.272 /LCMSS8 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 1421 115 a Fn(2{3{4)70 b(B)m(\177)-100
b(aume)p 0 527 4016 24 v 0 766 a Fm(Problem)p Fl(:)0
1006 y(Bin)n(\177)-84 b(are)39 b(B)n(\177)-84 b(aume)38
b(k\177)-86 b(onnen)38 b(enta)-5 b(rten,)39 b(w)-5 b(enn)38
b(Schl\177)-86 b(ussel)37 b(nicht)i(zuf)n(\177)-84 b(allig)0
1158 y(sind.)0 1397 y(W)-5 b(o)g(rst{Case)58 b(P)-5 b(erfo)g(rmance:)57
b Fk(O)t Fl(\()p Fj(n)p Fl(\))0 1637 y Fm(L\177)-95 b(osung)p
Fl(:)56 b(Aufw)-5 b(eichung)56 b(des)h(Konzeptes)g(bin)n(\177)-84
b(arer)59 b(B)n(\177)-84 b(aume)0 1876 y(Knoten)57 b(k\177)-86
b(onnen)58 b(0,)f(2,)g(3,)h(o)5 b(der)57 b(4)g(Schl\177)-86
b(ussel)57 b(enthalten)99 2178 y(1.)82 b(0{Knoten:)58
b(leerer)f(Baum,)g(H\177)-86 b(ohe)57 b(0)99 2480 y(2.)82
b(2{Knoten)87 b(mit)g(S\177)-86 b(ohnen)86 b(der)h(H\177)-86
b(ohe)86 b Fj(h)h Fl(gibt)g(Baum)g(der)315 2632 y(H\177)-86
b(ohe)57 b Fj(h)33 b Fl(+)g(1:)1082 3963 y @beginspecial
35 @llx 35 @lly 163 @urx 183 @ury 1280 @rwi @setspecial
%%BeginDocument: 2-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 183
%%PageOrientation: Portrait
gsave
35 35 128 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 47 102 moveto
78 102 lineto
stroke
newpath 78 102 moveto
83 102 90 107 90 113 curveto
stroke
newpath 90 113 moveto
90 126 lineto
stroke
newpath 90 126 moveto
90 132 84 138 78 138 curveto
stroke
newpath 78 138 moveto
47 138 lineto
stroke
newpath 47 138 moveto
42 138 36 132 36 126 curveto
stroke
newpath 36 126 moveto
36 113 lineto
stroke
newpath 36 113 moveto
36 107 41 102 47 102 curveto
stroke
gsave 10 dict begin
63 115 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 55 102 moveto
50 91 43 75 38 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 40 62 moveto
34 54 lineto
36 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 71 102 moveto
76 91 82 75 88 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 90 64 moveto
92 54 lineto
86 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 4209 a(\(a\))84 b Fj(l)58 b Fl(ist)g(2{3{4)g(Baum)f
(der)h(H\177)-86 b(ohe)57 b Fj(h)262 4455 y Fl(\(b\))83
b Fj(r)61 b Fl(ist)d(2{3{4)g(Baum)f(der)h(H\177)-86 b(ohe)57
b Fj(h)271 4701 y Fl(\(c\))83 b(alle)57 b(Schl\177)-86
b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b Fj(l)i Fl(kleiner)f(als)g
Fj(k)262 4947 y Fl(\(d\))83 b Fj(k)61 b Fl(kleiner)d(als)f(alle)h
(Schl\177)-86 b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b
Fj(r)1873 5242 y(l)42 b(<)e(k)45 b(<)40 b(r)p 0 5542
V 3605 5669 a Fi(Seite)47 b(1)p eop end
%%Page: 1 2
TeXDict begin 1 1 bop 1597 113 a Fn(3{Knoten)99 576 y
Fl(1.)82 b(3{Knoten)87 b(mit)g(S\177)-86 b(ohnen)86 b(der)h(H\177)-86
b(ohe)86 b Fj(h)h Fl(gibt)g(Baum)g(der)315 733 y(H\177)-86
b(ohe)57 b Fj(h)33 b Fl(+)g(1:)1082 2065 y @beginspecial
35 @llx 35 @lly 243 @urx 183 @ury 2080 @rwi @setspecial
%%BeginDocument: 3-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 243 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 243 183
%%PageOrientation: Portrait
gsave
35 35 208 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 86 102 moveto
120 102 lineto
stroke
newpath 120 102 moveto
127 102 133 107 133 113 curveto
stroke
newpath 133 113 moveto
133 126 lineto
stroke
newpath 133 126 moveto
133 132 126 138 120 138 curveto
stroke
newpath 120 138 moveto
86 138 lineto
stroke
newpath 86 138 moveto
79 138 74 132 74 126 curveto
stroke
newpath 74 126 moveto
74 113 lineto
stroke
newpath 74 113 moveto
74 107 80 102 86 102 curveto
stroke
gsave 10 dict begin
88 115 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 102 102 moveto
102 138 lineto
stroke
gsave 10 dict begin
117 115 moveto 17 -0.5 (k2) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 75 102 moveto
65 89 52 71 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	m
gsave 10 dict begin
newpath 103 65 moveto
72 23 lineto
134 23 lineto
closepath
stroke
gsave 10 dict begin
103 32 moveto 14 -0.5 (m) alignedtext
end grestore
end grestore

%	n -> m
newpath 103 102 moveto
103 95 103 85 103 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 106 76 moveto
103 66 lineto
101 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 179 65 moveto
152 23 lineto
206 23 lineto
closepath
stroke
gsave 10 dict begin
179 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 130 102 moveto
140 89 154 71 164 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 165 60 moveto
169 50 lineto
161 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 2316 a(\(a\))84 b Fj(k)t Fl(1)40 b Fj(<)h(k)t
Fl(2)262 2567 y(\(b\))83 b(alle)57 b(Schl\177)-86 b(ussel)57
b(im)h(T)-14 b(eilbaum)57 b Fj(l)i Fl(kleiner)f(als)g
Fj(k)t Fl(1)271 2818 y(\(c\))83 b Fj(k)t Fl(1)57 b(kleiner)h(als)g
(alle)f(Schl\177)-86 b(ussel)57 b(im)h(T)-14 b(eilbaum)57
b Fj(m)262 3069 y Fl(\(d\))83 b(alle)57 b(Schl\177)-86
b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b Fj(m)h Fl(kleiner)g(als)g
Fj(k)t Fl(2)271 3320 y(\(e\))83 b Fj(k)t Fl(2)57 b(kleiner)h(als)g
(alle)f(Schl\177)-86 b(ussel)57 b(im)h(T)-14 b(eilbaum)57
b Fj(r)283 3572 y Fl(\(f)12 b(\))83 b Fj(l)58 b Fl(ist)g(2{3{4)g(Baum)f
(der)h(H\177)-86 b(ohe)57 b Fj(h)262 3823 y Fl(\(g\))83
b Fj(m)57 b Fl(ist)h(2{3{4)g(Baum)g(der)f(H\177)-86 b(ohe)57
b Fj(h)262 4074 y Fl(\(h\))83 b Fj(r)61 b Fl(ist)d(2{3{4)g(Baum)f(der)h
(H\177)-86 b(ohe)57 b Fj(h)1487 4533 y(l)42 b(<)e(k)t
Fl(1)h Fj(<)f(m)i(<)e(k)t Fl(2)h Fj(<)f(r)p 0 5536 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2789
b(Seite)47 b(2)p eop end
%%Page: 2 3
TeXDict begin 2 2 bop 1597 113 a Fn(4{Knoten)99 539 y
Fl(4.)82 b(4{Knoten)58 b(der)f(H\177)-86 b(ohe)57 b Fj(h)33
b Fl(+)f(1)609 1871 y @beginspecial 35 @llx 35 @lly 341
@urx 183 @ury 3060 @rwi @setspecial
%%BeginDocument: 4-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 183
%%PageOrientation: Portrait
gsave
35 35 306 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 118 102 moveto
184 102 lineto
stroke
newpath 184 102 moveto
190 102 196 107 196 113 curveto
stroke
newpath 196 113 moveto
196 126 lineto
stroke
newpath 196 126 moveto
196 132 190 138 184 138 curveto
stroke
newpath 184 138 moveto
118 138 lineto
stroke
newpath 118 138 moveto
112 138 107 132 107 126 curveto
stroke
newpath 107 126 moveto
107 113 lineto
stroke
newpath 107 113 moveto
107 107 112 102 118 102 curveto
stroke
gsave 10 dict begin
121 115 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 102 moveto
135 138 lineto
stroke
gsave 10 dict begin
150 115 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 102 moveto
166 138 lineto
stroke
gsave 10 dict begin
181 115 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 107 102 moveto
104 98 69 71 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 46 lineto
45 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 141 102 moveto
135 91 128 76 121 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 62 moveto
116 55 lineto
119 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 161 102 moveto
168 91 175 76 182 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 184 65 moveto
187 55 lineto
180 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 196 102 moveto
214 84 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 2117 a(\(a\))84 b Fj(k)t Fl(1)40 b Fj(<)h(k)t
Fl(2)262 2364 y(\(b\))83 b Fj(k)t Fl(2)40 b Fj(<)h(k)t
Fl(3)271 2611 y(\(c\))83 b(alle)57 b(Schl\177)-86 b(ussel)57
b(im)h(T)-14 b(eilbaum)57 b Fj(l)i Fl(kleiner)f(als)g
Fj(k)t Fl(1)262 2857 y(\(d\))83 b Fj(k)t Fl(1)57 b(kleiner)h(als)g
(alle)f(Schl\177)-86 b(ussel)57 b(im)h(T)-14 b(eilbaum)57
b Fj(ml)271 3104 y Fl(\(e\))83 b(alle)57 b(Schl\177)-86
b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b Fj(ml)j Fl(kleiner)d(als)h
Fj(k)t Fl(2)283 3350 y(\(f)12 b(\))83 b Fj(k)t Fl(2)57
b(kleiner)h(als)g(alle)f(Schl\177)-86 b(ussel)57 b(im)h(T)-14
b(eilbaum)57 b Fj(mr)262 3597 y Fl(\(g\))83 b(alle)57
b(Schl\177)-86 b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b
Fj(mr)62 b Fl(kleiner)c(als)g Fj(k)t Fl(3)262 3844 y(\(h\))83
b Fj(k)t Fl(3)57 b(kleiner)h(als)g(alle)f(Schl\177)-86
b(ussel)57 b(im)h(T)-14 b(eilbaum)57 b Fj(r)309 4090
y Fl(\(i\))84 b Fj(l)202 b Fl(ist)58 b(2{3{4)f(Baum)h(der)f(H\177)-86
b(ohe)57 b Fj(h)305 4337 y Fl(\(j\))83 b Fj(ml)59 b Fl(ist)f(2{3{4)f
(Baum)h(der)f(H\177)-86 b(ohe)57 b Fj(h)266 4583 y Fl(\(k\))84
b Fj(mr)61 b Fl(ist)d(2{3{4)g(Baum)g(der)f(H\177)-86
b(ohe)57 b Fj(h)309 4830 y Fl(\(l\))84 b Fj(r)205 b Fl(ist)57
b(2{3{4)h(Baum)g(der)f(H\177)-86 b(ohe)57 b Fj(h)1086
5280 y(l)42 b(<)f(k)t Fl(1)f Fj(<)h(ml)h(<)f(k)t Fl(2)f
Fj(<)h(mr)k(<)c(k)t Fl(3)f Fj(<)h(r)p 0 5541 4016 24
v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2789 b(Seite)47
b(3)p eop end
%%Page: 3 4
TeXDict begin 3 3 bop 268 115 a Fn(M\177)-103 b(ogliche)69
b(Rep)-6 b(r)m(\177)-100 b(asentation)68 b(der)h(Knoten)g(in)g
Fh(C)0 514 y Fg(typedef)74 b(enum)g({)g(TWO,)f(THREE,)i(FOUR)f(})f
(NodeType;)0 672 y(typedef)h(struct)h(Node*)f(NodePtr;)0
987 y(struct)g(Node)g({)293 1145 y(NodeType)g(type;)293
1302 y(Key)439 b(key1;)293 1460 y(Value)293 b(val1;)293
1618 y(Key)439 b(key2;)293 1775 y(Value)293 b(val2;)293
1933 y(Key)439 b(key3;)293 2091 y(Value)293 b(val3;)293
2248 y(NodePtr)147 b(ptr1;)293 2406 y(NodePtr)g(ptr2;)293
2563 y(NodePtr)g(ptr3;)293 2721 y(NodePtr)g(ptr4;)293
2879 y(unsigned)74 b(label;)221 b(//)73 b(used)h(only)g(for)g(printing)
0 3036 y(};)0 3194 y(typedef)g(NodePtr)h(Tree;)0 3475
y Fl(Interp)-5 b(retation)59 b(von)e Fg(type)p Fl(:)99
3819 y(1.)82 b Fg(type)74 b(==)g(TWO)p Fl(:)58 b(2{Knoten)99
4163 y(2.)82 b Fg(type)74 b(==)g(THREE)p Fl(:)58 b(3{Knoten)99
4506 y(3.)82 b Fg(type)74 b(==)g(FOUR)p Fl(:)58 b(4{Knoten)0
4850 y Fm(V)-5 b(o)g(rteil)58 b Fl(dieser)f(Rep)-5 b(r)n(\177)-84
b(asentation:)59 b(k)-5 b(onzeptuell)58 b(einfach)0 5131
y Fm(Nachteil)p Fl(:)86 b(verb)-5 b(raucht)85 b(zuviel)g(Platz,)g(denn)
g(2{Knoten)g(ver-)0 5289 y(b)-5 b(raucht)58 b(genauso)g(viel)f(Platz)h
(wie)f(4{Knoten.)p 0 5537 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2789 b(Seite)47 b(4)p eop end
%%Page: 4 5
TeXDict begin 4 4 bop 956 115 a Fn(Suche)69 b(in)g(2{3{4{B)m(\177)-100
b(aumen)0 464 y Fl(Suche)37 b(k)-5 b(onzeptuell)39 b(wie)f(in)h(bin)n
(\177)-84 b(aren)38 b(B)n(\177)-84 b(aumen,)38 b(ab)5
b(er)39 b(mehr)f(F)n(\177)-84 b(alle:)99 757 y(1.)82
b(2{Knoten)58 b(mit)f(Schl\177)-86 b(ussel)57 b Fj(k)1082
2069 y @beginspecial 35 @llx 35 @lly 163 @urx 183 @ury
1280 @rwi @setspecial
%%BeginDocument: 2a-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 183
%%PageOrientation: Portrait
gsave
35 35 128 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 47 102 moveto
78 102 lineto
stroke
newpath 78 102 moveto
83 102 90 107 90 113 curveto
stroke
newpath 90 113 moveto
90 126 lineto
stroke
newpath 90 126 moveto
90 132 84 138 78 138 curveto
stroke
newpath 78 138 moveto
47 138 lineto
stroke
newpath 47 138 moveto
42 138 36 132 36 126 curveto
stroke
newpath 36 126 moveto
36 113 lineto
stroke
newpath 36 113 moveto
36 107 41 102 47 102 curveto
stroke
gsave 10 dict begin
63 115 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 55 102 moveto
50 91 43 75 38 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 40 62 moveto
34 54 lineto
36 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 71 102 moveto
76 91 82 75 88 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 90 64 moveto
92 54 lineto
86 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 2149 a Fl(\(a\))84 b Fj(k)44 b(<)d(k)t
Fl(1:)57 b(Suche)f(in)i Fj(l)262 2393 y Fl(\(b\))83 b
Fj(k)44 b Fl(=)d Fj(k)t Fl(1:)57 b(F)-5 b(ertig,)58 b(W)-5
b(ert)57 b(gefunden!)271 2638 y(\(c\))83 b Fj(k)44 b(>)d(k)t
Fl(1:)57 b(Suche)f(in)i Fj(r)99 2932 y Fl(2.)82 b(3{Knoten)58
b(mit)f(Schl\177)-86 b(ussel)57 b Fj(k)t Fl(1)h(und)f
Fj(k)t Fl(2)1082 4244 y @beginspecial 35 @llx 35 @lly
243 @urx 183 @ury 2080 @rwi @setspecial
%%BeginDocument: 3-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 243 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 243 183
%%PageOrientation: Portrait
gsave
35 35 208 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 86 102 moveto
120 102 lineto
stroke
newpath 120 102 moveto
127 102 133 107 133 113 curveto
stroke
newpath 133 113 moveto
133 126 lineto
stroke
newpath 133 126 moveto
133 132 126 138 120 138 curveto
stroke
newpath 120 138 moveto
86 138 lineto
stroke
newpath 86 138 moveto
79 138 74 132 74 126 curveto
stroke
newpath 74 126 moveto
74 113 lineto
stroke
newpath 74 113 moveto
74 107 80 102 86 102 curveto
stroke
gsave 10 dict begin
88 115 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 102 102 moveto
102 138 lineto
stroke
gsave 10 dict begin
117 115 moveto 17 -0.5 (k2) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 75 102 moveto
65 89 52 71 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	m
gsave 10 dict begin
newpath 103 65 moveto
72 23 lineto
134 23 lineto
closepath
stroke
gsave 10 dict begin
103 32 moveto 14 -0.5 (m) alignedtext
end grestore
end grestore

%	n -> m
newpath 103 102 moveto
103 95 103 85 103 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 106 76 moveto
103 66 lineto
101 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 179 65 moveto
152 23 lineto
206 23 lineto
closepath
stroke
gsave 10 dict begin
179 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 130 102 moveto
140 89 154 71 164 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 165 60 moveto
169 50 lineto
161 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 4323 a(\(a\))84 b Fj(k)44 b(<)d(k)t
Fl(1:)57 b(Suche)f(in)i Fj(l)262 4568 y Fl(\(b\))83 b
Fj(k)44 b Fl(=)d Fj(k)t Fl(1:)57 b(F)-5 b(ertig,)58 b(W)-5
b(ert)57 b(gefunden!)271 4813 y(\(c\))83 b Fj(k)44 b(>)d(k)t
Fl(1)32 b Fk(^)g Fj(k)45 b(<)40 b(k)t Fl(2:)57 b(Suche)f(in)i
Fj(m)262 5057 y Fl(\(d\))83 b Fj(k)44 b Fl(=)d Fj(k)t
Fl(2:)57 b(F)-5 b(ertig,)58 b(W)-5 b(ert)57 b(gefunden!)271
5302 y(\(e\))83 b Fj(k)44 b(>)d(k)t Fl(2:)57 b(Suche)f(in)i
Fj(r)p 0 5543 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2789 b(Seite)47 b(5)p eop end
%%Page: 5 6
TeXDict begin 5 5 bop 340 126 a Fn(Suche)69 b(in)g(2{3{4{B)m(\177)-100
b(aumen)71 b(\(F)-6 b(o)g(rtsetzung\))99 577 y Fl(4.)82
b(4{Knoten)58 b(mit)f(Schl\177)-86 b(ussel)57 b Fj(k)t
Fl(1)h(und)f Fj(k)t Fl(2)845 1889 y @beginspecial 35
@llx 35 @lly 341 @urx 183 @ury 3060 @rwi @setspecial
%%BeginDocument: 4-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 183
%%PageOrientation: Portrait
gsave
35 35 306 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 118 102 moveto
184 102 lineto
stroke
newpath 184 102 moveto
190 102 196 107 196 113 curveto
stroke
newpath 196 113 moveto
196 126 lineto
stroke
newpath 196 126 moveto
196 132 190 138 184 138 curveto
stroke
newpath 184 138 moveto
118 138 lineto
stroke
newpath 118 138 moveto
112 138 107 132 107 126 curveto
stroke
newpath 107 126 moveto
107 113 lineto
stroke
newpath 107 113 moveto
107 107 112 102 118 102 curveto
stroke
gsave 10 dict begin
121 115 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 102 moveto
135 138 lineto
stroke
gsave 10 dict begin
150 115 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 102 moveto
166 138 lineto
stroke
gsave 10 dict begin
181 115 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 107 102 moveto
104 98 69 71 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 46 lineto
45 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 141 102 moveto
135 91 128 76 121 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 62 moveto
116 55 lineto
119 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 161 102 moveto
168 91 175 76 182 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 184 65 moveto
187 55 lineto
180 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 196 102 moveto
214 84 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 266 2139 a(\(a\))84 b Fj(k)44 b(<)d(k)t
Fl(1:)57 b(Suche)f(in)i Fj(l)262 2388 y Fl(\(b\))83 b
Fj(k)44 b Fl(=)d Fj(k)t Fl(1:)57 b(F)-5 b(ertig,)58 b(W)-5
b(ert)57 b(gefunden!)271 2638 y(\(c\))83 b Fj(k)44 b(>)d(k)t
Fl(1)32 b Fk(^)g Fj(k)45 b(<)40 b(k)t Fl(2:)57 b(Suche)f(in)i
Fj(ml)262 2888 y Fl(\(d\))83 b Fj(k)44 b Fl(=)d Fj(k)t
Fl(2:)57 b(F)-5 b(ertig,)58 b(W)-5 b(ert)57 b(gefunden!)271
3137 y(\(e\))83 b Fj(k)44 b(>)d(k)t Fl(2)32 b Fk(^)g
Fj(k)45 b(<)40 b(k)t Fl(3:)57 b(Suche)f(in)i Fj(mr)283
3387 y Fl(\(f)12 b(\))83 b Fj(k)44 b Fl(=)d Fj(k)t Fl(3:)57
b(F)-5 b(ertig,)58 b(W)-5 b(ert)57 b(gefunden!)262 3637
y(\(g\))83 b Fj(k)44 b(>)d(k)t Fl(3:)57 b(Suche)f(in)i
Fj(r)0 3969 y Fl(Bei)48 b(Suche)g(sind)h(p)-5 b(ro)49
b(Knoten)g(bis)g(zu)g(3)f(V)-5 b(ergleiche)48 b(not)-5
b(w)g(endig.)0 4240 y Fm(Aufw)g(and)45 b Fl(der)h(Suche:)e
Fk(O)t Fl(\()p Fj(h)p Fl(\),)h(falls)h Fj(h)g Fl(H\177)-86
b(ohe)45 b(des)h(2{3{4)g(Baums)0 4510 y(Ein)63 b(2{3{4{Baum)h(der)f
(H\177)-86 b(ohe)62 b Fj(h)h Fl(hat)h(mindestens)e Fj(n)48
b Fl(=)g(2)3679 4461 y Ff(h)3780 4510 y Fk(\000)36 b
Fl(1)0 4666 y(Knoten!)0 4936 y(Also)58 b(gilt)g Fj(h)41
b Fl(=)f(log)1151 4962 y Fe(2)1217 4936 y Fl(\()p Fj(n)32
b Fl(+)h(1\),)57 b(und)h(damit)g(hab)5 b(en)57 b(wir:)p
352 5101 3312 5 v 352 5391 5 291 v 398 5147 3219 5 v
398 5345 5 198 v 445 5284 a(Suche)f(in)i(2{3{4{Baum)g(immer)f(loga)-5
b(rithmisch!)p 3612 5345 V 398 5350 3219 5 v 3659 5391
5 291 v 352 5396 3312 5 v 0 5538 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2789 b(Seite)47 b(6)p eop end
%%Page: 6 7
TeXDict begin 6 6 bop 141 126 a Fn(Suche)68 b(in)h(2{3{4{B)m(\177)-100
b(aumen)71 b(\(Implementierung\))0 482 y Fg(//)j(Search)g(for)f(a)h
(given)g(key)f(in)h(the)g(ordered)g(2-3-4)g(tree)g(t.)0
635 y(Value*)g(search\(Table)h(t,)f(Key)g(key\))0 787
y({)293 939 y(if)f(\(t)h(==)f(0\))h(return)g(0;)293 1091
y(switch)g(\(t->type\))h({)293 1244 y(case)f(TWO:)f({)585
1396 y(int)h(cmp)g(=)f(compareKey\(key,)j(t->key1\);)585
1548 y(if)e(\(cmp)g(==)f(-1\))h({)878 1700 y(return)g(search\(t->ptr1,)
i(key\);)585 1852 y(})e(else)g(if)f(\(cmp)h(==)f(0\))h({)878
2005 y(return)g(&\(t->val1\);)585 2157 y(})585 2309 y(assert\(cmp)h(==)
f(1\);)585 2461 y(return)h(search\(t->ptr2,)g(key\);)293
2614 y(})293 2766 y(case)f(THREE:)g({)585 2918 y(int)g(cmp1)g(=)f
(compareKey\(key,)j(t->key1\);)585 3070 y(if)e(\(cmp1)g(==)f(-1\))h({)
878 3222 y(return)g(search\(t->ptr1,)i(key\);)585 3375
y(})e(else)g(if)f(\(cmp1)h(==)g(0\))f({)878 3527 y(return)h
(&\(t->val1\);)585 3679 y(})585 3831 y(assert\(cmp1)h(==)f(1\);)585
3984 y(int)g(cmp2)g(=)f(compareKey\(key,)j(t->key2\);)585
4136 y(if)e(\(cmp2)g(==)f(-1\))h({)878 4288 y(return)g
(search\(t->ptr2,)i(key\);)585 4440 y(})e(else)g(if)f(\(cmp2)h(==)g
(0\))f({)878 4593 y(return)h(&\(t->val2\);)585 4745 y(})585
4897 y(assert\(cmp2)h(==)f(1\);)585 5049 y(return)h(search\(t->ptr3,)g
(key\);)293 5201 y(})293 5354 y(...)p 0 5542 4016 24
v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2789 b(Seite)47
b(7)p eop end
%%Page: 7 8
TeXDict begin 7 7 bop 238 126 a Fn(Implementierung)68
b(der)h(Suche)g(\(F)-6 b(o)g(rtsetzung\))293 527 y Fg(case)74
b(FOUR:)g({)585 684 y(int)g(cmp1)g(=)f(compareKey\(key,)j(t->key1\);)
585 842 y(if)e(\(cmp1)g(==)f(-1\))h({)878 1000 y(return)g
(search\(t->ptr1,)i(key\);)585 1158 y(})e(else)g(if)f(\(cmp1)h(==)g
(0\))f({)878 1315 y(return)h(&\(t->val1\);)585 1473 y(})585
1631 y(assert\(cmp1)h(==)f(1\);)585 1789 y(int)g(cmp2)g(=)f
(compareKey\(key,)j(t->key2\);)585 1946 y(if)e(\(cmp2)g(==)f(-1\))h({)
878 2104 y(return)g(search\(t->ptr2,)i(key\);)585 2262
y(})e(else)g(if)f(\(cmp2)h(==)g(0\))f({)878 2420 y(return)h
(&\(t->val2\);)585 2577 y(})585 2735 y(assert\(cmp2)h(==)f(1\);)585
2893 y(int)g(cmp3)g(=)f(compareKey\(key,)j(t->key3\);)585
3051 y(if)e(\(cmp3)g(==)f(-1\))h({)878 3208 y(return)g
(search\(t->ptr3,)i(key\);)585 3366 y(})e(else)g(if)f(\(cmp3)h(==)g
(0\))f({)878 3524 y(return)h(&\(t->val3\);)585 3681 y(})585
3839 y(assert\(cmp3)h(==)f(1\);)585 3997 y(return)h(search\(t->ptr4,)g
(key\);)293 4155 y(})293 4312 y(})293 4470 y(//)146 b(added)74
b(to)g(avoid)g(a)f(compiler)i(warning.)293 4628 y(assert\(0\);)293
4786 y(return)f(0;)0 4943 y(})p 0 5536 4016 24 v 0 5669
a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2789 b(Seite)47 b(8)p
eop end
%%Page: 8 9
TeXDict begin 8 8 bop 854 115 a Fn(Einf\177)-103 b(ugen)70
b(in)f(2{3{4)h(B)m(\177)-100 b(aumen)0 515 y Fl(Algo)-5
b(rithmus)59 b(zum)e(Einf\177)-86 b(ugen)57 b(von)g(gegeb)5
b(enen)56 b Fk(h)p Fd(k)-5 b(ey)o Fj(;)24 b Fd(val)p
Fk(i)57 b Fl(P)-5 b(aa)g(r)99 860 y(1.)82 b(Suche)57
b(nach)g(Schl\177)-86 b(ussel)57 b Fd(k)-5 b(ey)74 b
Fl(bis)58 b(Blatt)g(erreicht)g(ist)315 1080 y(\(Ein)g(Blatt)g(ist)g
(ein)g(2{3{4{Baum)g(der)f(H\177)-86 b(ohe)57 b(1\))99
1424 y(2.)82 b(F)-5 b(all{Unterscheidung)60 b(nach)d(Art)h(des)f
(Blattes:)266 1675 y(\(a\))84 b(Blatt)58 b(ist)g(2{Knoten:)f(f\177)-86
b(uge)56 b Fk(h)p Fd(k)-5 b(ey)p Fj(;)24 b Fd(val)p Fk(i)57
b Fl(ein)565 1864 y(Neues)f(Blatt)i(ist)g(3{Knoten)565
2962 y @beginspecial 35 @llx 35 @lly 163 @urx 161 @ury
1280 @rwi @setspecial
%%BeginDocument: ex1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
27 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 1803 2490 a(1)g(einf\177)-86 b(ugen)2707
2962 y @beginspecial 35 @llx 35 @lly 163 @urx 161 @ury
1280 @rwi @setspecial
%%BeginDocument: ex2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 262 3213 a(\(b\))83 b(Blatt)58 b(ist)g(3{Knoten:)f(f\177)
-86 b(uge)56 b Fk(h)p Fd(k)-5 b(ey)p Fj(;)24 b Fd(val)p
Fk(i)57 b Fl(ein)565 3402 y(Neues)f(Blatt)i(ist)g(4{Knoten)565
3709 y(Beispiel:)f(ob)5 b(en)56 b(7)i(einf\177)-86 b(ugen)1094
4826 y @beginspecial 35 @llx 35 @lly 173 @urx 161 @ury
1380 @rwi @setspecial
%%BeginDocument: ex3.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 173 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 173 161
%%PageOrientation: Portrait
gsave
35 35 138 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 49 80 moveto
80 80 lineto
stroke
newpath 80 80 moveto
85 80 92 85 92 91 curveto
stroke
newpath 92 91 moveto
92 104 lineto
stroke
newpath 92 104 moveto
92 110 86 116 80 116 curveto
stroke
newpath 80 116 moveto
49 116 lineto
stroke
newpath 49 116 moveto
44 116 38 110 38 104 curveto
stroke
newpath 38 104 moveto
38 91 lineto
stroke
newpath 38 91 moveto
38 85 43 80 49 80 curveto
stroke
gsave 10 dict begin
65 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 55 80 moveto
50 72 45 62 41 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 43 52 moveto
36 44 lineto
39 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 84 8 moveto
124 8 lineto
stroke
newpath 124 8 moveto
130 8 136 13 136 19 curveto
stroke
newpath 136 19 moveto
136 32 lineto
stroke
newpath 136 32 moveto
136 38 130 44 124 44 curveto
stroke
newpath 124 44 moveto
84 44 lineto
stroke
newpath 84 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 78 8 84 8 curveto
stroke
gsave 10 dict begin
83 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 94 8 moveto
94 44 lineto
stroke
gsave 10 dict begin
104 21 moveto 7 -0.5 (6) alignedtext
end grestore
newpath 115 8 moveto
115 44 lineto
stroke
gsave 10 dict begin
125 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 75 80 moveto
80 72 85 62 89 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 91 54 moveto
94 44 lineto
87 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 99 5170 a(3.)82 b(Blatt)59 b(ist)e(4{Knoten:)h(P)-5
b(ech)56 b(gehabt!)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2789 b(Seite)47 b(9)p eop end
%%Page: 9 10
TeXDict begin 9 9 bop 290 126 a Fn(Einf\177)-103 b(ugen)69
b(in)h(2{3{4)g(B)m(\177)-100 b(aume)69 b(\(F)-6 b(o)g(rtsetzung\))0
527 y Fl(Einf\177)-86 b(ugen)57 b(in)h(4{Knoten:)f(Erster)h(V)-5
b(ersuch)0 1737 y @beginspecial 35 @llx 35 @lly 173 @urx
161 @ury 1380 @rwi @setspecial
%%BeginDocument: ex3.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 173 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 173 161
%%PageOrientation: Portrait
gsave
35 35 138 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 49 80 moveto
80 80 lineto
stroke
newpath 80 80 moveto
85 80 92 85 92 91 curveto
stroke
newpath 92 91 moveto
92 104 lineto
stroke
newpath 92 104 moveto
92 110 86 116 80 116 curveto
stroke
newpath 80 116 moveto
49 116 lineto
stroke
newpath 49 116 moveto
44 116 38 110 38 104 curveto
stroke
newpath 38 104 moveto
38 91 lineto
stroke
newpath 38 91 moveto
38 85 43 80 49 80 curveto
stroke
gsave 10 dict begin
65 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 55 80 moveto
50 72 45 62 41 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 43 52 moveto
36 44 lineto
39 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 84 8 moveto
124 8 lineto
stroke
newpath 124 8 moveto
130 8 136 13 136 19 curveto
stroke
newpath 136 19 moveto
136 32 lineto
stroke
newpath 136 32 moveto
136 38 130 44 124 44 curveto
stroke
newpath 124 44 moveto
84 44 lineto
stroke
newpath 84 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 78 8 84 8 curveto
stroke
gsave 10 dict begin
83 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 94 8 moveto
94 44 lineto
stroke
gsave 10 dict begin
104 21 moveto 7 -0.5 (6) alignedtext
end grestore
newpath 115 8 moveto
115 44 lineto
stroke
gsave 10 dict begin
125 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 75 80 moveto
80 72 85 62 89 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 91 54 moveto
94 44 lineto
87 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 1322 1548 a(5)58 b(einf\177)-86 b(ugen)2226
2351 y @beginspecial 35 @llx 35 @lly 173 @urx 233 @ury
1380 @rwi @setspecial
%%BeginDocument: ex4.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 173 233
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 173 233
%%PageOrientation: Portrait
gsave
35 35 138 198 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 49 152 moveto
80 152 lineto
stroke
newpath 80 152 moveto
85 152 92 157 92 163 curveto
stroke
newpath 92 163 moveto
92 176 lineto
stroke
newpath 92 176 moveto
92 182 86 188 80 188 curveto
stroke
newpath 80 188 moveto
49 188 lineto
stroke
newpath 49 188 moveto
44 188 38 182 38 176 curveto
stroke
newpath 38 176 moveto
38 163 lineto
stroke
newpath 38 163 moveto
38 157 43 152 49 152 curveto
stroke
gsave 10 dict begin
65 165 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 80 moveto
42 80 lineto
stroke
newpath 42 80 moveto
47 80 54 85 54 91 curveto
stroke
newpath 54 91 moveto
54 104 lineto
stroke
newpath 54 104 moveto
54 110 48 116 42 116 curveto
stroke
newpath 42 116 moveto
11 116 lineto
stroke
newpath 11 116 moveto
6 116 0 110 0 104 curveto
stroke
newpath 0 104 moveto
0 91 lineto
stroke
newpath 0 91 moveto
0 85 5 80 11 80 curveto
stroke
gsave 10 dict begin
12 93 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 80 moveto
25 116 lineto
stroke
gsave 10 dict begin
39 93 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 55 152 moveto
50 144 45 134 41 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 43 124 moveto
36 116 lineto
39 126 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 84 80 moveto
124 80 lineto
stroke
newpath 124 80 moveto
130 80 136 85 136 91 curveto
stroke
newpath 136 91 moveto
136 104 lineto
stroke
newpath 136 104 moveto
136 110 130 116 124 116 curveto
stroke
newpath 124 116 moveto
84 116 lineto
stroke
newpath 84 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 78 80 84 80 curveto
stroke
gsave 10 dict begin
83 93 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 94 80 moveto
94 116 lineto
stroke
gsave 10 dict begin
104 93 moveto 7 -0.5 (6) alignedtext
end grestore
newpath 115 80 moveto
115 116 lineto
stroke
gsave 10 dict begin
125 93 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 75 152 moveto
80 144 85 134 89 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 91 126 moveto
94 116 lineto
87 124 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 88 8 moveto
119 8 lineto
stroke
newpath 119 8 moveto
124 8 131 13 131 19 curveto
stroke
newpath 131 19 moveto
131 32 lineto
stroke
newpath 131 32 moveto
131 38 125 44 119 44 curveto
stroke
newpath 119 44 moveto
88 44 lineto
stroke
newpath 88 44 moveto
83 44 77 38 77 32 curveto
stroke
newpath 77 32 moveto
77 19 lineto
stroke
newpath 77 19 moveto
77 13 82 8 88 8 curveto
stroke
gsave 10 dict begin
104 21 moveto 7 -0.5 (5) alignedtext
end grestore
end grestore

%	3 -> 4
newpath 104 80 moveto
104 72 104 63 104 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 107 54 moveto
104 44 lineto
102 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2633 a(Geht)57 b(nicht:)g(T)-14 b(eilb)n(\177)-84
b(aume)58 b(hab)5 b(en)57 b(unterschiedliche)g(H\177)-86
b(ohe!)p 149 2898 3719 5 v 149 3169 5 272 v 195 2944
3626 5 v 195 3123 5 179 v 299 3081 a(2{3{4)58 b(B)n(\177)-84
b(aume)57 b(k\177)-86 b(onnen)58 b(nicht)f(nach)g(unten)h(w)-5
b(achsen!)p 3816 3123 V 195 3128 3626 5 v 3862 3169 5
272 v 149 3174 3719 5 v 0 3529 a(Zw)g(eiter)57 b(V)-5
b(ersuch:)57 b(4{Knoten)h(aufspalten:)364 4361 y @beginspecial
35 @llx 35 @lly 101 @urx 89 @ury 660 @rwi @setspecial
%%BeginDocument: ex5.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 101 89
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 101 89
%%PageOrientation: Portrait
gsave
35 35 66 54 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	3
gsave 10 dict begin
newpath 12 8 moveto
52 8 lineto
stroke
newpath 52 8 moveto
58 8 64 13 64 19 curveto
stroke
newpath 64 19 moveto
64 32 lineto
stroke
newpath 64 32 moveto
64 38 58 44 52 44 curveto
stroke
newpath 52 44 moveto
12 44 lineto
stroke
newpath 12 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 6 8 12 8 curveto
stroke
gsave 10 dict begin
11 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 22 8 moveto
22 44 lineto
stroke
gsave 10 dict begin
32 21 moveto 7 -0.5 (6) alignedtext
end grestore
newpath 43 8 moveto
43 44 lineto
stroke
gsave 10 dict begin
53 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 1087 4172 a(aufspalten)1975 4739 y @beginspecial
35 @llx 35 @lly 163 @urx 161 @ury 1280 @rwi @setspecial
%%BeginDocument: ex6.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
27 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
99 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5022 a(Dann)g(Schl\177)-86 b(ussel)57
b(6)h(nach)f(ob)5 b(en)57 b(schieb)5 b(en!)p 0 5536 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(10)p eop end
%%Page: 10 11
TeXDict begin 10 10 bop 290 126 a Fn(Einf\177)-103 b(ugen)69
b(in)h(2{3{4)g(B)m(\177)-100 b(aume)69 b(\(F)-6 b(o)g(rtsetzung\))0
500 y Fl(Schl\177)-86 b(ussel)57 b(6)g(nach)h(ob)5 b(en)57
b(schieb)5 b(en:)56 b(Ausgangspunkt)601 2287 y @beginspecial
35 @llx 35 @lly 199 @urx 233 @ury 1640 @rwi @setspecial
%%BeginDocument: ex7.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 199 233
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 199 233
%%PageOrientation: Portrait
gsave
35 35 164 198 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 152 moveto
78 152 lineto
stroke
newpath 78 152 moveto
83 152 90 157 90 163 curveto
stroke
newpath 90 163 moveto
90 176 lineto
stroke
newpath 90 176 moveto
90 182 84 188 78 188 curveto
stroke
newpath 78 188 moveto
47 188 lineto
stroke
newpath 47 188 moveto
42 188 36 182 36 176 curveto
stroke
newpath 36 176 moveto
36 163 lineto
stroke
newpath 36 163 moveto
36 157 41 152 47 152 curveto
stroke
gsave 10 dict begin
63 165 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 80 moveto
42 80 lineto
stroke
newpath 42 80 moveto
47 80 54 85 54 91 curveto
stroke
newpath 54 91 moveto
54 104 lineto
stroke
newpath 54 104 moveto
54 110 48 116 42 116 curveto
stroke
newpath 42 116 moveto
11 116 lineto
stroke
newpath 11 116 moveto
6 116 0 110 0 104 curveto
stroke
newpath 0 104 moveto
0 91 lineto
stroke
newpath 0 91 moveto
0 85 5 80 11 80 curveto
stroke
gsave 10 dict begin
12 93 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 80 moveto
25 116 lineto
stroke
gsave 10 dict begin
39 93 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 152 moveto
49 144 44 134 40 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 124 moveto
36 116 lineto
38 126 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 80 moveto
114 80 lineto
stroke
newpath 114 80 moveto
119 80 126 85 126 91 curveto
stroke
newpath 126 91 moveto
126 104 lineto
stroke
newpath 126 104 moveto
126 110 120 116 114 116 curveto
stroke
newpath 114 116 moveto
83 116 lineto
stroke
newpath 83 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 77 80 83 80 curveto
stroke
gsave 10 dict begin
99 93 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 152 moveto
77 144 82 134 86 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 126 moveto
90 116 lineto
84 124 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 47 8 moveto
78 8 lineto
stroke
newpath 78 8 moveto
83 8 90 13 90 19 curveto
stroke
newpath 90 19 moveto
90 32 lineto
stroke
newpath 90 32 moveto
90 38 84 44 78 44 curveto
stroke
newpath 78 44 moveto
47 44 lineto
stroke
newpath 47 44 moveto
42 44 36 38 36 32 curveto
stroke
newpath 36 32 moveto
36 19 lineto
stroke
newpath 36 19 moveto
36 13 41 8 47 8 curveto
stroke
gsave 10 dict begin
63 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	3 -> 4
newpath 90 80 moveto
85 72 80 62 76 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 78 52 moveto
72 44 lineto
74 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	5
gsave 10 dict begin
newpath 119 8 moveto
150 8 lineto
stroke
newpath 150 8 moveto
155 8 162 13 162 19 curveto
stroke
newpath 162 19 moveto
162 32 lineto
stroke
newpath 162 32 moveto
162 38 156 44 150 44 curveto
stroke
newpath 150 44 moveto
119 44 lineto
stroke
newpath 119 44 moveto
114 44 108 38 108 32 curveto
stroke
newpath 108 32 moveto
108 19 lineto
stroke
newpath 108 19 moveto
108 13 113 8 119 8 curveto
stroke
gsave 10 dict begin
135 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	3 -> 5
newpath 108 80 moveto
113 72 118 62 122 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 124 54 moveto
126 44 lineto
120 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2543 a(Das)81 b(ist)g(k)-5 b(ein)81 b(2{3{4)h(Baum,)e(k)
-5 b(ann)82 b(ab)5 b(er)80 b(repa)-5 b(riert)82 b(w)-5
b(erden,)0 2697 y(w)g(enn)57 b(Knoten)g(mit)h(6)f(nach)h(ob)5
b(en)57 b(geschob)5 b(en)56 b(w)-5 b(erden)57 b(k)-5
b(ann!)601 3884 y @beginspecial 35 @llx 35 @lly 235 @urx
161 @ury 2000 @rwi @setspecial
%%BeginDocument: ex8.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 235 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 235 161
%%PageOrientation: Portrait
gsave
35 35 200 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 83 80 moveto
114 80 lineto
stroke
newpath 114 80 moveto
119 80 126 85 126 91 curveto
stroke
newpath 126 91 moveto
126 104 lineto
stroke
newpath 126 104 moveto
126 110 120 116 114 116 curveto
stroke
newpath 114 116 moveto
83 116 lineto
stroke
newpath 83 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 77 80 83 80 curveto
stroke
gsave 10 dict begin
85 93 moveto 7 -0.5 (3) alignedtext
end grestore
newpath 99 80 moveto
99 116 lineto
stroke
gsave 10 dict begin
112 93 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 72 80 moveto
65 71 57 60 49 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 51 50 moveto
43 44 lineto
48 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
99 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 99 80 moveto
99 72 99 63 99 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 54 moveto
99 44 lineto
97 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 155 8 moveto
186 8 lineto
stroke
newpath 186 8 moveto
191 8 198 13 198 19 curveto
stroke
newpath 198 19 moveto
198 32 lineto
stroke
newpath 198 32 moveto
198 38 192 44 186 44 curveto
stroke
newpath 186 44 moveto
155 44 lineto
stroke
newpath 155 44 moveto
150 44 144 38 144 32 curveto
stroke
newpath 144 32 moveto
144 19 lineto
stroke
newpath 144 19 moveto
144 13 149 8 155 8 curveto
stroke
gsave 10 dict begin
171 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 4
newpath 126 80 moveto
133 71 141 60 149 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 150 53 moveto
155 44 lineto
147 50 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 4140 a(Jetzt)58 b(einf\177)-86 b(ugen)56
b(von)h(5)h(m\177)-86 b(oglich!)601 5327 y @beginspecial
35 @llx 35 @lly 235 @urx 161 @ury 2000 @rwi @setspecial
%%BeginDocument: ex9.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 235 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 235 161
%%PageOrientation: Portrait
gsave
35 35 200 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 83 80 moveto
114 80 lineto
stroke
newpath 114 80 moveto
119 80 126 85 126 91 curveto
stroke
newpath 126 91 moveto
126 104 lineto
stroke
newpath 126 104 moveto
126 110 120 116 114 116 curveto
stroke
newpath 114 116 moveto
83 116 lineto
stroke
newpath 83 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 77 80 83 80 curveto
stroke
gsave 10 dict begin
85 93 moveto 7 -0.5 (3) alignedtext
end grestore
newpath 99 80 moveto
99 116 lineto
stroke
gsave 10 dict begin
112 93 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 72 80 moveto
65 71 57 60 49 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 51 50 moveto
43 44 lineto
48 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (5) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 99 80 moveto
99 72 99 63 99 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 54 moveto
99 44 lineto
97 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 155 8 moveto
186 8 lineto
stroke
newpath 186 8 moveto
191 8 198 13 198 19 curveto
stroke
newpath 198 19 moveto
198 32 lineto
stroke
newpath 198 32 moveto
198 38 192 44 186 44 curveto
stroke
newpath 186 44 moveto
155 44 lineto
stroke
newpath 155 44 moveto
150 44 144 38 144 32 curveto
stroke
newpath 144 32 moveto
144 19 lineto
stroke
newpath 144 19 moveto
144 13 149 8 155 8 curveto
stroke
gsave 10 dict begin
171 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 4
newpath 126 80 moveto
133 71 141 60 149 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 150 53 moveto
155 44 lineto
147 50 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5540 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(11)p eop end
%%Page: 11 12
TeXDict begin 11 11 bop 290 126 a Fn(Einf\177)-103 b(ugen)69
b(in)h(2{3{4)g(B)m(\177)-100 b(aume)69 b(\(F)-6 b(o)g(rtsetzung\))0
527 y Fl(Neuer)57 b(Algo)-5 b(rithmus)99 871 y(1.)82
b(Suche)57 b(nach)g(Schl\177)-86 b(ussel)57 b Fd(k)-5
b(ey)74 b Fl(bis)58 b(Blatt)g(erreicht)g(ist)315 1091
y(F)-5 b(alls)59 b(b)5 b(ei)57 b(Suche)g(4{Knoten)g(erreicht)g(wird:)
266 1342 y(\(a\))84 b(Spalte)57 b(4{Knoten)g(auf)262
1593 y(\(b\))83 b(Schieb)5 b(e)55 b(mittleren)j(Schl\177)-86
b(ussel)57 b(nach)g(ob)5 b(en)565 1782 y Fm(F)-5 b(rage)p
Fl(:)57 b(W)-5 b(a)g(rum)58 b(geht)f(das)h(immer?)565
1971 y(\(Problem)f(w)-5 b(enn)57 b(Knoten)g(da)-5 b(r\177)-86
b(ub)5 b(er)59 b(4{Knoten)e(ist\))565 2278 y Fm(Ant)-5
b(w)g(o)g(rt)p Fl(:)66 b(Algo)-5 b(rithmus)68 b(stellt)f(sicher,)f
(dass)h(Knoten)565 2436 y(\177)-86 b(ub)5 b(er)57 b(dem)g(aktuellen)h
(Knoten)f(nie)g(4{Knoten)g(ist!)99 2780 y(2.)82 b(F)-5
b(alls)52 b(Blatt)f(erreicht)g(ist,)f(k)-5 b(ann)52 b(dies)e(k)-5
b(ein)51 b(4{Knoten)f(sein:)266 3032 y(\(a\))84 b(Blatt)58
b(ist)g(2{Knoten:)f(f\177)-86 b(uge)56 b Fk(h)p Fd(k)-5
b(ey)p Fj(;)24 b Fd(val)p Fk(i)57 b Fl(ein)565 3221 y(Neues)f(Blatt)i
(ist)g(3{Knoten)262 3472 y(\(b\))83 b(Blatt)58 b(ist)g(3{Knoten:)f
(f\177)-86 b(uge)56 b Fk(h)p Fd(k)-5 b(ey)p Fj(;)24 b
Fd(val)p Fk(i)57 b Fl(ein)565 3661 y(Neues)f(Blatt)i(ist)g(4{Knoten)0
4005 y(Baum)85 b(w)n(\177)-84 b(achst)85 b(nur,)h(w)-5
b(enn)85 b(die)g(W)-5 b(urzel)86 b(4{Knoten)f(ist)g(und)0
4163 y(aufgespalten)57 b(wird!)p 0 5536 4016 24 v 0 5669
a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(12)p
eop end
%%Page: 12 13
TeXDict begin 12 12 bop 703 115 a Fn(W)-6 b(achstum)69
b(von)g(2{3{4)h(B)m(\177)-100 b(aumen)601 1378 y @beginspecial
35 @llx 35 @lly 307 @urx 161 @ury 2720 @rwi @setspecial
%%BeginDocument: ex10.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 161
%%PageOrientation: Portrait
gsave
35 35 272 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 115 80 moveto
155 80 lineto
stroke
newpath 155 80 moveto
161 80 167 85 167 91 curveto
stroke
newpath 167 91 moveto
167 104 lineto
stroke
newpath 167 104 moveto
167 110 161 116 155 116 curveto
stroke
newpath 155 116 moveto
115 116 lineto
stroke
newpath 115 116 moveto
109 116 104 110 104 104 curveto
stroke
newpath 104 104 moveto
104 91 lineto
stroke
newpath 104 91 moveto
104 85 109 80 115 80 curveto
stroke
gsave 10 dict begin
114 93 moveto 7 -0.5 (3) alignedtext
end grestore
newpath 125 80 moveto
125 116 lineto
stroke
gsave 10 dict begin
135 93 moveto 7 -0.5 (5) alignedtext
end grestore
newpath 146 80 moveto
146 116 lineto
stroke
gsave 10 dict begin
156 93 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
27 21 moveto 4 -0.5 (1) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 104 80 moveto
100 76 80 62 61 49 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 64 48 moveto
54 44 lineto
61 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
99 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 126 80 moveto
121 72 116 62 112 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 114 52 moveto
108 44 lineto
110 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 155 8 moveto
186 8 lineto
stroke
newpath 186 8 moveto
191 8 198 13 198 19 curveto
stroke
newpath 198 19 moveto
198 32 lineto
stroke
newpath 198 32 moveto
198 38 192 44 186 44 curveto
stroke
newpath 186 44 moveto
155 44 lineto
stroke
newpath 155 44 moveto
150 44 144 38 144 32 curveto
stroke
newpath 144 32 moveto
144 19 lineto
stroke
newpath 144 19 moveto
144 13 149 8 155 8 curveto
stroke
gsave 10 dict begin
171 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 4
newpath 144 80 moveto
149 72 154 62 158 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 160 54 moveto
162 44 lineto
156 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	5
gsave 10 dict begin
newpath 227 8 moveto
258 8 lineto
stroke
newpath 258 8 moveto
263 8 270 13 270 19 curveto
stroke
newpath 270 19 moveto
270 32 lineto
stroke
newpath 270 32 moveto
270 38 264 44 258 44 curveto
stroke
newpath 258 44 moveto
227 44 lineto
stroke
newpath 227 44 moveto
222 44 216 38 216 32 curveto
stroke
newpath 216 32 moveto
216 19 lineto
stroke
newpath 216 19 moveto
216 13 221 8 227 8 curveto
stroke
gsave 10 dict begin
229 21 moveto 7 -0.5 (8) alignedtext
end grestore
newpath 243 8 moveto
243 44 lineto
stroke
gsave 10 dict begin
256 21 moveto 7 -0.5 (9) alignedtext
end grestore
end grestore

%	1 -> 5
newpath 167 80 moveto
171 76 191 62 209 49 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 209 52 moveto
216 44 lineto
206 48 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 1608 a Fl(1.)57 b(Schritt:)h(aufspalten)g(aller)g
(4{Knoten)f(b)5 b(ei)57 b(Suche:)601 3372 y @beginspecial
35 @llx 35 @lly 307 @urx 233 @ury 2720 @rwi @setspecial
%%BeginDocument: ex11.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 233
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 233
%%PageOrientation: Portrait
gsave
35 35 272 198 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 119 152 moveto
150 152 lineto
stroke
newpath 150 152 moveto
155 152 162 157 162 163 curveto
stroke
newpath 162 163 moveto
162 176 lineto
stroke
newpath 162 176 moveto
162 182 156 188 150 188 curveto
stroke
newpath 150 188 moveto
119 188 lineto
stroke
newpath 119 188 moveto
114 188 108 182 108 176 curveto
stroke
newpath 108 176 moveto
108 163 lineto
stroke
newpath 108 163 moveto
108 157 113 152 119 152 curveto
stroke
gsave 10 dict begin
135 165 moveto 7 -0.5 (5) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 83 80 moveto
114 80 lineto
stroke
newpath 114 80 moveto
119 80 126 85 126 91 curveto
stroke
newpath 126 91 moveto
126 104 lineto
stroke
newpath 126 104 moveto
126 110 120 116 114 116 curveto
stroke
newpath 114 116 moveto
83 116 lineto
stroke
newpath 83 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 77 80 83 80 curveto
stroke
gsave 10 dict begin
99 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 126 152 moveto
121 144 116 134 112 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 114 124 moveto
108 116 lineto
110 126 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	5
gsave 10 dict begin
newpath 155 80 moveto
186 80 lineto
stroke
newpath 186 80 moveto
191 80 198 85 198 91 curveto
stroke
newpath 198 91 moveto
198 104 lineto
stroke
newpath 198 104 moveto
198 110 192 116 186 116 curveto
stroke
newpath 186 116 moveto
155 116 lineto
stroke
newpath 155 116 moveto
150 116 144 110 144 104 curveto
stroke
newpath 144 104 moveto
144 91 lineto
stroke
newpath 144 91 moveto
144 85 149 80 155 80 curveto
stroke
gsave 10 dict begin
171 93 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 5
newpath 144 152 moveto
149 144 154 134 158 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 160 126 moveto
162 116 lineto
156 124 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
27 21 moveto 4 -0.5 (1) alignedtext
end grestore
end grestore

%	2 -> 3
newpath 81 80 moveto
72 71 61 60 52 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 54 49 moveto
45 44 lineto
50 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
99 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	2 -> 4
newpath 99 80 moveto
99 72 99 63 99 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 54 moveto
99 44 lineto
97 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	6
gsave 10 dict begin
newpath 155 8 moveto
186 8 lineto
stroke
newpath 186 8 moveto
191 8 198 13 198 19 curveto
stroke
newpath 198 19 moveto
198 32 lineto
stroke
newpath 198 32 moveto
198 38 192 44 186 44 curveto
stroke
newpath 186 44 moveto
155 44 lineto
stroke
newpath 155 44 moveto
150 44 144 38 144 32 curveto
stroke
newpath 144 32 moveto
144 19 lineto
stroke
newpath 144 19 moveto
144 13 149 8 155 8 curveto
stroke
gsave 10 dict begin
171 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	5 -> 6
newpath 171 80 moveto
171 72 171 63 171 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 54 moveto
171 44 lineto
169 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	7
gsave 10 dict begin
newpath 227 8 moveto
258 8 lineto
stroke
newpath 258 8 moveto
263 8 270 13 270 19 curveto
stroke
newpath 270 19 moveto
270 32 lineto
stroke
newpath 270 32 moveto
270 38 264 44 258 44 curveto
stroke
newpath 258 44 moveto
227 44 lineto
stroke
newpath 227 44 moveto
222 44 216 38 216 32 curveto
stroke
newpath 216 32 moveto
216 19 lineto
stroke
newpath 216 19 moveto
216 13 221 8 227 8 curveto
stroke
gsave 10 dict begin
229 21 moveto 7 -0.5 (8) alignedtext
end grestore
newpath 243 8 moveto
243 44 lineto
stroke
gsave 10 dict begin
256 21 moveto 7 -0.5 (9) alignedtext
end grestore
end grestore

%	5 -> 7
newpath 189 80 moveto
198 71 209 60 218 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 220 53 moveto
225 44 lineto
216 49 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 3602 a(2.)g(Schritt)h(einf\177)-86 b(ugen)57
b(von)g(2)601 5366 y @beginspecial 35 @llx 35 @lly 307
@urx 233 @ury 2720 @rwi @setspecial
%%BeginDocument: ex12.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 233
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 233
%%PageOrientation: Portrait
gsave
35 35 272 198 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 119 152 moveto
150 152 lineto
stroke
newpath 150 152 moveto
155 152 162 157 162 163 curveto
stroke
newpath 162 163 moveto
162 176 lineto
stroke
newpath 162 176 moveto
162 182 156 188 150 188 curveto
stroke
newpath 150 188 moveto
119 188 lineto
stroke
newpath 119 188 moveto
114 188 108 182 108 176 curveto
stroke
newpath 108 176 moveto
108 163 lineto
stroke
newpath 108 163 moveto
108 157 113 152 119 152 curveto
stroke
gsave 10 dict begin
135 165 moveto 7 -0.5 (5) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 83 80 moveto
114 80 lineto
stroke
newpath 114 80 moveto
119 80 126 85 126 91 curveto
stroke
newpath 126 91 moveto
126 104 lineto
stroke
newpath 126 104 moveto
126 110 120 116 114 116 curveto
stroke
newpath 114 116 moveto
83 116 lineto
stroke
newpath 83 116 moveto
78 116 72 110 72 104 curveto
stroke
newpath 72 104 moveto
72 91 lineto
stroke
newpath 72 91 moveto
72 85 77 80 83 80 curveto
stroke
gsave 10 dict begin
99 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 126 152 moveto
121 144 116 134 112 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 114 124 moveto
108 116 lineto
110 126 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	5
gsave 10 dict begin
newpath 155 80 moveto
186 80 lineto
stroke
newpath 186 80 moveto
191 80 198 85 198 91 curveto
stroke
newpath 198 91 moveto
198 104 lineto
stroke
newpath 198 104 moveto
198 110 192 116 186 116 curveto
stroke
newpath 186 116 moveto
155 116 lineto
stroke
newpath 155 116 moveto
150 116 144 110 144 104 curveto
stroke
newpath 144 104 moveto
144 91 lineto
stroke
newpath 144 91 moveto
144 85 149 80 155 80 curveto
stroke
gsave 10 dict begin
171 93 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 5
newpath 144 152 moveto
149 144 154 134 158 125 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 160 126 moveto
162 116 lineto
156 124 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	2 -> 3
newpath 81 80 moveto
72 71 61 60 52 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 54 49 moveto
45 44 lineto
50 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	4
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
99 21 moveto 8 -0.5 (4) alignedtext
end grestore
end grestore

%	2 -> 4
newpath 99 80 moveto
99 72 99 63 99 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 54 moveto
99 44 lineto
97 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	6
gsave 10 dict begin
newpath 155 8 moveto
186 8 lineto
stroke
newpath 186 8 moveto
191 8 198 13 198 19 curveto
stroke
newpath 198 19 moveto
198 32 lineto
stroke
newpath 198 32 moveto
198 38 192 44 186 44 curveto
stroke
newpath 186 44 moveto
155 44 lineto
stroke
newpath 155 44 moveto
150 44 144 38 144 32 curveto
stroke
newpath 144 32 moveto
144 19 lineto
stroke
newpath 144 19 moveto
144 13 149 8 155 8 curveto
stroke
gsave 10 dict begin
171 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	5 -> 6
newpath 171 80 moveto
171 72 171 63 171 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 54 moveto
171 44 lineto
169 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	7
gsave 10 dict begin
newpath 227 8 moveto
258 8 lineto
stroke
newpath 258 8 moveto
263 8 270 13 270 19 curveto
stroke
newpath 270 19 moveto
270 32 lineto
stroke
newpath 270 32 moveto
270 38 264 44 258 44 curveto
stroke
newpath 258 44 moveto
227 44 lineto
stroke
newpath 227 44 moveto
222 44 216 38 216 32 curveto
stroke
newpath 216 32 moveto
216 19 lineto
stroke
newpath 216 19 moveto
216 13 221 8 227 8 curveto
stroke
gsave 10 dict begin
229 21 moveto 7 -0.5 (8) alignedtext
end grestore
newpath 243 8 moveto
243 44 lineto
stroke
gsave 10 dict begin
256 21 moveto 7 -0.5 (9) alignedtext
end grestore
end grestore

%	5 -> 7
newpath 189 80 moveto
198 71 209 60 218 51 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 220 53 moveto
225 44 lineto
216 49 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5543 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(13)p eop end
%%Page: 13 14
TeXDict begin 13 13 bop 892 115 a Fn(Aufspaltens)69 b(von)g(4{Knoten)0
515 y Fl(Der)58 b(4{Knoten)364 1890 y @beginspecial 35
@llx 35 @lly 341 @urx 183 @ury 3060 @rwi @setspecial
%%BeginDocument: 4-node.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 183
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 183
%%PageOrientation: Portrait
gsave
35 35 306 148 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 118 102 moveto
184 102 lineto
stroke
newpath 184 102 moveto
190 102 196 107 196 113 curveto
stroke
newpath 196 113 moveto
196 126 lineto
stroke
newpath 196 126 moveto
196 132 190 138 184 138 curveto
stroke
newpath 184 138 moveto
118 138 lineto
stroke
newpath 118 138 moveto
112 138 107 132 107 126 curveto
stroke
newpath 107 126 moveto
107 113 lineto
stroke
newpath 107 113 moveto
107 107 112 102 118 102 curveto
stroke
gsave 10 dict begin
121 115 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 102 moveto
135 138 lineto
stroke
gsave 10 dict begin
150 115 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 102 moveto
166 138 lineto
stroke
gsave 10 dict begin
181 115 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 107 102 moveto
104 98 69 71 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 46 lineto
45 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 141 102 moveto
135 91 128 76 121 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 62 moveto
116 55 lineto
119 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 161 102 moveto
168 91 175 76 182 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 184 65 moveto
187 55 lineto
180 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 196 102 moveto
214 84 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2172 a(wird)g(durch)f(Aufspalten)h(zu)364
4166 y @beginspecial 35 @llx 35 @lly 341 @urx 255 @ury
3060 @rwi @setspecial
%%BeginDocument: aufspalt.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 255
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 255
%%PageOrientation: Portrait
gsave
35 35 306 220 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	n
gsave 10 dict begin
newpath 135 174 moveto
166 174 lineto
stroke
newpath 166 174 moveto
171 174 178 179 178 185 curveto
stroke
newpath 178 185 moveto
178 198 lineto
stroke
newpath 178 198 moveto
178 204 172 210 166 210 curveto
stroke
newpath 166 210 moveto
135 210 lineto
stroke
newpath 135 210 moveto
130 210 124 204 124 198 curveto
stroke
newpath 124 198 moveto
124 185 lineto
stroke
newpath 124 185 moveto
124 179 129 174 135 174 curveto
stroke
gsave 10 dict begin
151 187 moveto 17 -0.5 (k2) alignedtext
end grestore
end grestore

%	n1
gsave 10 dict begin
newpath 91 102 moveto
122 102 lineto
stroke
newpath 122 102 moveto
127 102 134 107 134 113 curveto
stroke
newpath 134 113 moveto
134 126 lineto
stroke
newpath 134 126 moveto
134 132 128 138 122 138 curveto
stroke
newpath 122 138 moveto
91 138 lineto
stroke
newpath 91 138 moveto
86 138 80 132 80 126 curveto
stroke
newpath 80 126 moveto
80 113 lineto
stroke
newpath 80 113 moveto
80 107 85 102 91 102 curveto
stroke
gsave 10 dict begin
107 115 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	n -> n1
newpath 140 174 moveto
135 166 129 155 123 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 125 145 moveto
118 138 lineto
121 148 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	n2
gsave 10 dict begin
newpath 180 102 moveto
211 102 lineto
stroke
newpath 211 102 moveto
216 102 223 107 223 113 curveto
stroke
newpath 223 113 moveto
223 126 lineto
stroke
newpath 223 126 moveto
223 132 217 138 211 138 curveto
stroke
newpath 211 138 moveto
180 138 lineto
stroke
newpath 180 138 moveto
175 138 169 132 169 126 curveto
stroke
newpath 169 126 moveto
169 113 lineto
stroke
newpath 169 113 moveto
169 107 174 102 180 102 curveto
stroke
gsave 10 dict begin
196 115 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	n -> n2
newpath 162 174 moveto
167 166 174 155 180 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 182 148 moveto
185 138 lineto
178 145 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n1 -> l
newpath 90 102 moveto
76 88 57 68 44 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 47 53 moveto
38 48 lineto
43 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n1 -> ml
newpath 107 102 moveto
107 95 107 85 107 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 110 76 moveto
107 66 lineto
105 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n2 -> mr
newpath 196 102 moveto
196 95 196 85 196 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 199 76 moveto
196 66 lineto
194 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n2 -> r
newpath 214 102 moveto
227 88 246 69 260 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 261 58 moveto
266 49 lineto
257 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(14)p eop end
%%Page: 14 15
TeXDict begin 14 14 bop 614 115 a Fn(Implementierung)68
b(des)h(Aufspaltens)0 473 y Fg(NodePtr)74 b(split4Node\(NodePtr)j(t\))0
625 y({)293 778 y(assert\(t->type)e(==)f(FOUR\);)293
930 y(//)f(create)h(the)g(left)g(node)293 1083 y(NodePtr)g(left)g(=)f
(malloc\()i(sizeof\(struct)g(Node\))f(\);)293 1235 y(left->type)h(=)e
(TWO;)293 1387 y(left->key1)i(=)e(t->key1;)293 1540 y(left->val1)i(=)e
(t->val1;)293 1692 y(left->ptr1)i(=)e(t->ptr1;)293 1845
y(left->ptr2)i(=)e(t->ptr2;)293 1997 y(left->ptr3)i(=)e(0;)293
2150 y(left->ptr4)i(=)e(0;)293 2302 y(//)g(create)h(the)g(right)g(node)
293 2455 y(NodePtr)g(right)g(=)f(malloc\()i(sizeof\(struct)g(Node\))f
(\);)293 2607 y(right->type)h(=)e(TWO;)293 2759 y(right->key1)i(=)e
(t->key3;)293 2912 y(right->val1)i(=)e(t->val3;)293 3064
y(right->ptr1)i(=)e(t->ptr3;)293 3217 y(right->ptr2)i(=)e(t->ptr4;)293
3369 y(right->ptr3)i(=)e(0;)293 3522 y(right->ptr4)i(=)e(0;)293
3674 y(//)g(create)h(the)g(top)g(node)293 3827 y(NodePtr)g(top)g(=)f
(malloc\()h(sizeof\(struct)i(Node\))e(\);)293 3979 y(top->type)g(=)g
(TWO;)293 4131 y(top->key1)g(=)g(t->key2;)293 4284 y(top->val1)g(=)g
(t->val2;)293 4436 y(top->ptr1)g(=)g(left;)293 4589 y(top->ptr2)g(=)g
(right;)293 4741 y(top->ptr3)g(=)g(0;)293 4894 y(top->ptr4)g(=)g(0;)293
5046 y(free\(t\);)733 b(//)73 b(the)h(old)g(4-node)g(is)f(disposed)293
5199 y(return)h(top;)0 5351 y(})p 0 5542 4016 24 v 0
5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46
b(15)p eop end
%%Page: 15 16
TeXDict begin 15 15 bop 837 115 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)0 515 y Fl(1.)57 b(F)-5 b(all:)59
b(V)-5 b(ater{Knoten)58 b(ist)f(2{Knoten,)g(4{Knoten)h(ist)g(links:)364
2692 y @beginspecial 35 @llx 35 @lly 341 @urx 277 @ury
3060 @rwi @setspecial
%%BeginDocument: 2-4-node-1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Tue Sep 23 20:36:36 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 179 196 moveto
210 196 lineto
stroke
newpath 210 196 moveto
215 196 222 201 222 207 curveto
stroke
newpath 222 207 moveto
222 220 lineto
stroke
newpath 222 220 moveto
222 226 216 232 210 232 curveto
stroke
newpath 210 232 moveto
179 232 lineto
stroke
newpath 179 232 moveto
174 232 168 226 168 220 curveto
stroke
newpath 168 220 moveto
168 207 lineto
stroke
newpath 168 207 moveto
168 201 173 196 179 196 curveto
stroke
gsave 10 dict begin
195 209 moveto 8 -0.5 (p) alignedtext
end grestore
end grestore

%	n
gsave 10 dict begin
newpath 118 113 moveto
184 113 lineto
stroke
newpath 184 113 moveto
190 113 196 118 196 124 curveto
stroke
newpath 196 124 moveto
196 137 lineto
stroke
newpath 196 137 moveto
196 143 190 149 184 149 curveto
stroke
newpath 184 149 moveto
118 149 lineto
stroke
newpath 118 149 moveto
112 149 107 143 107 137 curveto
stroke
newpath 107 137 moveto
107 124 lineto
stroke
newpath 107 124 moveto
107 118 112 113 118 113 curveto
stroke
gsave 10 dict begin
121 126 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 113 moveto
135 149 lineto
stroke
gsave 10 dict begin
150 126 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 113 moveto
166 149 lineto
stroke
gsave 10 dict begin
181 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> n
newpath 185 196 moveto
179 185 172 172 166 160 curveto
166 159 165 158 165 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 167 157 moveto
160 149 lineto
163 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o
gsave 10 dict begin
newpath 240 159 moveto
213 117 lineto
267 117 lineto
closepath
stroke
gsave 10 dict begin
240 126 moveto 8 -0.5 (o) alignedtext
end grestore
end grestore

%	p -> o
newpath 205 196 moveto
212 184 220 168 227 155 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 229 157 moveto
232 147 lineto
225 154 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 114 113 moveto
112 109 110 105 107 102 curveto
107 100 71 71 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 47 lineto
46 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 143 113 moveto
136 99 127 80 120 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 63 moveto
116 55 lineto
118 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 160 113 moveto
167 100 176 80 183 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 185 66 moveto
187 56 lineto
180 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 188 113 moveto
191 109 193 105 196 102 curveto
212 82 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2974 a(Aufspalten)f(und)h(Knoten)f(nach)h(ob)5
b(en)56 b(schieb)5 b(en:)364 5151 y @beginspecial 35
@llx 35 @lly 341 @urx 277 @ury 3060 @rwi @setspecial
%%BeginDocument: 3-2-node-1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 180 196 moveto
211 196 lineto
stroke
newpath 211 196 moveto
216 196 223 201 223 207 curveto
stroke
newpath 223 207 moveto
223 220 lineto
stroke
newpath 223 220 moveto
223 226 217 232 211 232 curveto
stroke
newpath 211 232 moveto
180 232 lineto
stroke
newpath 180 232 moveto
175 232 169 226 169 220 curveto
stroke
newpath 169 220 moveto
169 207 lineto
stroke
newpath 169 207 moveto
169 201 174 196 180 196 curveto
stroke
gsave 10 dict begin
184 209 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 200 196 moveto
200 232 lineto
stroke
gsave 10 dict begin
211 209 moveto 8 -0.5 (p) alignedtext
end grestore
end grestore

%	k1
gsave 10 dict begin
newpath 91 113 moveto
122 113 lineto
stroke
newpath 122 113 moveto
127 113 134 118 134 124 curveto
stroke
newpath 134 124 moveto
134 137 lineto
stroke
newpath 134 137 moveto
134 143 128 149 122 149 curveto
stroke
newpath 122 149 moveto
91 149 lineto
stroke
newpath 91 149 moveto
86 149 80 143 80 137 curveto
stroke
newpath 80 137 moveto
80 124 lineto
stroke
newpath 80 124 moveto
80 118 85 113 91 113 curveto
stroke
gsave 10 dict begin
107 126 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	p -> k1
newpath 169 196 moveto
153 179 149 176 134 160 curveto
133 159 132 157 131 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 133 154 moveto
124 149 lineto
129 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k3
gsave 10 dict begin
newpath 180 113 moveto
211 113 lineto
stroke
newpath 211 113 moveto
216 113 223 118 223 124 curveto
stroke
newpath 223 124 moveto
223 137 lineto
stroke
newpath 223 137 moveto
223 143 217 149 211 149 curveto
stroke
newpath 211 149 moveto
180 149 lineto
stroke
newpath 180 149 moveto
175 149 169 143 169 137 curveto
stroke
newpath 169 137 moveto
169 124 lineto
stroke
newpath 169 124 moveto
169 118 174 113 180 113 curveto
stroke
gsave 10 dict begin
196 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> k3
newpath 196 196 moveto
196 185 196 171 196 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 199 159 moveto
196 149 lineto
194 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o
gsave 10 dict begin
newpath 268 159 moveto
241 117 lineto
295 117 lineto
closepath
stroke
gsave 10 dict begin
268 126 moveto 8 -0.5 (o) alignedtext
end grestore
end grestore

%	p -> o
newpath 223 196 moveto
233 181 245 164 253 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 254 155 moveto
258 145 lineto
250 152 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	k1 -> l
newpath 92 113 moveto
77 96 57 72 42 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 55 moveto
37 49 lineto
41 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	k1 -> ml
newpath 107 113 moveto
107 103 107 89 107 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 110 76 moveto
107 66 lineto
105 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	k3 -> mr
newpath 196 113 moveto
196 103 196 89 196 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 199 76 moveto
196 66 lineto
194 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	k3 -> r
newpath 212 113 moveto
226 96 247 72 262 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 263 58 moveto
267 49 lineto
259 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(16)p eop end
%%Page: 16 17
TeXDict begin 16 16 bop 837 115 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)0 515 y Fl(2.)53 b(F)-5 b(all:)55
b(V)-5 b(ater{Knoten)53 b(ist)h(2{Knoten,)f(4{Knoten)g(ist)h(rechts:)
364 2692 y @beginspecial 35 @llx 35 @lly 341 @urx 277
@ury 3060 @rwi @setspecial
%%BeginDocument: 2-4-node-2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 90 196 moveto
121 196 lineto
stroke
newpath 121 196 moveto
126 196 133 201 133 207 curveto
stroke
newpath 133 207 moveto
133 220 lineto
stroke
newpath 133 220 moveto
133 226 127 232 121 232 curveto
stroke
newpath 121 232 moveto
90 232 lineto
stroke
newpath 90 232 moveto
85 232 79 226 79 220 curveto
stroke
newpath 79 220 moveto
79 207 lineto
stroke
newpath 79 207 moveto
79 201 84 196 90 196 curveto
stroke
gsave 10 dict begin
106 209 moveto 8 -0.5 (p) alignedtext
end grestore
end grestore

%	o
gsave 10 dict begin
newpath 62 159 moveto
35 117 lineto
89 117 lineto
closepath
stroke
gsave 10 dict begin
62 126 moveto 8 -0.5 (o) alignedtext
end grestore
end grestore

%	p -> o
newpath 96 196 moveto
90 184 82 168 75 155 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 77 154 moveto
70 147 lineto
73 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	n
gsave 10 dict begin
newpath 118 113 moveto
184 113 lineto
stroke
newpath 184 113 moveto
190 113 196 118 196 124 curveto
stroke
newpath 196 124 moveto
196 137 lineto
stroke
newpath 196 137 moveto
196 143 190 149 184 149 curveto
stroke
newpath 184 149 moveto
118 149 lineto
stroke
newpath 118 149 moveto
112 149 107 143 107 137 curveto
stroke
newpath 107 137 moveto
107 124 lineto
stroke
newpath 107 124 moveto
107 118 112 113 118 113 curveto
stroke
gsave 10 dict begin
121 126 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 113 moveto
135 149 lineto
stroke
gsave 10 dict begin
150 126 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 113 moveto
166 149 lineto
stroke
gsave 10 dict begin
181 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> n
newpath 116 196 moveto
122 185 130 170 137 157 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 139 159 moveto
141 149 lineto
134 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 113 113 moveto
112 109 109 105 107 102 curveto
106 100 70 71 46 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 52 moveto
39 47 lineto
45 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 143 113 moveto
136 99 127 80 120 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 63 moveto
116 55 lineto
118 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 160 113 moveto
167 100 176 80 183 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 185 66 moveto
187 56 lineto
180 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 188 113 moveto
191 109 193 105 196 102 curveto
212 82 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2974 a(Aufspalten)j(und)h(Knoten)f(nach)h(ob)5
b(en)56 b(schieb)5 b(en:)364 5151 y @beginspecial 35
@llx 35 @lly 341 @urx 277 @ury 3060 @rwi @setspecial
%%BeginDocument: 3-2-node-2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 91 196 moveto
122 196 lineto
stroke
newpath 122 196 moveto
127 196 134 201 134 207 curveto
stroke
newpath 134 207 moveto
134 220 lineto
stroke
newpath 134 220 moveto
134 226 128 232 122 232 curveto
stroke
newpath 122 232 moveto
91 232 lineto
stroke
newpath 91 232 moveto
86 232 80 226 80 220 curveto
stroke
newpath 80 220 moveto
80 207 lineto
stroke
newpath 80 207 moveto
80 201 85 196 91 196 curveto
stroke
gsave 10 dict begin
91 209 moveto 8 -0.5 (p) alignedtext
end grestore
newpath 102 196 moveto
102 232 lineto
stroke
gsave 10 dict begin
118 209 moveto 17 -0.5 (k2) alignedtext
end grestore
end grestore

%	o
gsave 10 dict begin
newpath 35 159 moveto
8 117 lineto
62 117 lineto
closepath
stroke
gsave 10 dict begin
35 126 moveto 8 -0.5 (o) alignedtext
end grestore
end grestore

%	p -> o
newpath 80 196 moveto
70 181 58 164 50 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 53 152 moveto
45 145 lineto
49 155 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k1
gsave 10 dict begin
newpath 91 113 moveto
122 113 lineto
stroke
newpath 122 113 moveto
127 113 134 118 134 124 curveto
stroke
newpath 134 124 moveto
134 137 lineto
stroke
newpath 134 137 moveto
134 143 128 149 122 149 curveto
stroke
newpath 122 149 moveto
91 149 lineto
stroke
newpath 91 149 moveto
86 149 80 143 80 137 curveto
stroke
newpath 80 137 moveto
80 124 lineto
stroke
newpath 80 124 moveto
80 118 85 113 91 113 curveto
stroke
gsave 10 dict begin
107 126 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	p -> k1
newpath 107 196 moveto
107 185 107 171 107 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 110 159 moveto
107 149 lineto
105 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k3
gsave 10 dict begin
newpath 180 113 moveto
211 113 lineto
stroke
newpath 211 113 moveto
216 113 223 118 223 124 curveto
stroke
newpath 223 124 moveto
223 137 lineto
stroke
newpath 223 137 moveto
223 143 217 149 211 149 curveto
stroke
newpath 211 149 moveto
180 149 lineto
stroke
newpath 180 149 moveto
175 149 169 143 169 137 curveto
stroke
newpath 169 137 moveto
169 124 lineto
stroke
newpath 169 124 moveto
169 118 174 113 180 113 curveto
stroke
gsave 10 dict begin
196 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> k3
newpath 134 196 moveto
149 179 153 176 169 160 curveto
170 159 171 157 172 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 158 moveto
179 149 lineto
170 154 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	k1 -> l
newpath 92 113 moveto
78 96 57 72 42 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 55 moveto
37 49 lineto
41 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	k1 -> ml
newpath 107 113 moveto
107 103 107 89 107 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 110 76 moveto
107 66 lineto
105 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	k3 -> mr
newpath 196 113 moveto
196 103 196 89 196 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 199 76 moveto
196 66 lineto
194 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	k3 -> r
newpath 212 113 moveto
226 96 247 72 262 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 263 58 moveto
267 49 lineto
259 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(17)p eop end
%%Page: 17 18
TeXDict begin 17 17 bop 837 115 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)0 515 y Fl(3.)39 b(F)-5 b(all:)40
b(V)-5 b(ater{Knoten)39 b(ist)g(3{Knoten,)f(4{Knoten)h(ist)g(1.)g
(Sohn:)364 2692 y @beginspecial 35 @llx 35 @lly 392 @urx
277 @ury 3570 @rwi @setspecial
%%BeginDocument: 3-4-knoten-1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (root) root
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 392 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 392 277
%%PageOrientation: Portrait
gsave
35 35 357 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 224 196 moveto
259 196 lineto
stroke
newpath 259 196 moveto
265 196 271 201 271 207 curveto
stroke
newpath 271 207 moveto
271 220 lineto
stroke
newpath 271 220 moveto
271 226 265 232 259 232 curveto
stroke
newpath 259 232 moveto
224 232 lineto
stroke
newpath 224 232 moveto
218 232 213 226 213 220 curveto
stroke
newpath 213 220 moveto
213 207 lineto
stroke
newpath 213 207 moveto
213 201 218 196 224 196 curveto
stroke
gsave 10 dict begin
226 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 240 196 moveto
240 232 lineto
stroke
gsave 10 dict begin
255 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	n
gsave 10 dict begin
newpath 118 113 moveto
184 113 lineto
stroke
newpath 184 113 moveto
190 113 196 118 196 124 curveto
stroke
newpath 196 124 moveto
196 137 lineto
stroke
newpath 196 137 moveto
196 143 190 149 184 149 curveto
stroke
newpath 184 149 moveto
118 149 lineto
stroke
newpath 118 149 moveto
112 149 107 143 107 137 curveto
stroke
newpath 107 137 moveto
107 124 lineto
stroke
newpath 107 124 moveto
107 118 112 113 118 113 curveto
stroke
gsave 10 dict begin
121 126 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 113 moveto
135 149 lineto
stroke
gsave 10 dict begin
150 126 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 113 moveto
166 149 lineto
stroke
gsave 10 dict begin
181 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> n
newpath 213 196 moveto
194 177 182 180 166 160 curveto
165 159 165 158 164 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 166 157 moveto
159 149 lineto
162 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o1
gsave 10 dict begin
newpath 242 159 moveto
213 117 lineto
271 117 lineto
closepath
stroke
gsave 10 dict begin
242 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 242 196 moveto
242 189 242 179 242 170 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 245 170 moveto
242 160 lineto
240 170 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 322 159 moveto
289 117 lineto
355 117 lineto
closepath
stroke
gsave 10 dict begin
322 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 270 196 moveto
280 183 294 166 305 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 306 154 moveto
311 145 lineto
303 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 114 113 moveto
112 109 110 105 107 102 curveto
107 100 71 71 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 47 lineto
46 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 143 113 moveto
136 99 127 80 120 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 63 moveto
116 55 lineto
118 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 160 113 moveto
167 100 176 80 183 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 185 66 moveto
187 56 lineto
180 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 188 113 moveto
191 109 193 105 196 102 curveto
212 82 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2974 a(Aufspalten)57 b(und)h(Knoten)f(nach)h(ob)5
b(en)56 b(schieb)5 b(en:)364 5151 y @beginspecial 35
@llx 35 @lly 420 @urx 277 @ury 3850 @rwi @setspecial
%%BeginDocument: 4-2-knoten-1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 420 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 420 277
%%PageOrientation: Portrait
gsave
35 35 385 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 202 196 moveto
264 196 lineto
stroke
newpath 264 196 moveto
270 196 277 201 277 207 curveto
stroke
newpath 277 207 moveto
277 220 lineto
stroke
newpath 277 220 moveto
277 226 271 232 265 232 curveto
stroke
newpath 265 232 moveto
203 232 lineto
stroke
newpath 203 232 moveto
197 232 191 226 191 220 curveto
stroke
newpath 191 220 moveto
191 207 lineto
stroke
newpath 191 207 moveto
191 201 196 196 202 196 curveto
stroke
gsave 10 dict begin
205 209 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 219 196 moveto
219 232 lineto
stroke
gsave 10 dict begin
232 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 246 196 moveto
246 232 lineto
stroke
gsave 10 dict begin
261 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k1
gsave 10 dict begin
newpath 91 113 moveto
122 113 lineto
stroke
newpath 122 113 moveto
127 113 134 118 134 124 curveto
stroke
newpath 134 124 moveto
134 137 lineto
stroke
newpath 134 137 moveto
134 143 128 149 122 149 curveto
stroke
newpath 122 149 moveto
91 149 lineto
stroke
newpath 91 149 moveto
86 149 80 143 80 137 curveto
stroke
newpath 80 137 moveto
80 124 lineto
stroke
newpath 80 124 moveto
80 118 85 113 91 113 curveto
stroke
gsave 10 dict begin
107 126 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	p -> k1
newpath 191 196 moveto
168 175 157 179 134 160 curveto
133 159 131 158 130 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 132 154 moveto
123 149 lineto
128 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k3
gsave 10 dict begin
newpath 180 113 moveto
211 113 lineto
stroke
newpath 211 113 moveto
216 113 223 118 223 124 curveto
stroke
newpath 223 124 moveto
223 137 lineto
stroke
newpath 223 137 moveto
223 143 217 149 211 149 curveto
stroke
newpath 211 149 moveto
180 149 lineto
stroke
newpath 180 149 moveto
175 149 169 143 169 137 curveto
stroke
newpath 169 137 moveto
169 124 lineto
stroke
newpath 169 124 moveto
169 118 174 113 180 113 curveto
stroke
gsave 10 dict begin
196 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> k3
newpath 225 196 moveto
220 185 213 170 208 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 210 157 moveto
204 149 lineto
206 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o1
gsave 10 dict begin
newpath 270 159 moveto
241 117 lineto
299 117 lineto
closepath
stroke
gsave 10 dict begin
270 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 241 196 moveto
246 185 253 170 258 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 260 159 moveto
262 149 lineto
256 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 350 159 moveto
317 117 lineto
383 117 lineto
closepath
stroke
gsave 10 dict begin
350 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 277 196 moveto
294 178 315 160 330 147 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 330 150 moveto
336 142 lineto
327 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	k1 -> l
newpath 92 113 moveto
77 96 57 72 42 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 55 moveto
37 49 lineto
41 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	k1 -> ml
newpath 107 113 moveto
107 103 107 89 107 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 110 76 moveto
107 66 lineto
105 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	k3 -> mr
newpath 196 113 moveto
196 103 196 89 196 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 199 76 moveto
196 66 lineto
194 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	k3 -> r
newpath 212 113 moveto
226 96 247 72 262 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 263 58 moveto
267 49 lineto
259 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(18)p eop end
%%Page: 18 19
TeXDict begin 18 18 bop 837 115 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)0 515 y Fl(4.)39 b(F)-5 b(all:)40
b(V)-5 b(ater{Knoten)39 b(ist)g(3{Knoten,)f(4{Knoten)h(ist)g(2.)g
(Sohn:)364 2692 y @beginspecial 35 @llx 35 @lly 341 @urx
277 @ury 3060 @rwi @setspecial
%%BeginDocument: 3-4-knoten-2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 133 196 moveto
168 196 lineto
stroke
newpath 168 196 moveto
174 196 180 201 180 207 curveto
stroke
newpath 180 207 moveto
180 220 lineto
stroke
newpath 180 220 moveto
180 226 174 232 168 232 curveto
stroke
newpath 168 232 moveto
133 232 lineto
stroke
newpath 133 232 moveto
127 232 122 226 122 220 curveto
stroke
newpath 122 220 moveto
122 207 lineto
stroke
newpath 122 207 moveto
122 201 127 196 133 196 curveto
stroke
gsave 10 dict begin
135 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 149 196 moveto
149 232 lineto
stroke
gsave 10 dict begin
164 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	o1
gsave 10 dict begin
newpath 60 159 moveto
31 117 lineto
89 117 lineto
closepath
stroke
gsave 10 dict begin
60 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 122 196 moveto
107 179 90 161 77 148 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 80 148 moveto
72 142 lineto
76 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	n
gsave 10 dict begin
newpath 118 113 moveto
184 113 lineto
stroke
newpath 184 113 moveto
190 113 196 118 196 124 curveto
stroke
newpath 196 124 moveto
196 137 lineto
stroke
newpath 196 137 moveto
196 143 190 149 184 149 curveto
stroke
newpath 184 149 moveto
118 149 lineto
stroke
newpath 118 149 moveto
112 149 107 143 107 137 curveto
stroke
newpath 107 137 moveto
107 124 lineto
stroke
newpath 107 124 moveto
107 118 112 113 118 113 curveto
stroke
gsave 10 dict begin
121 126 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 135 113 moveto
135 149 lineto
stroke
gsave 10 dict begin
150 126 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 113 moveto
166 149 lineto
stroke
gsave 10 dict begin
181 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> n
newpath 151 196 moveto
151 185 151 171 151 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 154 159 moveto
151 149 lineto
149 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 246 159 moveto
213 117 lineto
279 117 lineto
closepath
stroke
gsave 10 dict begin
246 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 180 196 moveto
196 180 213 162 227 149 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 228 152 moveto
233 143 lineto
224 148 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 113 113 moveto
112 109 109 105 107 102 curveto
106 100 70 71 46 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 52 moveto
39 47 lineto
45 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 143 113 moveto
136 99 127 80 120 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 63 moveto
116 55 lineto
118 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 160 113 moveto
167 100 176 80 183 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 185 66 moveto
187 56 lineto
180 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 188 113 moveto
191 109 193 105 196 102 curveto
212 82 221 82 241 66 curveto
246 62 252 57 258 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 259 55 moveto
265 47 lineto
256 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2974 a(Aufspalten)57 b(und)h(Knoten)f(nach)h(ob)5
b(en)56 b(schieb)5 b(en:)364 5151 y @beginspecial 35
@llx 35 @lly 341 @urx 277 @ury 3060 @rwi @setspecial
%%BeginDocument: 4-2-knoten-2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 341 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 341 277
%%PageOrientation: Portrait
gsave
35 35 306 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 119 196 moveto
185 196 lineto
stroke
newpath 185 196 moveto
191 196 197 201 197 207 curveto
stroke
newpath 197 207 moveto
197 220 lineto
stroke
newpath 197 220 moveto
197 226 191 232 185 232 curveto
stroke
newpath 185 232 moveto
119 232 lineto
stroke
newpath 119 232 moveto
113 232 108 226 108 220 curveto
stroke
newpath 108 220 moveto
108 207 lineto
stroke
newpath 108 207 moveto
108 201 113 196 119 196 curveto
stroke
gsave 10 dict begin
121 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 135 196 moveto
135 232 lineto
stroke
gsave 10 dict begin
150 209 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 166 196 moveto
166 232 lineto
stroke
gsave 10 dict begin
181 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	o1
gsave 10 dict begin
newpath 37 159 moveto
8 117 lineto
66 117 lineto
closepath
stroke
gsave 10 dict begin
37 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 108 196 moveto
90 178 70 159 55 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 58 145 moveto
49 141 lineto
55 149 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k1
gsave 10 dict begin
newpath 95 113 moveto
126 113 lineto
stroke
newpath 126 113 moveto
131 113 138 118 138 124 curveto
stroke
newpath 138 124 moveto
138 137 lineto
stroke
newpath 138 137 moveto
138 143 132 149 126 149 curveto
stroke
newpath 126 149 moveto
95 149 lineto
stroke
newpath 95 149 moveto
90 149 84 143 84 137 curveto
stroke
newpath 84 137 moveto
84 124 lineto
stroke
newpath 84 124 moveto
84 118 89 113 95 113 curveto
stroke
gsave 10 dict begin
111 126 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	p -> k1
newpath 142 196 moveto
137 185 130 170 124 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 126 157 moveto
120 149 lineto
122 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k3
gsave 10 dict begin
newpath 175 113 moveto
206 113 lineto
stroke
newpath 206 113 moveto
211 113 218 118 218 124 curveto
stroke
newpath 218 124 moveto
218 137 lineto
stroke
newpath 218 137 moveto
218 143 212 149 206 149 curveto
stroke
newpath 206 149 moveto
175 149 lineto
stroke
newpath 175 149 moveto
170 149 164 143 164 137 curveto
stroke
newpath 164 137 moveto
164 124 lineto
stroke
newpath 164 124 moveto
164 118 169 113 175 113 curveto
stroke
gsave 10 dict begin
191 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> k3
newpath 160 196 moveto
165 185 172 170 178 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 180 159 moveto
182 149 lineto
176 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 269 159 moveto
236 117 lineto
302 117 lineto
closepath
stroke
gsave 10 dict begin
269 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 197 196 moveto
214 178 235 160 250 147 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 250 150 moveto
256 142 lineto
247 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 27 64 moveto
0 24 lineto
54 24 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	k1 -> l
newpath 95 113 moveto
80 96 58 72 43 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 46 54 moveto
37 49 lineto
42 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 107 65 moveto
72 23 lineto
142 23 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	k1 -> ml
newpath 110 113 moveto
109 102 109 88 109 75 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 111 75 moveto
108 65 lineto
107 75 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 196 65 moveto
160 23 lineto
232 23 lineto
closepath
stroke
gsave 10 dict begin
196 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	k3 -> mr
newpath 192 113 moveto
193 102 194 87 194 73 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 197 74 moveto
194 64 lineto
192 74 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 277 65 moveto
250 23 lineto
304 23 lineto
closepath
stroke
gsave 10 dict begin
277 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	k3 -> r
newpath 208 113 moveto
223 96 246 72 261 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 262 58 moveto
266 49 lineto
258 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(19)p eop end
%%Page: 19 20
TeXDict begin 19 19 bop 837 115 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)0 515 y Fl(5.)39 b(F)-5 b(all:)40
b(V)-5 b(ater{Knoten)39 b(ist)g(3{Knoten,)f(4{Knoten)h(ist)g(3.)g
(Sohn:)364 2692 y @beginspecial 35 @llx 35 @lly 393 @urx
277 @ury 3580 @rwi @setspecial
%%BeginDocument: 3-4-knoten-3.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 393 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 393 277
%%PageOrientation: Portrait
gsave
35 35 358 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 91 196 moveto
126 196 lineto
stroke
newpath 126 196 moveto
132 196 138 201 138 207 curveto
stroke
newpath 138 207 moveto
138 220 lineto
stroke
newpath 138 220 moveto
138 226 132 232 126 232 curveto
stroke
newpath 126 232 moveto
91 232 lineto
stroke
newpath 91 232 moveto
85 232 80 226 80 220 curveto
stroke
newpath 80 220 moveto
80 207 lineto
stroke
newpath 80 207 moveto
80 201 85 196 91 196 curveto
stroke
gsave 10 dict begin
93 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 107 196 moveto
107 232 lineto
stroke
gsave 10 dict begin
122 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	o1
gsave 10 dict begin
newpath 29 159 moveto
0 117 lineto
58 117 lineto
closepath
stroke
gsave 10 dict begin
29 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 80 196 moveto
68 181 55 164 44 151 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 47 151 moveto
39 144 lineto
43 154 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 109 159 moveto
76 117 lineto
142 117 lineto
closepath
stroke
gsave 10 dict begin
109 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 109 196 moveto
109 189 109 179 109 170 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 112 170 moveto
109 160 lineto
107 170 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	n
gsave 10 dict begin
newpath 171 113 moveto
237 113 lineto
stroke
newpath 237 113 moveto
243 113 249 118 249 124 curveto
stroke
newpath 249 124 moveto
249 137 lineto
stroke
newpath 249 137 moveto
249 143 243 149 237 149 curveto
stroke
newpath 237 149 moveto
171 149 lineto
stroke
newpath 171 149 moveto
165 149 160 143 160 137 curveto
stroke
newpath 160 137 moveto
160 124 lineto
stroke
newpath 160 124 moveto
160 118 165 113 171 113 curveto
stroke
gsave 10 dict begin
174 126 moveto 14 -0.5 (k1) alignedtext
end grestore
newpath 188 113 moveto
188 149 lineto
stroke
gsave 10 dict begin
203 126 moveto 17 -0.5 (k2) alignedtext
end grestore
newpath 219 113 moveto
219 149 lineto
stroke
gsave 10 dict begin
234 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> n
newpath 138 196 moveto
158 177 169 180 188 160 curveto
189 159 189 158 190 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 192 159 moveto
195 149 lineto
188 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 79 64 moveto
52 24 lineto
106 24 lineto
closepath
stroke
gsave 10 dict begin
79 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	n -> l
newpath 166 113 moveto
165 109 162 105 160 102 curveto
144 81 134 82 115 66 curveto
110 62 104 57 98 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 100 52 moveto
91 47 lineto
97 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 159 65 moveto
124 23 lineto
194 23 lineto
closepath
stroke
gsave 10 dict begin
159 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	n -> ml
newpath 195 113 moveto
188 99 179 80 172 63 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 175 63 moveto
168 55 lineto
170 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 248 65 moveto
212 23 lineto
284 23 lineto
closepath
stroke
gsave 10 dict begin
248 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	n -> mr
newpath 212 113 moveto
219 100 228 80 235 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 237 66 moveto
239 56 lineto
232 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 329 65 moveto
302 23 lineto
356 23 lineto
closepath
stroke
gsave 10 dict begin
329 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	n -> r
newpath 241 113 moveto
244 109 246 105 249 102 curveto
250 100 285 71 309 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 311 55 moveto
317 47 lineto
307 51 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2974 a(Aufspalten)57 b(und)h(Knoten)f(nach)h(ob)5
b(en)56 b(schieb)5 b(en:)364 5151 y @beginspecial 35
@llx 35 @lly 421 @urx 277 @ury 3860 @rwi @setspecial
%%BeginDocument: 4-2-knoten-3.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 421 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 421 277
%%PageOrientation: Portrait
gsave
35 35 386 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 116 196 moveto
182 196 lineto
stroke
newpath 182 196 moveto
188 196 194 201 194 207 curveto
stroke
newpath 194 207 moveto
194 220 lineto
stroke
newpath 194 220 moveto
194 226 188 232 182 232 curveto
stroke
newpath 182 232 moveto
116 232 lineto
stroke
newpath 116 232 moveto
110 232 105 226 105 220 curveto
stroke
newpath 105 220 moveto
105 207 lineto
stroke
newpath 105 207 moveto
105 201 110 196 116 196 curveto
stroke
gsave 10 dict begin
118 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 132 196 moveto
132 232 lineto
stroke
gsave 10 dict begin
147 209 moveto 17 -0.5 (p2) alignedtext
end grestore
newpath 163 196 moveto
163 232 lineto
stroke
gsave 10 dict begin
178 209 moveto 17 -0.5 (k2) alignedtext
end grestore
end grestore

%	o1
gsave 10 dict begin
newpath 29 159 moveto
0 117 lineto
58 117 lineto
closepath
stroke
gsave 10 dict begin
29 126 moveto 12 -0.5 (o1) alignedtext
end grestore
end grestore

%	p -> o1
newpath 105 196 moveto
87 177 64 157 48 145 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 51 144 moveto
42 140 lineto
48 148 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	o2
gsave 10 dict begin
newpath 109 159 moveto
76 117 lineto
142 117 lineto
closepath
stroke
gsave 10 dict begin
109 126 moveto 16 -0.5 (o2) alignedtext
end grestore
end grestore

%	p -> o2
newpath 140 196 moveto
134 185 127 170 121 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 157 moveto
117 149 lineto
119 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k1
gsave 10 dict begin
newpath 171 113 moveto
202 113 lineto
stroke
newpath 202 113 moveto
207 113 214 118 214 124 curveto
stroke
newpath 214 124 moveto
214 137 lineto
stroke
newpath 214 137 moveto
214 143 208 149 202 149 curveto
stroke
newpath 202 149 moveto
171 149 lineto
stroke
newpath 171 149 moveto
166 149 160 143 160 137 curveto
stroke
newpath 160 137 moveto
160 124 lineto
stroke
newpath 160 124 moveto
160 118 165 113 171 113 curveto
stroke
gsave 10 dict begin
187 126 moveto 14 -0.5 (k1) alignedtext
end grestore
end grestore

%	p -> k1
newpath 156 196 moveto
162 185 169 170 175 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 177 159 moveto
179 149 lineto
173 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k3
gsave 10 dict begin
newpath 260 113 moveto
291 113 lineto
stroke
newpath 291 113 moveto
296 113 303 118 303 124 curveto
stroke
newpath 303 124 moveto
303 137 lineto
stroke
newpath 303 137 moveto
303 143 297 149 291 149 curveto
stroke
newpath 291 149 moveto
260 149 lineto
stroke
newpath 260 149 moveto
255 149 249 143 249 137 curveto
stroke
newpath 249 137 moveto
249 124 lineto
stroke
newpath 249 124 moveto
249 118 254 113 260 113 curveto
stroke
gsave 10 dict begin
276 126 moveto 16 -0.5 (k3) alignedtext
end grestore
end grestore

%	p -> k3
newpath 194 196 moveto
216 176 226 178 249 160 curveto
250 159 252 158 253 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 255 158 moveto
260 149 lineto
251 154 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 107 64 moveto
80 24 lineto
134 24 lineto
closepath
stroke
gsave 10 dict begin
107 32 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	k1 -> l
newpath 172 113 moveto
158 96 137 72 122 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 125 55 moveto
117 49 lineto
121 58 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	ml
gsave 10 dict begin
newpath 187 65 moveto
152 23 lineto
222 23 lineto
closepath
stroke
gsave 10 dict begin
187 32 moveto 18 -0.5 (ml) alignedtext
end grestore
end grestore

%	k1 -> ml
newpath 187 113 moveto
187 103 187 89 187 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 190 76 moveto
187 66 lineto
185 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mr
gsave 10 dict begin
newpath 276 65 moveto
240 23 lineto
312 23 lineto
closepath
stroke
gsave 10 dict begin
276 32 moveto 20 -0.5 (mr) alignedtext
end grestore
end grestore

%	k3 -> mr
newpath 276 113 moveto
276 103 276 89 276 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 279 76 moveto
276 66 lineto
274 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 357 65 moveto
330 23 lineto
384 23 lineto
closepath
stroke
gsave 10 dict begin
357 32 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	k3 -> r
newpath 292 113 moveto
306 96 327 72 342 55 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 343 58 moveto
347 49 lineto
339 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(20)p eop end
%%Page: 20 21
TeXDict begin 20 20 bop 22 126 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)69 b(\(Implementierung\))0 471
y Fl(Knoten)57 b(ist)h(1.)f(Sohn)g(seines)g(V)-5 b(aters)0
697 y Fg(void)74 b(moveUp1\(NodePtr)i(t,)d(NodePtr)i(n\))0
848 y({)293 999 y(assert\(t)f(!=)g(0\);)293 1150 y(assert\(t->type)h
(!=)f(FOUR\);)293 1300 y(assert\(n->type)h(==)f(TWO\);)293
1451 y(if)f(\(t->type)i(==)e(TWO\))h({)585 1602 y(t->key2)h(=)e
(t->key1;)585 1753 y(t->val2)i(=)e(t->val1;)585 1903
y(t->key1)i(=)e(n->key1;)585 2054 y(t->val1)i(=)e(n->val1;)585
2205 y(t->ptr3)i(=)e(t->ptr2;)585 2356 y(t->ptr1)i(=)e(n->ptr1;)585
2507 y(t->ptr2)i(=)e(n->ptr2;)585 2657 y(t->type)i(=)e(THREE;)585
2808 y(free\(n\);)585 2959 y(return;)293 3110 y(})293
3260 y(assert\(t->type)i(==)f(THREE\);)293 3411 y(t->key3)g(=)f
(t->key2;)293 3562 y(t->val3)h(=)f(t->val2;)293 3713
y(t->key2)h(=)f(t->key1;)293 3863 y(t->val2)h(=)f(t->val1;)293
4014 y(t->key1)h(=)f(n->key1;)293 4165 y(t->val1)h(=)f(n->val1;)293
4316 y(t->ptr4)h(=)f(t->ptr3;)293 4466 y(t->ptr3)h(=)f(t->ptr2;)293
4617 y(t->ptr2)h(=)f(n->ptr2;)293 4768 y(t->ptr1)h(=)f(n->ptr1;)293
4919 y(t->type)h(=)f(FOUR;)293 5070 y(free\(n\);)293
5220 y(return;)0 5371 y(})p 0 5543 4016 24 v 0 5669 a
Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(21)p
eop end
%%Page: 21 22
TeXDict begin 21 21 bop 22 126 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)69 b(\(Implementierung\))0 527
y Fl(Knoten)57 b(ist)h(2.)f(Sohn)g(seines)g(V)-5 b(aters)0
809 y Fg(void)74 b(moveUp2\(NodePtr)i(t,)d(NodePtr)i(n\))0
967 y({)293 1124 y(assert\(t)f(!=)g(0\);)293 1282 y(assert\(t->type)h
(!=)f(FOUR\);)293 1440 y(assert\(n->type)h(==)f(TWO\);)293
1598 y(if)f(\(t->type)i(==)e(TWO\))h({)585 1755 y(t->key2)h(=)e
(n->key1;)585 1913 y(t->val2)i(=)e(n->val1;)585 2071
y(t->ptr2)i(=)e(n->ptr1;)585 2229 y(t->ptr3)i(=)e(n->ptr2;)585
2386 y(t->type)i(=)e(THREE;)585 2544 y(free\(n\);)585
2702 y(return;)293 2860 y(})293 3017 y(assert\(t->type)i(==)f(THREE\);)
293 3175 y(t->key3)g(=)f(t->key2;)293 3333 y(t->val3)h(=)f(t->val2;)293
3491 y(t->key2)h(=)f(n->key1;)293 3648 y(t->val2)h(=)f(n->val1;)293
3806 y(t->ptr4)h(=)f(t->ptr3;)293 3964 y(t->ptr3)h(=)f(n->ptr2;)293
4121 y(t->ptr2)h(=)f(n->ptr1;)293 4279 y(t->type)h(=)f(FOUR;)293
4437 y(free\(n\);)293 4595 y(return;)0 4752 y(})p 0 5536
4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(22)p eop end
%%Page: 22 23
TeXDict begin 22 22 bop 22 126 a Fn(Knoten)69 b(nach)g(ob)6
b(en)69 b(schieb)6 b(en)69 b(\(Implementierung\))0 527
y Fl(Knoten)57 b(ist)h(3.)f(Sohn)g(seines)g(V)-5 b(aters)0
809 y Fg(void)74 b(moveUp3\(NodePtr)i(t,)d(NodePtr)i(n\))0
967 y({)293 1124 y(assert\(t)f(!=)g(0\);)293 1282 y(assert\(t->type)h
(==)f(THREE\);)293 1440 y(assert\(n->type)h(==)f(TWO\);)293
1598 y(t->key3)g(=)f(n->key1;)293 1755 y(t->val3)h(=)f(n->val1;)293
1913 y(t->ptr4)h(=)f(n->ptr2;)293 2071 y(t->ptr3)h(=)f(n->ptr1;)293
2229 y(t->type)h(=)f(FOUR;)293 2386 y(free\(n\);)293
2544 y(return;)0 2702 y(})0 2984 y Fl(Auspalten)79 b(von)f(Knoten)h
(ist)g(selten:)f(Wird)h(ein)f(Knoten)g(ein-)0 3142 y(gef\177)-86
b(ugt,)49 b(so)h(mu\031)g(im)g(Mittel)g(w)-5 b(eniger)49
b(als)i(1)f(Knoten)f(aufgespal-)0 3300 y(tet)57 b(w)-5
b(erden!)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(23)p eop end
%%Page: 23 24
TeXDict begin 23 23 bop 295 126 a Fn(Einf\177)-103 b(ugen)70
b(von)f(Knoten)g(\(Implementierung\))0 527 y Fl(Einf\177)-86
b(ugen)57 b(im)h(Blatt,)g(b)5 b(etrachte)57 b(zun)n(\177)-84
b(achst)57 b(2{Knoten)0 809 y Fg(void)74 b(addKey\(Tree)h(p,)e(Key)h
(key,)g(Value)g(val\))g({)293 967 y(if)f(\(p->type)i(==)e(TWO\))h({)585
1124 y(int)g(cmp)g(=)f(compareKey\(key,)j(p->key1\);)585
1282 y(if)e(\(cmp)g(==)f(-1\))h({)878 1440 y(//)g(move)f(the)h(old)g
(key)g(to)f(the)h(right)878 1598 y(p->key2)g(=)g(p->key1;)878
1755 y(p->val2)g(=)g(p->val1;)878 1913 y(//)g(insert)g(the)f(new)h(key)
g(as)f(first)h(key)878 2071 y(p->key1)g(=)g(key;)878
2229 y(p->val1)g(=)g(val;)585 2386 y(})g(else)g({)878
2544 y(assert\(cmp)h(==)e(1\);)878 2702 y(//)h(insert)g(the)f(new)h
(key)g(as)f(second)i(key)878 2860 y(p->key2)f(=)g(key;)878
3017 y(p->val2)g(=)g(val;)585 3175 y(})585 3333 y(p->type)h(=)e(THREE;)
585 3491 y(return;)293 3648 y(})293 3806 y(...)p 0 5536
4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(24)p eop end
%%Page: 24 25
TeXDict begin 24 24 bop 725 126 a Fn(Einf\177)-103 b(ugen)69
b(im)g(Blatt)f(\(3{Knoten\))293 506 y Fg(...)293 662
y(assert)74 b(\(p->type)g(==)g(THREE\);)293 817 y(int)f(cmp1)h(=)g
(compareKey\(key,)h(p->key1\);)293 972 y(if)e(\(cmp1)h(==)g(-1\))f({)
585 1127 y(//)h(move)g(the)f(old)h(keys)g(to)g(the)f(right)585
1282 y(p->key3)i(=)e(p->key2;)585 1438 y(p->val3)i(=)e(p->val2;)585
1593 y(p->key2)i(=)e(p->key1;)585 1748 y(p->val2)i(=)e(p->val1;)585
1903 y(//)h(insert)g(the)g(new)f(key)h(as)g(first)g(key)585
2058 y(p->key1)h(=)e(key;)585 2214 y(p->val1)i(=)e(val;)293
2369 y(})g(else)h({)585 2524 y(assert\(cmp1)h(==)f(1\);)585
2679 y(int)g(cmp2)g(=)f(compareKey\(key,)j(p->key2\);)585
2834 y(if)e(\(cmp2)g(==)f(-1\))h({)878 2990 y(//)g(move)f(the)h(second)
g(key)g(right)878 3145 y(p->key3)g(=)g(p->key2;)878 3300
y(p->val3)g(=)g(p->val2;)878 3455 y(//)g(insert)g(the)f(new)h(key)g(as)
f(second)i(key)878 3611 y(p->key2)f(=)g(key;)878 3766
y(p->val2)g(=)g(val;)585 3921 y(})g(else)g({)878 4076
y(assert\(cmp2)h(==)f(1\);)878 4231 y(//)g(insert)g(the)f(new)h(key)g
(at)f(the)h(end)878 4387 y(p->key3)g(=)g(key;)878 4542
y(p->val3)g(=)g(val;)585 4697 y(})293 4852 y(})293 5007
y(p->type)g(=)f(FOUR;)293 5163 y(return;)0 5318 y(})p
0 5539 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(25)p eop end
%%Page: 25 26
TeXDict begin 25 25 bop 1066 115 a Fn(Einf\177)-103 b(ugen:)69
b(Algo)-6 b(rithmus)0 464 y Fm(Gegeb)5 b(en)p Fl(:)99
757 y(1.)82 b Fg(t)p Fl(:)58 b(Zeiger)f(auf)h(W)-5 b(urzel{Knoten)57
b(eines)g(2{3{4)h(Baums)99 1051 y(2.)82 b Fg(key)p Fl(:)58
b(Schl\177)-86 b(ussel,)57 b(der)g(eingef\177)-86 b(ugt)57
b(w)-5 b(erden)57 b(soll)99 1344 y(3.)82 b Fg(val)p Fl(:)58
b(W)-5 b(ert,)57 b(der)h(mit)g(Schl\177)-86 b(ussel)56
b(assoziiert)j(ist)0 1637 y Fm(Gesucht)p Fl(:)e(2{3{4)h(Baum,)g(der)f
(aus)h Fg(*t)f Fl(durch)h(Einf\177)-86 b(ugen)719 1788
y(von)57 b Fk(h)p Fc(key)o Fj(;)24 b Fc(val)p Fk(i)57
b Fl(hervo)-5 b(rgeht.)0 2020 y Fm(Algo)g(rithmus)p Fl(:)99
2313 y(1.)82 b(F)-5 b(all:)59 b(Gegeb)5 b(ener)56 b(Baum)h(ist)h(leer)
315 2526 y(Erzeuge)g(neuen)e(2{Knoten)i(mit)f(Schl\177)-86
b(ussel)57 b Fg(key)99 2820 y Fl(2.)82 b(F)-5 b(all:)59
b(W)-5 b(urzel)58 b(des)f(gegeb)5 b(enen)55 b(Baums)j(ist)g(2{Knoten)
266 3064 y(\(a\))84 b(Lok)-5 b(alisiere)58 b(T)-14 b(eil{Baum,)57
b(in)h(den)f(eingef\177)-86 b(ugt)57 b(wird)262 3309
y(\(b\))83 b(F)-5 b(alls)58 b(W)-5 b(urzel)58 b(des)f(T)-14
b(eil{Baums)58 b(4{Knoten:)f(spalten)271 3554 y(\(c\))83
b(F\177)-86 b(uge)57 b(Schl\177)-86 b(ussel)57 b(passend)g(ein:)574
3768 y Fk(\017)84 b Fl(Keine)56 b(Aufspaltung:)i(in)g(W)-5
b(urzel)58 b(T)-14 b(eilbaum)574 4012 y Fk(\017)84 b
Fl(Aufspaltung:)58 b(in)f(gegeb)5 b(enem)56 b(Baum)h
Fg(*t)99 4306 y Fl(3.)82 b(F)-5 b(all:)59 b(W)-5 b(urzel)58
b(des)f(gegeb)5 b(enen)55 b(Baums)j(ist)g(3{Knoten)315
4519 y(analog)h(zum)e(2.)h(F)-5 b(all)99 4813 y(4.)82
b(F)-5 b(all:)59 b(W)-5 b(urzel)58 b(des)f(gegeb)5 b(enen)55
b(Baums)j(ist)g(4{Knoten)266 5057 y(\(a\))84 b(Spalte)57
b(Knoten)g(auf)262 5302 y(\(b\))83 b(F\177)-86 b(uge)57
b(Schl\177)-86 b(ussel)57 b(in)g(neuer)g(W)-5 b(urzel)58
b(ein)p 0 5543 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(26)p eop end
%%Page: 26 27
TeXDict begin 26 26 bop 873 115 a Fn(Einf\177)-103 b(ugen:)70
b(Implementierung)0 515 y Fg(Table)k(insert\(Tree)h(t,)f(Key)f(key,)h
(Value)g(val\))g({)293 673 y(//)f(If)h(the)f(tree)h(*t)g(is)f(empty,)i
(create)f(a)f(new)h(node.)293 831 y(if)f(\(t)h(==)f(0\))h({)585
988 y(NodePtr)h(node)f(=)f(malloc\()h(sizeof\(struct)i(Node\))e(\);)585
1146 y(node->type)h(=)f(TWO;)585 1304 y(node->key1)h(=)f(key;)585
1462 y(node->val1)h(=)f(val;)585 1619 y(node->ptr1)h(=)f(0;)585
1777 y(node->ptr2)h(=)f(0;)585 1935 y(node->ptr3)h(=)f(0;)585
2093 y(node->ptr4)h(=)f(0;)585 2250 y(return)h(node;)293
2408 y(})293 2566 y(switch)f(\(t->type\))h({)293 2724
y(//)e(find)h(the)g(appropriate)h(subtree)f(where)g(the)g(new)g(key)293
2881 y(//)f(needs)h(to)g(be)f(inserted)i(and)f(split)g(the)f(root)h
(node)293 3039 y(//)f(of)h(this)g(subtree)g(if)f(necessary)293
3197 y(case)h(TWO:)f({)585 3355 y(int)h(cmp)g(=)f(compareKey\(key,)j
(t->key1\);)585 3512 y(if)e(\(cmp)g(==)f(-1\))h({)878
3670 y(t)f(=)h(splitAndInsert\(t,)i(t->ptr1,)e(key,)g(val\);)585
3828 y(})g(else)g(if)f(\(cmp)h(==)f(0\))h({)878 3985
y(t->val1)g(=)g(val;)585 4143 y(})g(else)g({)878 4301
y(assert\(cmp)h(==)e(1\);)878 4459 y(t)g(=)h(splitAndInsert\(t,)i
(t->ptr2,)e(key,)g(val\);)585 4616 y(})585 4774 y(return)h(t;)293
4932 y(})293 5090 y(...)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(27)p eop end
%%Page: 27 28
TeXDict begin 27 27 bop 873 115 a Fn(Einf\177)-103 b(ugen:)70
b(Implementierung)0 503 y Fl(Einf\177)-86 b(ugen)57 b(in)h(3{Knoten)f
(und)h(4{Knoten)293 774 y Fg(...)293 930 y(case)74 b(THREE:)g({)585
1086 y(int)g(cmp1)g(=)f(compareKey\(key,)j(t->key1\);)585
1242 y(if)e(\(cmp1)g(==)f(-1\))h({)878 1399 y(t)f(=)h
(splitAndInsert\(t,)i(t->ptr1,)e(key,)g(val\);)585 1555
y(})g(else)g(if)f(\(cmp1)h(==)g(0\))f({)878 1711 y(t->val1)h(=)g(val;)
585 1868 y(})g(else)g({)878 2024 y(assert\(cmp1)h(==)f(1\);)878
2180 y(int)g(cmp2)g(=)f(compareKey\(key,)j(t->key2\);)878
2336 y(if)e(\(cmp2)g(==)f(-1\))h({)1171 2493 y(t)f(=)g
(splitAndInsert\(t,)k(t->ptr2,)d(key,)g(val\);)878 2649
y(})f(else)h(if)g(\(cmp2)g(==)f(0\))h({)1171 2805 y(t->val2)g(=)f(val;)
878 2961 y(})g(else)h({)1171 3118 y(assert\(cmp2)h(==)e(1\);)1171
3274 y(t)g(=)g(splitAndInsert\(t,)k(t->ptr3,)d(key,)g(val\);)878
3430 y(})585 3586 y(})585 3743 y(return)h(t;)293 3899
y(})293 4055 y(case)f(FOUR:)g({)585 4211 y(NodePtr)h(n)e(=)g
(split4Node\(t\);)585 4368 y(return)i(insert\(n,)f(key,)g(val\);)293
4524 y(})293 4680 y(})293 4836 y(//)f(avoid)h(compiler)h(warning)f
(about)g(missing)h(return)293 4993 y(assert\(0\);)293
5149 y(return)f(0;)0 5305 y(})p 0 5538 4016 24 v 0 5669
a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(28)p
eop end
%%Page: 28 29
TeXDict begin 28 28 bop 394 115 a Fn(Aufspalten)69 b(und)h(Einf\177)
-103 b(ugen:)70 b(Algo)-6 b(rithmus)0 515 y Fm(Gegeb)5
b(en)p Fl(:)99 860 y(1.)82 b Fg(p)p Fl(,)58 b Fg(t)p
Fl(:)f(Knoten)g(in)h(2{3{4)g(Baum)99 1204 y(2.)82 b Fg(p)58
b Fl(is)g(V)-5 b(ater)58 b(von)f Fg(t)99 1549 y Fl(3.)82
b Fg(key)p Fl(:)58 b(Schl\177)-86 b(ussel,)57 b(der)g(in)h
Fg(*t)g Fl(eingef\177)-86 b(ugt)56 b(w)-5 b(erden)57
b(soll)99 1893 y(4.)82 b Fg(val)p Fl(:)58 b(zugeh\177)-86
b(origer)58 b(W)-5 b(ert)0 2238 y Fm(Algo)g(rithmus)p
Fl(:)99 2582 y(1.)82 b(F)-5 b(all:)59 b Fg(*t)f Fl(ist)g(leerer)f(Baum)
315 2802 y Fk(h)p Fc(key)p Fj(;)24 b Fc(val)o Fk(i)58
b Fl(wird)g(Blatt)g Fg(*p)f Fl(eingef\177)-86 b(ugt)99
3147 y(2.)82 b(F)-5 b(all:)59 b Fg(*t)f Fl(ist)g(4{Knoten)266
3398 y(\(a\))84 b(Spalte)57 b(Knoten)g(auf)929 3627 y
Fg(NodePtr)74 b(n)g(=)f(split4Node\(t\))262 3878 y Fl(\(b\))83
b(F\177)-86 b(uge)57 b Fk(h)p Fc(key)o Fj(;)24 b Fc(val)p
Fk(i)57 b Fl(in)h Fg(n)f Fl(ein:)929 4106 y Fg(insert\(n,)75
b(key,)f(val\))271 4358 y Fl(\(c\))83 b(Schieb)5 b(e)55
b(Knoten)i Fj(n)h Fl(nach)f(ob)5 b(en)57 b(zu)h(V)-5
b(ater{Knoten)929 4586 y Fg(moveUp)p Fj(i)p Fg(\(p,)75
b(n\))229 b Fl(mit)58 b Fj(i)41 b Fk(2)f(f)p Fl(1)p Fj(;)24
b Fl(2)p Fj(;)g Fl(3)p Fk(g)99 4931 y Fl(3.)82 b(F)-5
b(all:)59 b(Sonst)e(f\177)-86 b(uge)57 b Fk(h)p Fc(key)p
Fj(;)24 b Fc(val)o Fk(i)57 b Fl(in)h Fg(t)g Fl(ein:)680
5159 y Fg(insert\(n,)75 b(key,)f(val\))p 0 5536 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(29)p eop end
%%Page: 29 30
TeXDict begin 29 29 bop 201 115 a Fn(Aufspalten)69 b(und)h(Einf\177)
-103 b(ugen:)70 b(Implementierung)0 515 y Fg(Tree)k
(splitAndInsert\(NodePtr)j(p,)c(NodePtr)i(t,)e(Key)h(key,)g(Value)g
(val\))0 673 y({)293 831 y(//)f(If)h(the)f(parent)i(is)e(a)g(leaf,)i
(the)e(key)h(is)f(inserted)i(in)293 988 y(//)e(the)h(parent.)293
1146 y(if)f(\(t)h(==)f(0\))h({)585 1304 y(addKey\(p,)h(key,)f(val\);)
585 1462 y(return)h(p;)293 1619 y(})293 1777 y(//)e(If)h(the)f(root)h
(of)g(the)f(subtree)i(where)f(key)g(is)f(to)h(be)293
1935 y(//)f(inserted)i(is)e(a)h(4-node,)g(split)g(the)g(4-node)g
(first,)293 2093 y(//)f(insert)h(the)g(key)g(into)g(the)f(resulting)i
(tree,)f(and)293 2250 y(//)f(finally)i(move)e(the)h(middle)g(key)g(of)g
(the)f(resulting)293 2408 y(//)g(tree)h(into)g(the)g(parent)g(node)g
(p.)293 2566 y(if)f(\(t->type)i(==)e(FOUR\))h({)585 2724
y(NodePtr)h(n)e(=)g(split4Node\(t\);)585 2881 y(insert\(n,)i(key,)f
(val\);)585 3039 y(if)g(\(t)f(==)h(p->ptr1\))g({)878
3197 y(moveUp1\(p,)h(n\);)585 3355 y(})f(else)g(if)f(\(t)h(==)f
(p->ptr2\))i({)878 3512 y(moveUp2\(p,)g(n\);)585 3670
y(})f(else)g({)878 3828 y(assert\(t)h(==)e(p->ptr3\);)878
3985 y(moveUp3\(p,)i(n\);)585 4143 y(})585 4301 y(return)g(p;)293
4459 y(})293 4616 y(insert\(t,)f(key,)g(val\);)293 4774
y(return)g(p;)0 4932 y(})p 0 5536 4016 24 v 0 5669 a
Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(30)p
eop end
%%Page: 30 31
TeXDict begin 30 30 bop 597 115 a Fn(Da)-6 b(rstellung)69
b(der)g(Knoten)g(als)f(Union)0 515 y Fg(typedef)74 b(enum)g({)g(TWO,)f
(THREE,)i(FOUR)f(})f(NodeType;)0 673 y(typedef)h(struct)h(Node*)f
(NodePtr;)0 988 y(typedef)g(struct)h(TwoNode*)220 b(TwoNodePtr;)0
1146 y(typedef)74 b(struct)h(ThreeNode*)f(ThreeNodePtr;)0
1304 y(typedef)g(struct)h(FourNode*)147 b(FourNodePtr;)0
1619 y(struct)74 b(TwoNode)h({)293 1777 y(Key)439 b(key;)293
1935 y(Value)293 b(val;)293 2093 y(NodePtr)147 b(left;)293
2250 y(NodePtr)g(right;)293 2408 y(unsigned)74 b(label;)148
b(//)73 b(used)h(for)g(visualization)0 2566 y(};)0 2881
y(struct)g(ThreeNode)h({)293 3039 y(Key)439 b(key1;)293
3197 y(Value)293 b(val1;)293 3355 y(Key)439 b(key2;)293
3512 y(Value)293 b(val2;)293 3670 y(NodePtr)147 b(left;)293
3828 y(NodePtr)g(middle;)293 3985 y(NodePtr)g(right;)293
4143 y(unsigned)74 b(label;)148 b(//)73 b(used)h(for)g(visualization)0
4301 y(};)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(31)p eop end
%%Page: 31 32
TeXDict begin 31 31 bop 0 126 a Fn(Da)-6 b(rstellung)61
b(der)g(Knoten)h(als)f(Union)h(\(F)-6 b(o)g(rtsetzung\))0
527 y Fg(struct)74 b(FourNode)h({)293 684 y(Key)439 b(key1;)293
842 y(Value)293 b(val1;)293 1000 y(Key)439 b(key2;)293
1158 y(Value)293 b(val2;)293 1315 y(Key)439 b(key3;)293
1473 y(Value)293 b(val3;)293 1631 y(NodePtr)147 b(left;)293
1789 y(NodePtr)g(middleLeft;)293 1946 y(NodePtr)g(middleRight;)293
2104 y(NodePtr)g(right;)293 2262 y(unsigned)74 b(label;)148
b(//)73 b(used)h(for)g(visualization)0 2420 y(};)0 2735
y(struct)g(Node)g({)293 2893 y(NodeType)g(type;)293 3051
y(union)g({)585 3208 y(TwoNodePtr)222 b(twoNodePtr;)585
3366 y(ThreeNodePtr)76 b(threeNodePtr;)585 3524 y(FourNodePtr)149
b(fourNodePtr;)293 3681 y(})73 b(node;)0 3839 y(};)0
4155 y(typedef)h(NodePtr)h(Tree;)0 4312 y(typedef)f(Tree)294
b(Table;)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(32)p eop end
%%Page: 32 33
TeXDict begin 32 32 bop 881 115 a Fn(L\177)-103 b(oschen)69
b(in)h(2{3{4)g(B)m(\177)-100 b(aumen)0 515 y Fl(Algo)-5
b(rithmus)59 b(zum)e(L\177)-86 b(oschen)57 b(von)g(gegeb)5
b(enen)55 b(Schl\177)-86 b(ussel)57 b Fj(k)0 797 y Fl(Betrachte)39
b(zun)n(\177)-84 b(achst)40 b(nur)g(den)f(F)-5 b(all,)41
b(dass)f Fj(k)k Fl(in)c(Blatt)g(vo)-5 b(rk)g(ommt)99
1142 y(1.)82 b(Suche)57 b(nach)g(Schl\177)-86 b(ussel)57
b Fj(k)k Fl(bis)d(Blatt)g(erreicht)f(ist)99 1487 y(2.)82
b(F)-5 b(all{Unterscheidung)60 b(nach)d(Art)h(des)f(Blattes:)266
1738 y(\(a\))84 b(Blatt)58 b(ist)g(4{Knoten:)565 1927
y(Entferne)e(Schl\177)-86 b(ussel,)57 b(neues)g(Blatt)h(3{Knoten)565
3043 y @beginspecial 35 @llx 35 @lly 173 @urx 161 @ury
1380 @rwi @setspecial
%%BeginDocument: ex3.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 173 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 173 161
%%PageOrientation: Portrait
gsave
35 35 138 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 49 80 moveto
80 80 lineto
stroke
newpath 80 80 moveto
85 80 92 85 92 91 curveto
stroke
newpath 92 91 moveto
92 104 lineto
stroke
newpath 92 104 moveto
92 110 86 116 80 116 curveto
stroke
newpath 80 116 moveto
49 116 lineto
stroke
newpath 49 116 moveto
44 116 38 110 38 104 curveto
stroke
newpath 38 104 moveto
38 91 lineto
stroke
newpath 38 91 moveto
38 85 43 80 49 80 curveto
stroke
gsave 10 dict begin
65 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 55 80 moveto
50 72 45 62 41 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 43 52 moveto
36 44 lineto
39 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 84 8 moveto
124 8 lineto
stroke
newpath 124 8 moveto
130 8 136 13 136 19 curveto
stroke
newpath 136 19 moveto
136 32 lineto
stroke
newpath 136 32 moveto
136 38 130 44 124 44 curveto
stroke
newpath 124 44 moveto
84 44 lineto
stroke
newpath 84 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 78 8 84 8 curveto
stroke
gsave 10 dict begin
83 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 94 8 moveto
94 44 lineto
stroke
gsave 10 dict begin
104 21 moveto 7 -0.5 (6) alignedtext
end grestore
newpath 115 8 moveto
115 44 lineto
stroke
gsave 10 dict begin
125 21 moveto 7 -0.5 (7) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 75 80 moveto
80 72 85 62 89 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 91 54 moveto
94 44 lineto
87 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 1772 2476 a(l\177)-86 b(osche)57 b(7)2402
3043 y @beginspecial 35 @llx 35 @lly 163 @urx 161 @ury
1280 @rwi @setspecial
%%BeginDocument: ex2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 262 3295 a(\(b\))83 b(Blatt)58 b(ist)g(3{Knoten:)565
3483 y(Entferne)e(Schl\177)-86 b(ussel,)57 b(neues)g(Blatt)h(2{Knoten)
565 4600 y @beginspecial 35 @llx 35 @lly 163 @urx 161
@ury 1280 @rwi @setspecial
%%BeginDocument: ex2.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
12 21 moveto 4 -0.5 (1) alignedtext
end grestore
newpath 25 8 moveto
25 44 lineto
stroke
gsave 10 dict begin
39 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 1689 4033 a(l\177)-86 b(osche)56 b(1)2319
4600 y @beginspecial 35 @llx 35 @lly 163 @urx 161 @ury
1280 @rwi @setspecial
%%BeginDocument: ex1.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 163 161
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 163 161
%%PageOrientation: Portrait
gsave
35 35 128 126 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	1
gsave 10 dict begin
newpath 47 80 moveto
78 80 lineto
stroke
newpath 78 80 moveto
83 80 90 85 90 91 curveto
stroke
newpath 90 91 moveto
90 104 lineto
stroke
newpath 90 104 moveto
90 110 84 116 78 116 curveto
stroke
newpath 78 116 moveto
47 116 lineto
stroke
newpath 47 116 moveto
42 116 36 110 36 104 curveto
stroke
newpath 36 104 moveto
36 91 lineto
stroke
newpath 36 91 moveto
36 85 41 80 47 80 curveto
stroke
gsave 10 dict begin
63 93 moveto 7 -0.5 (3) alignedtext
end grestore
end grestore

%	2
gsave 10 dict begin
newpath 11 8 moveto
42 8 lineto
stroke
newpath 42 8 moveto
47 8 54 13 54 19 curveto
stroke
newpath 54 19 moveto
54 32 lineto
stroke
newpath 54 32 moveto
54 38 48 44 42 44 curveto
stroke
newpath 42 44 moveto
11 44 lineto
stroke
newpath 11 44 moveto
6 44 0 38 0 32 curveto
stroke
newpath 0 32 moveto
0 19 lineto
stroke
newpath 0 19 moveto
0 13 5 8 11 8 curveto
stroke
gsave 10 dict begin
27 21 moveto 8 -0.5 (2) alignedtext
end grestore
end grestore

%	1 -> 2
newpath 54 80 moveto
49 72 44 62 40 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 42 52 moveto
36 44 lineto
38 54 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	3
gsave 10 dict begin
newpath 83 8 moveto
114 8 lineto
stroke
newpath 114 8 moveto
119 8 126 13 126 19 curveto
stroke
newpath 126 19 moveto
126 32 lineto
stroke
newpath 126 32 moveto
126 38 120 44 114 44 curveto
stroke
newpath 114 44 moveto
83 44 lineto
stroke
newpath 83 44 moveto
78 44 72 38 72 32 curveto
stroke
newpath 72 32 moveto
72 19 lineto
stroke
newpath 72 19 moveto
72 13 77 8 83 8 curveto
stroke
gsave 10 dict begin
85 21 moveto 8 -0.5 (4) alignedtext
end grestore
newpath 99 8 moveto
99 44 lineto
stroke
gsave 10 dict begin
112 21 moveto 7 -0.5 (6) alignedtext
end grestore
end grestore

%	1 -> 3
newpath 72 80 moveto
77 72 82 62 86 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 88 54 moveto
90 44 lineto
84 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 99 4945 a(3.)82 b(Blatt)59 b(ist)e(2{Knoten:)h(P)-5
b(ech)56 b(gehabt!)p 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(33)p eop end
%%Page: 33 34
TeXDict begin 33 33 bop 266 115 a Fn(Behandlung)71 b(von)e(2{Knoten)g
(b)6 b(eim)69 b(L\177)-103 b(oschen)99 577 y Fl(1.)82
b(Beim)57 b(Einf\177)-86 b(ugen)58 b(w)-5 b(a)g(ren)58
b(4{Knoten)f(das)h(Problem)99 922 y(2.)82 b(L\177)-86
b(osung)58 b(b)5 b(eim)57 b(Einf\177)-86 b(ugen:)266
1173 y(\(a\))84 b(Alle)67 b(4{Knoten)g(auf)g(dem)f(Suchpfad)h(w)-5
b(erden)67 b(aufge-)565 1331 y(spalten.)262 1582 y(\(b\))83
b(Der)38 b(dab)5 b(ei)38 b(entstehende)f(neue)h(Knoten)g(wird)h(im)f
(Baum)565 1740 y(nach)61 b(ob)5 b(en)61 b(geschob)5 b(en)60
b(und)i(mit)f(seinem)g(V)-5 b(ater)62 b(ver-)565 1897
y(schmolzen.)99 2242 y(3.)82 b(L\177)-86 b(osen)57 b(b)5
b(eim)57 b(L\177)-86 b(oschen)56 b(analog:)266 2493 y(\(a\))84
b(Alle)57 b(2{Knoten)g(auf)h(dem)e(Suchpfad)h(w)-5 b(erden)57
b(in)565 2651 y(3{Knoten)g(o)5 b(der)57 b(4{Knoten)g(transfo)-5
b(rmiert.)262 2902 y(\(b\))83 b(W)-5 b(enn)57 b(dann)h(Blatt)g
(erreicht)f(wird,)h(k)-5 b(ann)58 b(dies)f(k)-5 b(ein)565
3060 y(2{Knoten)57 b(sein.)0 3404 y(Um)74 b(2{Knoten)g(in)h(3{Knoten)f
(o)5 b(der)74 b(4{Knoten)g(zu)g(transfo)-5 b(r-)0 3562
y(mieren,)57 b(gibt)h(es)f(p)-5 b(rinzipiell)59 b(zw)-5
b(ei)57 b(M\177)-86 b(oglichk)-5 b(eiten:)99 3907 y(1.)82
b(Stehlen)62 b(eines)g(Schl\177)-86 b(ussels)63 b(von)f(unmittelba)-5
b(r)64 b(b)5 b(enachba)-5 b(r-)315 4064 y(tem)57 b(Schw)-5
b(ester{Knoten)99 4409 y(2.)82 b(F)-5 b(usionieren)40
b(mit)e(unmittelba)-5 b(r)40 b(b)5 b(enachba)-5 b(rtem)38
b(Schw)-5 b(ester{)315 4567 y(Knoten)p 0 5536 4016 24
v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46
b(34)p eop end
%%Page: 34 35
TeXDict begin 34 34 bop 1003 115 a Fn(Stehlen)68 b(eines)h(Schl\177)
-103 b(ussels)0 515 y Fl(Knoten)57 b(mit)h(Sch\177)-86
b(ussel)56 b Fj(k)62 b Fl(in)57 b(3{Knoten)h(transfo)-5
b(rmieren:)364 2673 y @beginspecial 35 @llx 35 @lly 379
@urx 277 @ury 3440 @rwi @setspecial
%%BeginDocument: stehlen-2-node-1-von-2-vorher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 277
%%PageOrientation: Portrait
gsave
35 35 344 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 196 196 moveto
231 196 lineto
stroke
newpath 231 196 moveto
237 196 243 201 243 207 curveto
stroke
newpath 243 207 moveto
243 220 lineto
stroke
newpath 243 220 moveto
243 226 237 232 231 232 curveto
stroke
newpath 231 232 moveto
196 232 lineto
stroke
newpath 196 232 moveto
190 232 185 226 185 220 curveto
stroke
newpath 185 220 moveto
185 207 lineto
stroke
newpath 185 207 moveto
185 201 190 196 196 196 curveto
stroke
gsave 10 dict begin
198 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 212 196 moveto
212 232 lineto
stroke
gsave 10 dict begin
227 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 83 113 moveto
114 113 lineto
stroke
newpath 114 113 moveto
119 113 126 118 126 124 curveto
stroke
newpath 126 124 moveto
126 137 lineto
stroke
newpath 126 137 moveto
126 143 120 149 114 149 curveto
stroke
newpath 114 149 moveto
83 149 lineto
stroke
newpath 83 149 moveto
78 149 72 143 72 137 curveto
stroke
newpath 72 137 moveto
72 124 lineto
stroke
newpath 72 124 moveto
72 118 77 113 83 113 curveto
stroke
gsave 10 dict begin
99 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 185 196 moveto
162 175 150 179 126 160 curveto
125 159 123 158 122 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 124 154 moveto
115 149 lineto
120 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	br
gsave 10 dict begin
newpath 198 113 moveto
229 113 lineto
stroke
newpath 229 113 moveto
234 113 241 118 241 124 curveto
stroke
newpath 241 124 moveto
241 137 lineto
stroke
newpath 241 137 moveto
241 143 235 149 229 149 curveto
stroke
newpath 229 149 moveto
198 149 lineto
stroke
newpath 198 149 moveto
193 149 187 143 187 137 curveto
stroke
newpath 187 137 moveto
187 124 lineto
stroke
newpath 187 124 moveto
187 118 192 113 198 113 curveto
stroke
gsave 10 dict begin
199 126 moveto 9 -0.5 (l1) alignedtext
end grestore
newpath 212 113 moveto
212 149 lineto
stroke
gsave 10 dict begin
226 126 moveto 12 -0.5 (l2) alignedtext
end grestore
end grestore

%	p -> br
newpath 214 196 moveto
214 185 214 171 214 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 217 159 moveto
214 149 lineto
212 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 286 159 moveto
259 117 lineto
313 117 lineto
closepath
stroke
gsave 10 dict begin
286 126 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	p -> r
newpath 240 196 moveto
249 183 262 166 271 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 273 154 moveto
276 144 lineto
269 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 85 113 moveto
73 97 54 73 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 99 113 moveto
99 103 99 89 99 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 76 moveto
99 66 lineto
97 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	br -> c
newpath 194 113 moveto
190 100 184 81 180 66 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 183 66 moveto
177 57 lineto
178 67 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	br -> d
newpath 220 113 moveto
224 100 230 81 234 66 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 236 67 moveto
237 57 lineto
231 66 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	br -> e
newpath 234 113 moveto
236 109 238 105 241 102 curveto
249 91 276 67 296 52 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 297 54 moveto
303 46 lineto
294 51 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2955 a(Stehlen)57 b(von)g Fj(l)r Fl(1)g(aus)g(Nachba)-5
b(r{Knoten)58 b(\(Rotation\))364 5142 y @beginspecial
35 @llx 35 @lly 379 @urx 277 @ury 3440 @rwi @setspecial
%%BeginDocument: stehlen-2-node-1-von-2-nachher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 277
%%PageOrientation: Portrait
gsave
35 35 344 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 227 196 moveto
258 196 lineto
stroke
newpath 258 196 moveto
263 196 270 201 270 207 curveto
stroke
newpath 270 207 moveto
270 220 lineto
stroke
newpath 270 220 moveto
270 226 264 232 258 232 curveto
stroke
newpath 258 232 moveto
227 232 lineto
stroke
newpath 227 232 moveto
222 232 216 226 216 220 curveto
stroke
newpath 216 220 moveto
216 207 lineto
stroke
newpath 216 207 moveto
216 201 221 196 227 196 curveto
stroke
gsave 10 dict begin
227 209 moveto 9 -0.5 (l1) alignedtext
end grestore
newpath 239 196 moveto
239 232 lineto
stroke
gsave 10 dict begin
254 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 113 113 moveto
144 113 lineto
stroke
newpath 144 113 moveto
149 113 156 118 156 124 curveto
stroke
newpath 156 124 moveto
156 137 lineto
stroke
newpath 156 137 moveto
156 143 150 149 144 149 curveto
stroke
newpath 144 149 moveto
113 149 lineto
stroke
newpath 113 149 moveto
108 149 102 143 102 137 curveto
stroke
newpath 102 137 moveto
102 124 lineto
stroke
newpath 102 124 moveto
102 118 107 113 113 113 curveto
stroke
gsave 10 dict begin
114 126 moveto 9 -0.5 (k) alignedtext
end grestore
newpath 127 113 moveto
127 149 lineto
stroke
gsave 10 dict begin
141 126 moveto 13 -0.5 (p1) alignedtext
end grestore
end grestore

%	p -> k
newpath 216 196 moveto
193 174 181 179 156 160 curveto
155 159 153 158 152 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 154 154 moveto
145 149 lineto
150 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	br
gsave 10 dict begin
newpath 227 113 moveto
258 113 lineto
stroke
newpath 258 113 moveto
263 113 270 118 270 124 curveto
stroke
newpath 270 124 moveto
270 137 lineto
stroke
newpath 270 137 moveto
270 143 264 149 258 149 curveto
stroke
newpath 258 149 moveto
227 149 lineto
stroke
newpath 227 149 moveto
222 149 216 143 216 137 curveto
stroke
newpath 216 137 moveto
216 124 lineto
stroke
newpath 216 124 moveto
216 118 221 113 227 113 curveto
stroke
gsave 10 dict begin
243 126 moveto 12 -0.5 (l2) alignedtext
end grestore
end grestore

%	p -> br
newpath 243 196 moveto
243 185 243 171 243 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 246 159 moveto
243 149 lineto
241 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 315 159 moveto
288 117 lineto
342 117 lineto
closepath
stroke
gsave 10 dict begin
315 126 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	p -> r
newpath 267 196 moveto
277 183 290 165 300 151 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 301 154 moveto
305 144 lineto
297 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 109 113 moveto
107 109 105 105 102 102 curveto
98 96 68 70 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 47 lineto
46 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 129 113 moveto
129 109 128 105 127 102 curveto
124 87 117 72 112 60 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 115 60 moveto
108 52 lineto
110 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	k -> c
newpath 147 113 moveto
151 100 157 81 162 65 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 164 66 moveto
165 56 lineto
159 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	br -> d
newpath 243 113 moveto
243 103 243 89 243 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 246 76 moveto
243 66 lineto
241 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	br -> e
newpath 257 113 moveto
269 97 288 73 300 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 301 60 moveto
305 50 lineto
297 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(35)p eop end
%%Page: 35 36
TeXDict begin 35 35 bop 519 126 a Fn(Stehlen)68 b(eines)h(Schl\177)-103
b(ussels)69 b(\(von)h(links\))0 527 y Fl(Knoten)57 b(mit)h(Sch\177)-86
b(ussel)56 b Fj(k)62 b Fl(in)57 b(3{Knoten)h(transfo)-5
b(rmieren:)364 2684 y @beginspecial 35 @llx 35 @lly 379
@urx 277 @ury 3440 @rwi @setspecial
%%BeginDocument: stehlen-2-node-2-von-1-vorher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 277
%%PageOrientation: Portrait
gsave
35 35 344 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 225 196 moveto
260 196 lineto
stroke
newpath 260 196 moveto
266 196 272 201 272 207 curveto
stroke
newpath 272 207 moveto
272 220 lineto
stroke
newpath 272 220 moveto
272 226 266 232 260 232 curveto
stroke
newpath 260 232 moveto
225 232 lineto
stroke
newpath 225 232 moveto
219 232 214 226 214 220 curveto
stroke
newpath 214 220 moveto
214 207 lineto
stroke
newpath 214 207 moveto
214 201 219 196 225 196 curveto
stroke
gsave 10 dict begin
227 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 241 196 moveto
241 232 lineto
stroke
gsave 10 dict begin
256 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	br
gsave 10 dict begin
newpath 113 113 moveto
144 113 lineto
stroke
newpath 144 113 moveto
149 113 156 118 156 124 curveto
stroke
newpath 156 124 moveto
156 137 lineto
stroke
newpath 156 137 moveto
156 143 150 149 144 149 curveto
stroke
newpath 144 149 moveto
113 149 lineto
stroke
newpath 113 149 moveto
108 149 102 143 102 137 curveto
stroke
newpath 102 137 moveto
102 124 lineto
stroke
newpath 102 124 moveto
102 118 107 113 113 113 curveto
stroke
gsave 10 dict begin
114 126 moveto 9 -0.5 (l1) alignedtext
end grestore
newpath 127 113 moveto
127 149 lineto
stroke
gsave 10 dict begin
141 126 moveto 12 -0.5 (l2) alignedtext
end grestore
end grestore

%	p -> br
newpath 214 196 moveto
191 175 180 179 156 160 curveto
155 159 153 158 152 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 154 154 moveto
145 149 lineto
150 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k
gsave 10 dict begin
newpath 227 113 moveto
258 113 lineto
stroke
newpath 258 113 moveto
263 113 270 118 270 124 curveto
stroke
newpath 270 124 moveto
270 137 lineto
stroke
newpath 270 137 moveto
270 143 264 149 258 149 curveto
stroke
newpath 258 149 moveto
227 149 lineto
stroke
newpath 227 149 moveto
222 149 216 143 216 137 curveto
stroke
newpath 216 137 moveto
216 124 lineto
stroke
newpath 216 124 moveto
216 118 221 113 227 113 curveto
stroke
gsave 10 dict begin
243 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 243 196 moveto
243 185 243 171 243 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 246 159 moveto
243 149 lineto
241 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 315 159 moveto
288 117 lineto
342 117 lineto
closepath
stroke
gsave 10 dict begin
315 126 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	p -> r
newpath 269 196 moveto
278 183 291 166 300 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 302 154 moveto
305 144 lineto
298 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	br -> a
newpath 109 113 moveto
107 109 105 105 102 102 curveto
98 96 68 70 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 47 lineto
46 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	br -> b
newpath 129 113 moveto
129 109 128 105 127 102 curveto
124 87 117 72 112 60 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 115 60 moveto
108 52 lineto
110 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	br -> c
newpath 147 113 moveto
151 100 157 81 162 65 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 164 66 moveto
165 56 lineto
159 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	k -> d
newpath 243 113 moveto
243 103 243 89 243 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 246 76 moveto
243 66 lineto
241 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	k -> e
newpath 257 113 moveto
269 97 288 73 300 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 301 60 moveto
305 50 lineto
297 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2967 a(Stehlen)57 b(von)g Fj(l)r Fl(1)g(aus)g(Nachba)-5
b(r{Knoten)58 b(\(Rotation\))364 5153 y @beginspecial
35 @llx 35 @lly 379 @urx 277 @ury 3440 @rwi @setspecial
%%BeginDocument: stehlen-2-node-2-von-1-nachher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 277
%%PageOrientation: Portrait
gsave
35 35 344 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 196 196 moveto
230 196 lineto
stroke
newpath 230 196 moveto
236 196 242 201 242 207 curveto
stroke
newpath 242 207 moveto
242 220 lineto
stroke
newpath 242 220 moveto
242 226 236 232 230 232 curveto
stroke
newpath 230 232 moveto
196 232 lineto
stroke
newpath 196 232 moveto
190 232 185 226 185 220 curveto
stroke
newpath 185 220 moveto
185 207 lineto
stroke
newpath 185 207 moveto
185 201 190 196 196 196 curveto
stroke
gsave 10 dict begin
198 209 moveto 12 -0.5 (l2) alignedtext
end grestore
newpath 211 196 moveto
211 232 lineto
stroke
gsave 10 dict begin
226 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	br
gsave 10 dict begin
newpath 83 113 moveto
114 113 lineto
stroke
newpath 114 113 moveto
119 113 126 118 126 124 curveto
stroke
newpath 126 124 moveto
126 137 lineto
stroke
newpath 126 137 moveto
126 143 120 149 114 149 curveto
stroke
newpath 114 149 moveto
83 149 lineto
stroke
newpath 83 149 moveto
78 149 72 143 72 137 curveto
stroke
newpath 72 137 moveto
72 124 lineto
stroke
newpath 72 124 moveto
72 118 77 113 83 113 curveto
stroke
gsave 10 dict begin
99 126 moveto 9 -0.5 (l1) alignedtext
end grestore
end grestore

%	p -> br
newpath 185 196 moveto
162 175 150 179 126 160 curveto
125 159 123 158 122 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 124 154 moveto
115 149 lineto
120 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	k
gsave 10 dict begin
newpath 197 113 moveto
228 113 lineto
stroke
newpath 228 113 moveto
233 113 240 118 240 124 curveto
stroke
newpath 240 124 moveto
240 137 lineto
stroke
newpath 240 137 moveto
240 143 234 149 228 149 curveto
stroke
newpath 228 149 moveto
197 149 lineto
stroke
newpath 197 149 moveto
192 149 186 143 186 137 curveto
stroke
newpath 186 137 moveto
186 124 lineto
stroke
newpath 186 124 moveto
186 118 191 113 197 113 curveto
stroke
gsave 10 dict begin
200 126 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 215 113 moveto
215 149 lineto
stroke
gsave 10 dict begin
227 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 213 196 moveto
213 185 213 171 213 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 216 159 moveto
213 149 lineto
211 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	r
gsave 10 dict begin
newpath 285 159 moveto
258 117 lineto
312 117 lineto
closepath
stroke
gsave 10 dict begin
285 126 moveto 6 -0.5 (r) alignedtext
end grestore
end grestore

%	p -> r
newpath 239 196 moveto
248 183 261 166 270 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 272 154 moveto
275 144 lineto
268 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	br -> a
newpath 85 113 moveto
73 97 54 73 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	br -> b
newpath 99 113 moveto
99 103 99 89 99 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 76 moveto
99 66 lineto
97 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	k -> c
newpath 195 113 moveto
191 100 185 81 180 65 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 183 65 moveto
177 56 lineto
178 66 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	k -> d
newpath 213 113 moveto
213 109 214 105 215 102 curveto
218 87 225 72 230 60 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 232 62 moveto
234 52 lineto
227 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	k -> e
newpath 233 113 moveto
235 109 237 105 240 102 curveto
244 96 274 70 295 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 297 55 moveto
303 47 lineto
293 51 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(36)p eop end
%%Page: 36 37
TeXDict begin 36 36 bop 294 126 a Fn(Stehlen)68 b(eines)h(Schl\177)-103
b(ussels)69 b(\(von)h(4{Knoten\))0 527 y Fl(Knoten)57
b(mit)h(Sch\177)-86 b(ussel)56 b Fj(k)62 b Fl(in)57 b(3{Knoten)h
(transfo)-5 b(rmieren:)364 2684 y @beginspecial 35 @llx
35 @lly 451 @urx 277 @ury 4160 @rwi @setspecial
%%BeginDocument: stehlen-2-node-1-von-2-4-node-vorher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 451 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 451 277
%%PageOrientation: Portrait
gsave
35 35 416 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 226 196 moveto
261 196 lineto
stroke
newpath 261 196 moveto
267 196 273 201 273 207 curveto
stroke
newpath 273 207 moveto
273 220 lineto
stroke
newpath 273 220 moveto
273 226 267 232 261 232 curveto
stroke
newpath 261 232 moveto
226 232 lineto
stroke
newpath 226 232 moveto
220 232 215 226 215 220 curveto
stroke
newpath 215 220 moveto
215 207 lineto
stroke
newpath 215 207 moveto
215 201 220 196 226 196 curveto
stroke
gsave 10 dict begin
228 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 242 196 moveto
242 232 lineto
stroke
gsave 10 dict begin
257 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 83 113 moveto
114 113 lineto
stroke
newpath 114 113 moveto
119 113 126 118 126 124 curveto
stroke
newpath 126 124 moveto
126 137 lineto
stroke
newpath 126 137 moveto
126 143 120 149 114 149 curveto
stroke
newpath 114 149 moveto
83 149 lineto
stroke
newpath 83 149 moveto
78 149 72 143 72 137 curveto
stroke
newpath 72 137 moveto
72 124 lineto
stroke
newpath 72 124 moveto
72 118 77 113 83 113 curveto
stroke
gsave 10 dict begin
99 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 215 196 moveto
180 170 162 184 126 160 curveto
124 159 122 157 121 155 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 123 154 moveto
114 149 lineto
120 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	br
gsave 10 dict begin
newpath 219 113 moveto
268 113 lineto
stroke
newpath 268 113 moveto
274 113 281 118 281 124 curveto
stroke
newpath 281 124 moveto
281 137 lineto
stroke
newpath 281 137 moveto
281 143 274 149 268 149 curveto
stroke
newpath 268 149 moveto
219 149 lineto
stroke
newpath 219 149 moveto
213 149 207 143 207 137 curveto
stroke
newpath 207 137 moveto
207 124 lineto
stroke
newpath 207 124 moveto
207 118 213 113 219 113 curveto
stroke
gsave 10 dict begin
218 126 moveto 9 -0.5 (l1) alignedtext
end grestore
newpath 230 113 moveto
230 149 lineto
stroke
gsave 10 dict begin
243 126 moveto 12 -0.5 (l2) alignedtext
end grestore
newpath 256 113 moveto
256 149 lineto
stroke
gsave 10 dict begin
268 126 moveto 11 -0.5 (l3) alignedtext
end grestore
end grestore

%	p -> br
newpath 244 196 moveto
244 185 244 171 244 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 247 159 moveto
244 149 lineto
242 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	g
gsave 10 dict begin
newpath 326 159 moveto
299 117 lineto
353 117 lineto
closepath
stroke
gsave 10 dict begin
326 126 moveto 8 -0.5 (g) alignedtext
end grestore
end grestore

%	p -> g
newpath 272 196 moveto
283 182 299 164 310 150 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 311 152 moveto
316 143 lineto
308 149 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 85 113 moveto
73 97 54 73 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 99 113 moveto
99 103 99 89 99 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 76 moveto
99 66 lineto
97 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	br -> c
newpath 212 113 moveto
210 109 209 105 207 102 curveto
200 87 191 72 184 59 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 187 59 moveto
180 52 lineto
183 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	br -> d
newpath 243 113 moveto
243 103 243 89 243 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 246 76 moveto
243 66 lineto
241 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	br -> e
newpath 250 113 moveto
252 109 254 105 256 102 curveto
268 84 285 66 297 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 298 57 moveto
303 48 lineto
294 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	f
gsave 10 dict begin
newpath 387 65 moveto
360 23 lineto
414 23 lineto
closepath
stroke
gsave 10 dict begin
387 32 moveto 7 -0.5 (f) alignedtext
end grestore
end grestore

%	br -> f
newpath 274 113 moveto
276 109 278 105 281 102 curveto
305 76 321 85 351 66 curveto
356 62 362 57 368 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 369 55 moveto
375 47 lineto
366 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2967 a(Stehlen)57 b(von)g Fj(l)r Fl(1)g(aus)g(Nachba)-5
b(r{Knoten)58 b(\(Rotation\))364 5153 y @beginspecial
35 @llx 35 @lly 451 @urx 277 @ury 4160 @rwi @setspecial
%%BeginDocument: stehlen-2-node-1-von-2-4-node-nachher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 451 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 451 277
%%PageOrientation: Portrait
gsave
35 35 416 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 269 196 moveto
300 196 lineto
stroke
newpath 300 196 moveto
305 196 312 201 312 207 curveto
stroke
newpath 312 207 moveto
312 220 lineto
stroke
newpath 312 220 moveto
312 226 306 232 300 232 curveto
stroke
newpath 300 232 moveto
269 232 lineto
stroke
newpath 269 232 moveto
264 232 258 226 258 220 curveto
stroke
newpath 258 220 moveto
258 207 lineto
stroke
newpath 258 207 moveto
258 201 263 196 269 196 curveto
stroke
gsave 10 dict begin
269 209 moveto 9 -0.5 (l1) alignedtext
end grestore
newpath 281 196 moveto
281 232 lineto
stroke
gsave 10 dict begin
296 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 113 113 moveto
144 113 lineto
stroke
newpath 144 113 moveto
149 113 156 118 156 124 curveto
stroke
newpath 156 124 moveto
156 137 lineto
stroke
newpath 156 137 moveto
156 143 150 149 144 149 curveto
stroke
newpath 144 149 moveto
113 149 lineto
stroke
newpath 113 149 moveto
108 149 102 143 102 137 curveto
stroke
newpath 102 137 moveto
102 124 lineto
stroke
newpath 102 124 moveto
102 118 107 113 113 113 curveto
stroke
gsave 10 dict begin
114 126 moveto 9 -0.5 (k) alignedtext
end grestore
newpath 127 113 moveto
127 149 lineto
stroke
gsave 10 dict begin
141 126 moveto 13 -0.5 (p1) alignedtext
end grestore
end grestore

%	p -> k
newpath 258 196 moveto
221 166 197 186 156 160 curveto
154 159 152 157 151 155 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 153 154 moveto
144 149 lineto
150 157 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	br
gsave 10 dict begin
newpath 269 113 moveto
300 113 lineto
stroke
newpath 300 113 moveto
305 113 312 118 312 124 curveto
stroke
newpath 312 124 moveto
312 137 lineto
stroke
newpath 312 137 moveto
312 143 306 149 300 149 curveto
stroke
newpath 300 149 moveto
269 149 lineto
stroke
newpath 269 149 moveto
264 149 258 143 258 137 curveto
stroke
newpath 258 137 moveto
258 124 lineto
stroke
newpath 258 124 moveto
258 118 263 113 269 113 curveto
stroke
gsave 10 dict begin
271 126 moveto 12 -0.5 (l2) alignedtext
end grestore
newpath 285 113 moveto
285 149 lineto
stroke
gsave 10 dict begin
298 126 moveto 11 -0.5 (l3) alignedtext
end grestore
end grestore

%	p -> br
newpath 285 196 moveto
285 185 285 171 285 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 288 159 moveto
285 149 lineto
283 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	g
gsave 10 dict begin
newpath 357 159 moveto
330 117 lineto
384 117 lineto
closepath
stroke
gsave 10 dict begin
357 126 moveto 8 -0.5 (g) alignedtext
end grestore
end grestore

%	p -> g
newpath 309 196 moveto
319 183 332 165 342 151 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 343 154 moveto
347 144 lineto
339 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 109 113 moveto
107 109 105 105 102 102 curveto
98 96 68 70 47 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 51 moveto
39 47 lineto
46 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 129 113 moveto
129 109 128 105 127 102 curveto
124 87 117 72 112 60 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 115 60 moveto
108 52 lineto
110 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	k -> c
newpath 147 113 moveto
151 100 157 81 162 65 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 164 66 moveto
165 56 lineto
159 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	br -> d
newpath 266 113 moveto
262 100 256 81 252 66 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 255 66 moveto
249 57 lineto
250 67 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 315 65 moveto
288 23 lineto
342 23 lineto
closepath
stroke
gsave 10 dict begin
315 32 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	br -> e
newpath 284 113 moveto
284 109 284 105 285 102 curveto
288 86 295 71 302 59 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 304 61 moveto
306 51 lineto
299 59 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	f
gsave 10 dict begin
newpath 387 65 moveto
360 23 lineto
414 23 lineto
closepath
stroke
gsave 10 dict begin
387 32 moveto 7 -0.5 (f) alignedtext
end grestore
end grestore

%	br -> f
newpath 305 113 moveto
307 109 309 105 312 102 curveto
316 96 346 70 367 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 369 55 moveto
375 47 lineto
365 51 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(37)p eop end
%%Page: 37 38
TeXDict begin 37 37 bop 1003 115 a Fn(Stehlen)68 b(eines)h(Schl\177)
-103 b(ussels)0 513 y Fl(Beim)52 b(Stehlen)f(eines)h(Schl\177)-86
b(ussels)51 b(sind)i(eine)e(Reihe)h(von)g(F)-5 b(allun-)0
671 y(terscheidungen)57 b(durchzuf\177)-86 b(uhren)99
1013 y(1.)82 b(Der)58 b(V)-5 b(ater{Knoten)58 b(ist)g(ein)f(3{Knoten)
266 1264 y(\(a\))84 b(Der)57 b(unmittelba)-5 b(re)59
b(Bruder)e(ist)h(erstes)f(Kind)262 1515 y(\(b\))83 b(Der)57
b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h(zw)-5 b(eites)57
b(Kind)271 1766 y(\(c\))83 b(Der)57 b(unmittelba)-5 b(re)59
b(Bruder)e(ist)h(drittes)g(Kind)565 2072 y(Jeder)c(dieser)h(F)n(\177)
-84 b(alle)56 b(spaltet)f(sich)g(in)g(2)g(Unterf)n(\177)-84
b(alle)56 b(auf:)574 2292 y Fk(\017)84 b Fl(Der)57 b(unmittelba)-5
b(re)59 b(Bruder)e(ist)h(3{Knoten)574 2543 y Fk(\017)84
b Fl(Der)57 b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h(4{Knoten)99
2885 y(2.)82 b(Der)58 b(V)-5 b(ater{Knoten)58 b(ist)g(ein)f(4{Knoten)
266 3136 y(\(a\))84 b(Der)57 b(unmittelba)-5 b(re)59
b(Bruder)e(ist)h(erstes)f(Kind)262 3387 y(\(b\))83 b(Der)57
b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h(zw)-5 b(eites)57
b(Kind)271 3638 y(\(c\))83 b(Der)57 b(unmittelba)-5 b(re)59
b(Bruder)e(ist)h(drittes)g(Kind)262 3889 y(\(d\))83 b(Der)57
b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h(viertes)f(Kind)565
4196 y(Auch)44 b(hier)h(hab)5 b(en)45 b(wir)h(die)e(selb)5
b(e)45 b(zus)n(\177)-84 b(atzliche)45 b(Aufspal-)565
4353 y(tung)57 b(wie)g(ob)5 b(en)0 4695 y(Zus)n(\177)-84
b(atzlich)43 b(mu\031)f(no)5 b(ch)41 b(unterschieden)g(w)-5
b(erden,)41 b(ob)h(der)f(Bruder)0 4853 y(rechts)51 b(o)5
b(der)52 b(links)h(von)e(dem)g(Knoten)g(liegt,)h(der)g(den)f(Schl\177)
-86 b(ussel)0 5010 y(stehlen)57 b(will.)p 1250 5153 1516
5 v 1250 5351 5 198 v 1297 5291 a(Insgesamt:)g(20)h(F)n(\177)-84
b(alle!)p 2761 5351 V 1250 5356 1516 5 v 0 5537 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(38)p eop end
%%Page: 38 39
TeXDict begin 38 38 bop 1531 115 a Fn(F)-6 b(usionieren)0
495 y Fl(Knoten)57 b(mit)h(Sch\177)-86 b(ussel)56 b Fj(k)62
b Fl(in)57 b(3{Knoten)h(transfo)-5 b(rmieren:)0 757 y(Stehlen)38
b(nicht)g(m\177)-86 b(oglich,)38 b(w)-5 b(eil)38 b(unmittelba)-5
b(rer)40 b(Bruder)f(2{Knoten)364 2916 y @beginspecial
35 @llx 35 @lly 307 @urx 277 @ury 2720 @rwi @setspecial
%%BeginDocument: fusing-2-node-1-und-2-vorher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 277
%%PageOrientation: Portrait
gsave
35 35 272 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 153 196 moveto
188 196 lineto
stroke
newpath 188 196 moveto
194 196 200 201 200 207 curveto
stroke
newpath 200 207 moveto
200 220 lineto
stroke
newpath 200 220 moveto
200 226 194 232 188 232 curveto
stroke
newpath 188 232 moveto
153 232 lineto
stroke
newpath 153 232 moveto
147 232 142 226 142 220 curveto
stroke
newpath 142 220 moveto
142 207 lineto
stroke
newpath 142 207 moveto
142 201 147 196 153 196 curveto
stroke
gsave 10 dict begin
155 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 169 196 moveto
169 232 lineto
stroke
gsave 10 dict begin
184 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 83 113 moveto
114 113 lineto
stroke
newpath 114 113 moveto
119 113 126 118 126 124 curveto
stroke
newpath 126 124 moveto
126 137 lineto
stroke
newpath 126 137 moveto
126 143 120 149 114 149 curveto
stroke
newpath 114 149 moveto
83 149 lineto
stroke
newpath 83 149 moveto
78 149 72 143 72 137 curveto
stroke
newpath 72 137 moveto
72 124 lineto
stroke
newpath 72 124 moveto
72 118 77 113 83 113 curveto
stroke
gsave 10 dict begin
99 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 144 196 moveto
136 184 125 169 116 157 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 118 156 moveto
111 149 lineto
114 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 155 113 moveto
186 113 lineto
stroke
newpath 186 113 moveto
191 113 198 118 198 124 curveto
stroke
newpath 198 124 moveto
198 137 lineto
stroke
newpath 198 137 moveto
198 143 192 149 186 149 curveto
stroke
newpath 186 149 moveto
155 149 lineto
stroke
newpath 155 149 moveto
150 149 144 143 144 137 curveto
stroke
newpath 144 137 moveto
144 124 lineto
stroke
newpath 144 124 moveto
144 118 149 113 155 113 curveto
stroke
gsave 10 dict begin
171 126 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	p -> l
newpath 171 196 moveto
171 185 171 171 171 159 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 159 moveto
171 149 lineto
169 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 243 159 moveto
216 117 lineto
270 117 lineto
closepath
stroke
gsave 10 dict begin
243 126 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	p -> e
newpath 197 196 moveto
206 183 219 166 228 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 230 154 moveto
233 144 lineto
226 151 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 85 113 moveto
73 97 54 73 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 99 113 moveto
99 103 99 89 99 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 76 moveto
99 66 lineto
97 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	l -> c
newpath 171 113 moveto
171 103 171 89 171 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 76 moveto
171 66 lineto
169 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	l -> d
newpath 185 113 moveto
197 97 216 73 228 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 229 60 moveto
233 50 lineto
225 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 3178 a(Knoten)57 b Fj(k)k Fl(mit)d(Bruder)g
(verschmelzen)364 5318 y @beginspecial 35 @llx 35 @lly
307 @urx 277 @ury 2720 @rwi @setspecial
%%BeginDocument: fusing-2-node-1-und-2-nachher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 307 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 307 277
%%PageOrientation: Portrait
gsave
35 35 272 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p2
gsave 10 dict begin
newpath 156 196 moveto
187 196 lineto
stroke
newpath 187 196 moveto
192 196 199 201 199 207 curveto
stroke
newpath 199 207 moveto
199 220 lineto
stroke
newpath 199 220 moveto
199 226 193 232 187 232 curveto
stroke
newpath 187 232 moveto
156 232 lineto
stroke
newpath 156 232 moveto
151 232 145 226 145 220 curveto
stroke
newpath 145 220 moveto
145 207 lineto
stroke
newpath 145 207 moveto
145 201 150 196 156 196 curveto
stroke
gsave 10 dict begin
172 209 moveto 17 -0.5 (p2) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 111 113 moveto
154 113 lineto
stroke
newpath 154 113 moveto
160 113 167 118 167 124 curveto
stroke
newpath 167 124 moveto
167 137 lineto
stroke
newpath 167 137 moveto
167 143 160 149 154 149 curveto
stroke
newpath 154 149 moveto
111 149 lineto
stroke
newpath 111 149 moveto
105 149 99 143 99 137 curveto
stroke
newpath 99 137 moveto
99 124 lineto
stroke
newpath 99 124 moveto
99 118 105 113 111 113 curveto
stroke
gsave 10 dict begin
110 126 moveto 9 -0.5 (k) alignedtext
end grestore
newpath 122 113 moveto
122 149 lineto
stroke
gsave 10 dict begin
135 126 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 149 113 moveto
149 149 lineto
stroke
gsave 10 dict begin
158 126 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	p2 -> k
newpath 164 196 moveto
158 185 151 170 145 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 147 157 moveto
141 149 lineto
143 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 212 159 moveto
185 117 lineto
239 117 lineto
closepath
stroke
gsave 10 dict begin
212 126 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	p2 -> e
newpath 181 196 moveto
187 185 194 169 200 155 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 202 157 moveto
204 147 lineto
197 155 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 106 113 moveto
104 109 102 105 99 102 curveto
91 91 65 68 46 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 52 moveto
39 47 lineto
45 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 128 113 moveto
123 99 115 80 109 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 112 64 moveto
106 55 lineto
107 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	k -> c
newpath 142 113 moveto
147 99 155 80 161 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 163 65 moveto
164 55 lineto
158 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	k -> d
newpath 162 113 moveto
163 109 165 105 167 102 curveto
171 96 202 70 224 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 225 55 moveto
231 47 lineto
222 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5539 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(39)p eop end
%%Page: 39 40
TeXDict begin 39 39 bop 607 126 a Fn(F)-6 b(usionieren)69
b(\(V)-6 b(ater)69 b(ist)f(4{Knoten\))364 2437 y @beginspecial
35 @llx 35 @lly 379 @urx 277 @ury 3440 @rwi @setspecial
%%BeginDocument: fusing-4-node-1-und-2-vorher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 379 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 379 277
%%PageOrientation: Portrait
gsave
35 35 344 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p
gsave 10 dict begin
newpath 175 196 moveto
240 196 lineto
stroke
newpath 240 196 moveto
246 196 252 201 252 207 curveto
stroke
newpath 252 207 moveto
252 220 lineto
stroke
newpath 252 220 moveto
252 226 246 232 240 232 curveto
stroke
newpath 240 232 moveto
175 232 lineto
stroke
newpath 175 232 moveto
169 232 164 226 164 220 curveto
stroke
newpath 164 220 moveto
164 207 lineto
stroke
newpath 164 207 moveto
164 201 169 196 175 196 curveto
stroke
gsave 10 dict begin
177 209 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 191 196 moveto
191 232 lineto
stroke
gsave 10 dict begin
206 209 moveto 17 -0.5 (p2) alignedtext
end grestore
newpath 222 196 moveto
222 232 lineto
stroke
gsave 10 dict begin
237 209 moveto 16 -0.5 (p3) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 83 113 moveto
114 113 lineto
stroke
newpath 114 113 moveto
119 113 126 118 126 124 curveto
stroke
newpath 126 124 moveto
126 137 lineto
stroke
newpath 126 137 moveto
126 143 120 149 114 149 curveto
stroke
newpath 114 149 moveto
83 149 lineto
stroke
newpath 83 149 moveto
78 149 72 143 72 137 curveto
stroke
newpath 72 137 moveto
72 124 lineto
stroke
newpath 72 124 moveto
72 118 77 113 83 113 curveto
stroke
gsave 10 dict begin
99 126 moveto 9 -0.5 (k) alignedtext
end grestore
end grestore

%	p -> k
newpath 164 196 moveto
148 178 142 176 126 160 curveto
125 159 124 157 123 156 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 125 154 moveto
116 149 lineto
121 158 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	l
gsave 10 dict begin
newpath 155 113 moveto
186 113 lineto
stroke
newpath 186 113 moveto
191 113 198 118 198 124 curveto
stroke
newpath 198 124 moveto
198 137 lineto
stroke
newpath 198 137 moveto
198 143 192 149 186 149 curveto
stroke
newpath 186 149 moveto
155 149 lineto
stroke
newpath 155 149 moveto
150 149 144 143 144 137 curveto
stroke
newpath 144 137 moveto
144 124 lineto
stroke
newpath 144 124 moveto
144 118 149 113 155 113 curveto
stroke
gsave 10 dict begin
171 126 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	p -> l
newpath 199 196 moveto
194 185 188 170 183 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 185 157 moveto
179 149 lineto
181 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 243 159 moveto
216 117 lineto
270 117 lineto
closepath
stroke
gsave 10 dict begin
243 126 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	p -> e
newpath 215 196 moveto
220 185 226 169 232 157 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 234 158 moveto
236 148 lineto
230 156 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	f
gsave 10 dict begin
newpath 315 159 moveto
288 117 lineto
342 117 lineto
closepath
stroke
gsave 10 dict begin
315 126 moveto 7 -0.5 (f) alignedtext
end grestore
end grestore

%	p -> f
newpath 252 196 moveto
267 180 284 161 297 148 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 298 151 moveto
303 142 lineto
294 147 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 85 113 moveto
73 97 54 73 42 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 45 57 moveto
37 50 lineto
41 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 99 113 moveto
99 103 99 89 99 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 76 moveto
99 66 lineto
97 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	l -> c
newpath 171 113 moveto
171 103 171 89 171 76 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 174 76 moveto
171 66 lineto
169 76 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	l -> d
newpath 185 113 moveto
197 97 216 73 228 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 229 60 moveto
233 50 lineto
225 57 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 2719 a Fl(Knoten)57 b Fj(k)k Fl(mit)d(Bruder)g
(verschmelzen)364 4877 y @beginspecial 35 @llx 35 @lly
348 @urx 277 @ury 3130 @rwi @setspecial
%%BeginDocument: fusing-4-node-1-und-2-nachher.ps
%!PS-Adobe-2.0
%%Creator: dot version 1.9 (Mon Mar 17 14:25:18 UTC 2003)
%%For: (stroetma) Karl Stroetmann
%%Title: G
%%Pages: (atend)
%%BoundingBox: 35 35 348 277
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 348 277
%%PageOrientation: Portrait
gsave
35 35 313 242 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	p2
gsave 10 dict begin
newpath 193 196 moveto
231 196 lineto
stroke
newpath 231 196 moveto
237 196 243 201 243 207 curveto
stroke
newpath 243 207 moveto
243 220 lineto
stroke
newpath 243 220 moveto
243 226 237 232 231 232 curveto
stroke
newpath 231 232 moveto
193 232 lineto
stroke
newpath 193 232 moveto
187 232 182 226 182 220 curveto
stroke
newpath 182 220 moveto
182 207 lineto
stroke
newpath 182 207 moveto
182 201 187 196 193 196 curveto
stroke
gsave 10 dict begin
197 209 moveto 17 -0.5 (p2) alignedtext
end grestore
newpath 213 196 moveto
213 232 lineto
stroke
gsave 10 dict begin
228 209 moveto 16 -0.5 (p3) alignedtext
end grestore
end grestore

%	k
gsave 10 dict begin
newpath 111 113 moveto
154 113 lineto
stroke
newpath 154 113 moveto
160 113 167 118 167 124 curveto
stroke
newpath 167 124 moveto
167 137 lineto
stroke
newpath 167 137 moveto
167 143 160 149 154 149 curveto
stroke
newpath 154 149 moveto
111 149 lineto
stroke
newpath 111 149 moveto
105 149 99 143 99 137 curveto
stroke
newpath 99 137 moveto
99 124 lineto
stroke
newpath 99 124 moveto
99 118 105 113 111 113 curveto
stroke
gsave 10 dict begin
110 126 moveto 9 -0.5 (k) alignedtext
end grestore
newpath 122 113 moveto
122 149 lineto
stroke
gsave 10 dict begin
135 126 moveto 13 -0.5 (p1) alignedtext
end grestore
newpath 149 113 moveto
149 149 lineto
stroke
gsave 10 dict begin
158 126 moveto 4 -0.5 (l) alignedtext
end grestore
end grestore

%	p2 -> k
newpath 182 196 moveto
167 179 161 177 149 160 curveto
148 159 148 158 147 158 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 149 157 moveto
142 149 lineto
145 159 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
newpath 212 159 moveto
185 117 lineto
239 117 lineto
closepath
stroke
gsave 10 dict begin
212 126 moveto 7 -0.5 (e) alignedtext
end grestore
end grestore

%	p2 -> e
newpath 212 196 moveto
212 189 212 179 212 170 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 215 170 moveto
212 160 lineto
210 170 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	f
gsave 10 dict begin
newpath 284 159 moveto
257 117 lineto
311 117 lineto
closepath
stroke
gsave 10 dict begin
284 126 moveto 7 -0.5 (f) alignedtext
end grestore
end grestore

%	p2 -> f
newpath 240 196 moveto
249 183 261 166 270 152 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 271 155 moveto
275 145 lineto
267 152 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	a
gsave 10 dict begin
newpath 27 65 moveto
0 23 lineto
54 23 lineto
closepath
stroke
gsave 10 dict begin
27 32 moveto 7 -0.5 (a) alignedtext
end grestore
end grestore

%	k -> a
newpath 106 113 moveto
104 109 102 105 99 102 curveto
91 91 65 68 46 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 48 52 moveto
39 47 lineto
45 55 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	b
gsave 10 dict begin
newpath 99 65 moveto
72 23 lineto
126 23 lineto
closepath
stroke
gsave 10 dict begin
99 32 moveto 8 -0.5 (b) alignedtext
end grestore
end grestore

%	k -> b
newpath 128 113 moveto
123 99 115 80 109 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 112 64 moveto
106 55 lineto
107 65 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
newpath 171 65 moveto
144 23 lineto
198 23 lineto
closepath
stroke
gsave 10 dict begin
171 32 moveto 7 -0.5 (c) alignedtext
end grestore
end grestore

%	k -> c
newpath 142 113 moveto
147 99 155 80 161 64 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 163 65 moveto
164 55 lineto
158 64 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	d
gsave 10 dict begin
newpath 243 65 moveto
216 23 lineto
270 23 lineto
closepath
stroke
gsave 10 dict begin
243 32 moveto 8 -0.5 (d) alignedtext
end grestore
end grestore

%	k -> d
newpath 162 113 moveto
163 109 165 105 167 102 curveto
171 96 202 70 224 53 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 225 55 moveto
231 47 lineto
222 52 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1

%%EndDocument
 @endspecial 0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(40)p eop end
%%Page: 40 41
TeXDict begin 40 40 bop 1531 115 a Fn(F)-6 b(usionieren)0
515 y Fl(Beim)64 b(F)-5 b(usionieren)65 b(sind)f(eine)f(Reihe)h(von)g
(F)-5 b(allunterscheidun-)0 673 y(gen)57 b(durchzuf\177)-86
b(uhren)99 1017 y(1.)82 b(Der)58 b(V)-5 b(ater{Knoten)58
b(ist)g(ein)f(3{Knoten)266 1269 y(\(a\))84 b(Der)57 b(unmittelba)-5
b(re)59 b(Bruder)e(ist)h(erstes)f(Kind)262 1520 y(\(b\))83
b(Der)57 b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h(zw)-5
b(eites)57 b(Kind)271 1771 y(\(c\))83 b(Der)57 b(unmittelba)-5
b(re)59 b(Bruder)e(ist)h(drittes)g(Kind)99 2115 y(2.)82
b(Der)58 b(V)-5 b(ater{Knoten)58 b(ist)g(ein)f(4{Knoten)266
2367 y(\(a\))84 b(Der)57 b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h
(erstes)f(Kind)262 2618 y(\(b\))83 b(Der)57 b(unmittelba)-5
b(re)59 b(Bruder)e(ist)h(zw)-5 b(eites)57 b(Kind)271
2869 y(\(c\))83 b(Der)57 b(unmittelba)-5 b(re)59 b(Bruder)e(ist)h
(drittes)g(Kind)262 3120 y(\(d\))83 b(Der)57 b(unmittelba)-5
b(re)59 b(Bruder)e(ist)h(viertes)f(Kind)0 3465 y(Zus)n(\177)-84
b(atzlich)43 b(mu\031)f(no)5 b(ch)41 b(unterschieden)g(w)-5
b(erden,)41 b(ob)h(der)f(Bruder)0 3622 y(rechts)51 b(o)5
b(der)52 b(links)h(von)e(dem)g(Knoten)g(liegt,)h(der)g(den)f(Schl\177)
-86 b(ussel)0 3780 y(stehlen)57 b(will.)p 1250 3925 1516
5 v 1250 4123 5 198 v 1297 4062 a(Insgesamt:)g(10)h(F)n(\177)-84
b(alle!)p 2761 4123 V 1250 4128 1516 5 v 0 5536 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(41)p eop end
%%Page: 41 42
TeXDict begin 41 41 bop 1218 115 a Fn(L\177)-103 b(oschen)69
b(Allgemein)0 515 y Fl(Bisher)58 b(b)5 b(eschrieb)g(en:)55
b(L\177)-86 b(oschen)57 b(von)g(Blatt{Knoten)0 797 y(Jetzt:)h(L\177)-86
b(oschen)56 b(von)h(b)5 b(eliebigen)57 b(Knoten)99 1142
y(1.)82 b(Ist)58 b(Knoten)f Fj(m)h Fl(Blatt?)99 1487
y(2.)82 b(Ja:)58 b(l\177)-86 b(osche)57 b(Knoten)g Fj(m)p
Fl(,)h(fertig)315 1801 y(Nein:)99 2146 y(3.)82 b(Bestimme)57
b(Nachfolger{Knoten)g Fj(n)g Fl(von)g Fj(m)315 2366 y
Fl(Sei)39 b Fj(k)k Fl(Schl\177)-86 b(ussel)38 b(von)h
Fj(n)p Fl(.)f(Nachfolger{Knoten)h(ist)g(der)g(Kno-)315
2523 y(ten)58 b Fj(n)f Fl(mit)h(Schl\177)-86 b(ussel)56
b Fj(l)j Fl(f\177)-86 b(ur)57 b(den)h(gilt:)266 2774
y(\(a\))84 b Fj(k)44 b(<)d(l)262 3026 y Fl(\(b\))83 b
Fj(l)58 b Fl(ist)g(der)f(kleinste)h(Knoten)f(im)h(Baum)f(mit)h
Fj(k)44 b(<)d(l)r Fl(.)99 3370 y(4.)82 b(L\177)-86 b(osche)57
b Fj(n)g Fl(\(m\177)-86 b(oglich,)57 b(da)h Fj(o)f Fl(Blatt\))99
3715 y(5.)82 b(Schreib)5 b(e)57 b Fj(l)h Fl(und)g Fj(v)63
b Fl(in)57 b(Knoten)g Fj(m)0 4059 y Fl(Komplexit)n(\177)-84
b(at:)46 b(Ist)h Fj(t)f Fl(eine)g(2{3{4{Baum)h(mit)f
Fj(n)h Fl(Knoten,)f(so)g(b)5 b(e-)0 4217 y(tr)n(\177)-84
b(agt)56 b(der)f(Aufw)-5 b(and)55 b(f\177)-86 b(ur)55
b(das)g(L\177)-86 b(oschen)54 b(eines)g(Knotens)h(so)-5
b(w)g(ohl)0 4375 y(im)58 b(schlechtesten)d(als)j(auch)g(im)f(b)5
b(esten)57 b(F)-5 b(all)601 4674 y Fk(O)721 4559 y Fb(\000)811
4674 y Fl(log\()p Fj(n)p Fl(\))1244 4559 y Fb(\001)p
0 5536 4016 24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70
b(aume)2718 b(Seite)46 b(42)p eop end
%%Page: 42 43
TeXDict begin 42 42 bop 405 115 a Fn(L\177)-103 b(oschen:)70
b(Alternative)d(Implementierung)99 528 y Fl(1.)82 b(F\177)-86
b(uhre)39 b(zus)n(\177)-84 b(atzliches)39 b(F)-5 b(elder)39
b(vom)f(T)-14 b(yp)5 b(e)37 b Fg(bool)j Fl(in)e(der)h(Struk-)315
679 y(tur)59 b(ein,)e(die)g(Knoten)g(b)5 b(eschreibt.)608
956 y Fg(struct)74 b(Node)g({)901 1107 y(NodeType)g(type;)901
1259 y(bool)366 b(alive1;)901 1410 y(Key)439 b(key1;)901
1562 y(Value)293 b(val1;)901 1713 y(bool)366 b(alive2;)901
1865 y(Key)439 b(key2;)901 2016 y(Value)293 b(val2;)901
2168 y(bool)366 b(alive3;)901 2320 y(Key)439 b(key3;)901
2471 y(Value)293 b(val3;)901 2623 y(...)608 2774 y(};)99
3069 y Fl(2.)82 b Fg(alive)75 b(==)e(true)p Fl(:)58 b(Schl\177)-86
b(ussel)57 b(ist)h(g\177)-86 b(ultig.)99 3364 y(3.)82
b Fg(alive)75 b(==)e(false)p Fl(:)58 b(Schl\177)-86 b(ussel)57
b(wurde)g(gel\177)-86 b(oscht.)99 3659 y(4.)82 b(V)-5
b(erw)g(alte)58 b(au\031erdem)g(zw)-5 b(ei)57 b(globale)h(Z)n(\177)-84
b(ahler:)266 3904 y(\(a\))84 b(Anzahl)58 b(aller)g(g\177)-86
b(ultigen)58 b(Schl\177)-86 b(ussel)262 4149 y(\(b\))83
b(Anzahl)58 b(aller)g(gel\177)-86 b(oschten)57 b(Schl\177)-86
b(ussel)99 4444 y(5.)82 b(F)-5 b(alls)77 b(mehr)f(gel\177)-86
b(oschte)74 b(Schl\177)-86 b(ussel)75 b(als)h(g\177)-86
b(ultige)76 b(Schl\177)-86 b(ussel)315 4596 y(existieren,)57
b(baue)g(Baum)h(neu)f(auf.)315 4810 y(Komplexit)n(\177)-84
b(at)58 b(f\177)-86 b(ur)57 b(Baum)h(mit)g Fj(n)f Fl(Knoten:)266
5054 y(\(a\))84 b(Im)57 b(schlimmsten)g(F)-5 b(all:)848
b Fk(O)t Fl(\()p Fj(n)p Fl(\))262 5299 y(\(b\))83 b(Im)57
b(statistischen)h(Durchschnitt:)186 b Fk(O)2984 5185
y Fb(\000)3074 5299 y Fl(log)q(\()p Fj(n)p Fl(\))3508
5185 y Fb(\001)p 0 5543 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(43)p eop end
%%Page: 43 44
TeXDict begin 43 43 bop 553 126 a Fn(L\177)-103 b(oschen)69
b(Alternative)f(\(F)-6 b(o)g(rtsetzung\))99 583 y Fl(1.)82
b(Zahl)40 b(gel\177)-86 b(oschter)37 b(Schl\177)-86 b(ussel)38
b(gr\177)-86 b(o\031er)39 b(Zahl)g(g\177)-86 b(ultiger)39
b(Schl\177)-86 b(ussel?)99 922 y(2.)82 b(Nein:)57 b(Schl\177)-86
b(ussel)57 b(suchen)g(und)h(als)f(gel\177)-86 b(oscht)58
b(ma)-5 b(rkieren)99 1261 y(3.)82 b(Ja:)266 1511 y(\(a\))i(Sammle)53
b(alle)i(g\177)-86 b(ultigen)55 b(Schl\177)-86 b(ussel)53
b(\(nebst)i(zugeh\177)-86 b(orige)565 1668 y(W)-5 b(erte\))56
b(aus)i(dem)f(Baum)h(in)f(2)h(F)-5 b(eldern)58 b(auf.)262
1918 y(\(b\))83 b(L\177)-86 b(osche)56 b(alten)h(Baum.)271
2169 y(\(c\))83 b(Baue)55 b(neuen)g(2{3{4)h(Baum)g(aus)g(diesen)f(F)-5
b(eldern)56 b(auf.)0 2507 y(Aufsammeln:)0 2784 y Fg(void)74
b(collectKeys\(Tree)i(t,)d(unsigned*)i(idx,)1244 2941
y(Key)f(keyArray[],)h(Value)f(valArray[]\))0 3098 y({)293
3255 y(if)f(\(t)h(==)f(0\))585 3412 y(return;)293 3569
y(switch)h(\(t->type\))h({)293 3726 y(case)f(TWO:)f({)585
3883 y(collectKeys\(t->ptr1,)k(idx,)d(keyArray,)h(valArray\);)585
4040 y(if)f(\(t->alive1\))h({)878 4197 y(keyArray[*idx])h(=)d(t->key1;)
878 4354 y(valArray[*idx])j(=)d(t->val1;)878 4511 y(*idx)h(=)f(*idx)h
(+)f(1;)585 4668 y(})585 4825 y(collectKeys\(t->ptr2,)k(idx,)d
(keyArray,)h(valArray\);)585 4982 y(return;)293 5139
y(})293 5296 y(...)p 0 5537 4016 24 v 0 5669 a Fi(2{3{4)46
b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(44)p eop end
%%Page: 44 45
TeXDict begin 44 44 bop 1142 115 a Fn(Baum)69 b(neu)g(Aufbauen)0
493 y Fm(Gegeb)5 b(en)p Fl(:)99 815 y(1.)82 b Fg(keyArray)p
Fl(:)59 b Fm(geo)-5 b(rdnetes)57 b Fl(F)-5 b(eld)58 b(von)f(Schl\177)
-86 b(usseln)99 1138 y(2.)82 b Fg(valArray)p Fl(:)59
b(F)-5 b(eld)58 b(der)f(zugeh\177)-86 b(origen)58 b(Schl\177)-86
b(ussel)99 1460 y(3.)82 b Fg(length)p Fl(:)59 b(L)n(\177)-84
b(ange)57 b(der)g(F)-5 b(elder)0 1782 y Fm(Gesucht)p
Fl(:)57 b(2{3{4)h(Baum)g(mit)g(den)f(Schl\177)-86 b(usseln)56
b(aus)i Fg(keyArray)0 2042 y Fl(Algo)-5 b(rithmus)99
2365 y(1.)82 b Fg(length)75 b(==)e(1)p Fl(:)58 b(erzeuge)e(2{Knoten)99
2687 y(2.)82 b Fg(length)75 b(==)e(2)p Fl(:)58 b(erzeuge)e(3{Knoten)99
3009 y(3.)82 b Fg(length)75 b(\045)e(2)g(==)h(1,)f(length)i(>)e(2)p
Fl(:)266 3258 y(\(a\))84 b(Setze)56 b Fg(m)73 b(=)h(length/2)262
3506 y Fl(\(b\))83 b(Rekursiv:)57 b(Bilde)h(Baum)f Fj(l)i
Fl(aus)929 3732 y Fg(keyArray[0])r Fj(;)65 b Fk(\001)24
b(\001)g(\001)g Fj(;)64 b Fg(keyArray[m-1])929 3805 y
Fb(|)p 994 3805 953 18 v 953 w({z)p 2077 3805 V 953 w(})1973
3916 y Fc(m)271 4145 y Fl(\(c\))83 b(Rekursiv:)57 b(Bilde)h(Baum)f
Fj(r)62 b Fl(aus)929 4371 y Fg(keyArray[m+1])r Fj(;)j
Fk(\001)24 b(\001)g(\001)g Fj(;)65 b Fg(keyArray[m)75
b(+)e(m])929 4444 y Fb(|)p 994 4444 1099 18 v 1099 w({z)p
2223 4444 V 1099 w(})2120 4555 y Fc(m)262 4784 y Fl(\(d\))83
b(Erzeuge)57 b(2{Knoten)g Fj(n)g Fl(aus)929 5010 y Fj(l)r
Fl(,)g Fj(r)t Fl(,)g Fg(keyArray[m])r Fl(,)g Fc(valArray)p
Fl([)p Fc(m)p Fl(])271 5258 y(\(e\))83 b(Geb)5 b(e)56
b Fj(n)h Fl(zur\177)-86 b(uck)p 0 5539 4016 24 v 0 5669
a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718 b(Seite)46 b(45)p
eop end
%%Page: 45 46
TeXDict begin 45 45 bop 526 126 a Fn(Baum)69 b(neu)g(Aufbauen)h(\(F)-6
b(o)g(rtsetzung\))99 589 y Fl(4.)82 b Fg(length)75 b(\045)e(2)g(==)h
(0,)f(length)i(>)e(2)p Fl(:)266 840 y(\(a\))84 b(Setze)56
b Fg(m)73 b(=)h(length)g(/)f(2)h(-)f(1)p Fl(,)57 b(also)h(gilt)929
1069 y Fg(length)74 b(=)g(m)f(+)g(1)h(+)f(1)g(+)h(m)262
1320 y Fl(\(b\))83 b(Rekursiv:)57 b(Bilde)h(Baum)f Fj(l)i
Fl(aus)929 1548 y Fg(keyArray[0])r Fj(;)24 b Fk(\001)g(\001)g(\001)g
Fj(;)g Fg(keyArray[m-1])929 1621 y Fb(|)p 994 1621 912
18 v 912 w({z)p 2036 1621 V 912 w(})1933 1732 y Fc(m)271
1962 y Fl(\(c\))83 b(Rekursiv:)57 b(Bilde)h(Baum)f Fj(r)62
b Fl(aus)929 2190 y Fg(keyArray[m+2])r Fj(;)24 b Fk(\001)g(\001)g(\001)
g Fj(;)g Fg(keyArray[m)75 b(+)f(m)f(+)g(1])929 2263 y
Fb(|)p 994 2263 1205 18 v 1205 w({z)p 2329 2263 V 1205
w(})2225 2374 y Fc(m)262 2604 y Fl(\(d\))83 b(Erzeuge)57
b(2{Knoten)g Fj(n)g Fl(aus)929 2832 y Fj(l)r Fl(,)g Fj(r)t
Fl(,)g Fg(keyArray)q Fl([)p Fj(m)p Fl(],)g Fc(valArray)o
Fl([)p Fj(m)p Fl(])271 3083 y(\(e\))83 b(F\177)-86 b(uge)57
b Fg(keyArray)q Fl([)p Fj(m)33 b Fl(+)f(1],)57 b Fc(valArray)o
Fl([)p Fj(m)32 b Fl(+)h(1])57 b(in)g Fj(r)62 b Fl(ein)910
3312 y Fg(res)74 b(=)f(insert\(n,)i(keyArray[m+1],)g(valArray[m+1]\))
283 3563 y Fl(\(f)12 b(\))83 b(Geb)5 b(e)56 b Fg(res)i
Fl(zur\177)-86 b(uck)0 3908 y Fm(Wichtig)p Fl(:)40 b(Bei)f(den)g(b)5
b(eiden)39 b(rekursiven)h(Aufrufen)f(mu\031)g(die)h(Zahl)695
4065 y(der)58 b(\177)-86 b(ub)5 b(ergeb)g(enen)55 b(Schl\177)-86
b(ussel)57 b(die)g(selb)5 b(e)57 b(sein!)p 0 5536 4016
24 v 0 5669 a Fi(2{3{4)46 b(B)n(\177)-70 b(aume)2718
b(Seite)46 b(46)p eop end
%%Page: 46 47
TeXDict begin 46 46 bop 796 115 a Fh(gdb)68 b Fn(Command)h(Line)f
(Interface)0 489 y Fl(Aufruf)99 808 y(1.)82 b Fg(gcc)74
b(-std=c99)h(-Wall)f(-lm)f Fm(-g)g Fg(-o)h(test-2-3-4)h(test-2-3-4.c)
315 1025 y Fl(Ohne)38 b Fm(-g)h Fl(wird)f(b)5 b(eim)38
b(Kompilieren)g(k)-5 b(eine)39 b(Debug{Info)-5 b(rmation)315
1180 y(erzeugt!)99 1498 y(2.)82 b Fg(gdb)74 b(test-2-3-4)0
1817 y(gdb)p Fl({Kommandos)99 2136 y(1.)82 b Fg(break)59
b Fd(fctName)315 2353 y Fl(Anhalten)f(b)5 b(ei)57 b(F)-5
b(unktion)59 b Fd(fctName)99 2672 y Fl(2.)82 b Fg(break)59
b Fd(lineNumb)5 b(er)315 2888 y Fl(Anhalten)58 b(in)g(Zeile)f
Fd(lineNumb)5 b(er)99 3207 y Fl(3.)82 b Fg(info)74 b(breakpoints)315
3424 y Fl(zeigt)58 b(Halte{Punkte)g(und)g(Beobachtungs{Punkte)f(an)99
3743 y(4.)82 b Fg(delete)59 b Fd(numb)5 b(er)315 3960
y Fl(l\177)-86 b(oscht)58 b(Halte{Punkt)g(/)g(Beobachtungs{Punkt)99
4279 y(5.)82 b Fg(display)59 b Fd(exp)-5 b(r)315 4495
y Fl(w)g(ertet)58 b(jedesmal)p 818 4537 602 6 v 57 w
Fd(exp)-5 b(r)74 b Fl(aus,)58 b(druckt)g(Ergebnis)315
4712 y(Beispiel:)f Fg(display)75 b(printTableDot\(t,)h(42\);)99
5031 y Fl(6.)82 b Fg(help)p Fl(:)315 5248 y(Liste)57
b(der)h(T)-14 b(opics,)57 b(zu)h(denen)e(Hilfe)h(existiert)p
0 5524 4016 24 v 0 5653 a Fi(Debugging)2904 b(Seite)46
b(47)p eop end
%%Page: 47 48
TeXDict begin 47 47 bop 1317 115 a Fh(gdb)68 b Fn(Kommandos)99
535 y Fl(1.)82 b Fg(run)p Fl(:)58 b(sta)-5 b(rtet)59
b(das)e(Programm)99 837 y(2.)82 b Fg(continue)p Fl(:)315
1052 y(rechnet)57 b(bis)h(zum)f(n)n(\177)-84 b(achsten)58
b(Haltepunkt)99 1354 y(3.)82 b Fg(step)p Fl(:)58 b(f\177)-86
b(uhrt)58 b(eine)f(Programm{Zeile)h(aus)99 1656 y(4.)82
b Fg(next)p Fl(:)58 b(wie)f(ob)5 b(en,)57 b(sp)-5 b(ringt)59
b(\177)-86 b(ub)5 b(er)57 b(Prozedur{Aufruf)99 1958 y(5.)82
b Fg(until)59 b Fd(line)315 2172 y Fl(Programm)g(l)n(\177)-84
b(auft)58 b(bis)g(zur)g(sp)5 b(ezi\014zierten)57 b(Zeile)99
2475 y(6.)82 b Fg(finish)p Fl(:)59 b(Programm)f(l)n(\177)-84
b(auft)58 b(bis)g(Ende)f(aktueller)h(F)-5 b(unktion)99
2777 y(7.)82 b Fg(print)59 b Fd(exp)-5 b(r)315 2991 y
Fl(gibt)58 b(Ausdruck)g(aus)99 3293 y(8.)82 b Fg(print)59
b Fd(fnct\(a)-5 b(rg1,...,a)g(rgn\))315 3508 y Fl(w)g(ertet)58
b(Benutzer{F)-5 b(unktion)58 b(aus)315 3723 y(Beispiel:)f
Fg(p)74 b(printTableDot\(t,)i(42\);)99 4025 y Fl(9.)82
b Fg(display)59 b Fd(exp)-5 b(r)315 4239 y Fl(zeigt)58
b(jedesmal)f Fg(expr)h Fl(an)315 4454 y(Beispiel:)f Fg(display)75
b(i)12 4756 y Fl(10.)83 b Fg(info)74 b(display)315 4971
y Fl(listet)58 b(Ausdr\177)-86 b(uck)-5 b(e,)58 b(die)f(automatisch)h
(angezeigt)g(w)-5 b(erden)12 5273 y(11.)83 b Fg(delete)75
b(display)p Fl(:)58 b(l\177)-86 b(oschen)p 0 5526 4016
24 v 0 5653 a Fi(Debugging)2904 b(Seite)46 b(48)p eop
end
%%Page: 48 49
TeXDict begin 48 48 bop 562 113 a Fn(Benutzung)70 b(von)f
Fh(gdb)f Fn(unter)h Fa(XEmacs)99 576 y Fl(1.)82 b(Aufruf)58
b(Compiler:)f Fg(Meta-x)75 b(compile)99 920 y Fl(2.)82
b(Aufruf)58 b(Debugger:)f Fg(Meta-x)74 b(gdb)99 1265
y Fl(3.)82 b(Aufruf)58 b(Shell:)f Fg(Meta-x)74 b(shell)0
1727 y Fl(T)-14 b(astatur{Belegung)p 364 2102 3064 5
v 364 4939 5 2837 v 468 2149 2913 5 v 466 2307 5 159
v 551 2261 a(command)p 2099 2307 V 950 w(k)-5 b(ey)57
b(sequence)p 3379 2307 V 468 2312 2913 5 v 466 2594 5
283 v 551 2495 a Fg(step)p 2099 2594 V 2185 2359 577
5 v 2185 2536 5 178 v 1388 w Fl(Meta-s)p 2757 2536 V
2185 2541 577 5 v 3379 2594 5 283 v 468 2599 2913 5 v
466 2882 5 283 v 551 2782 a Fg(next)p 2099 2882 V 2185
2645 964 5 v 2185 2824 5 179 v 1388 w Fl(Ctrl-c)h(Ctrl-n)p
3143 2824 V 2185 2829 964 5 v 3379 2882 5 283 v 468 2887
2913 5 v 466 3169 5 283 v 551 3069 a Fg(continue)p 2099
3169 V 2185 2932 1057 5 v 2185 3111 5 179 v 1096 w Fl(Ctrl-c)g(Meta-n)p
3236 3111 V 2185 3116 1057 5 v 3379 3169 5 283 v 468
3174 2913 5 v 466 3456 5 283 v 551 3357 a Fg(finish)p
2099 3456 V 2185 3219 930 5 v 2185 3398 5 179 v 1242
w Fl(Ctrl-c)g(Ctrl-f)p 3110 3398 V 2185 3403 930 5 v
3379 3456 5 283 v 468 3461 2913 5 v 466 3744 5 283 v
551 3644 a Fg(break)h Fd(line)p 2099 3744 V 2185 3507
939 5 v 2185 3705 5 198 v 1017 w Fl(Ctrl-x)f(space)p
3118 3705 V 2185 3710 939 5 v 3379 3744 5 283 v 468 3748
2913 5 v 466 4031 5 283 v 551 3931 a(n)n(\177)-84 b(achstes)57
b(Kommando)p 2099 4031 V 2185 3795 598 5 v 2185 3992
5 197 v 213 w(Meta-p)p 2777 3992 V 2185 3997 598 5 v
3379 4031 5 283 v 468 4036 2913 5 v 466 4318 5 283 v
551 4218 a(letztes)h(Kommando)p 2099 4318 V 2185 4083
598 5 v 2185 4260 5 178 v 357 w(Meta-n)p 2777 4260 V
2185 4265 598 5 v 3379 4318 5 283 v 468 4323 2913 5 v
466 4605 5 283 v 551 4506 a Fg(up)p 2099 4605 V 2185
4368 626 5 v 2185 4547 5 179 v 1534 w Fl(Ctrl-c)g Fg(<)p
2805 4547 V 2185 4552 626 5 v 3379 4605 5 283 v 468 4610
2913 5 v 466 4893 5 283 v 551 4793 a(down)p 2099 4893
V 2185 4656 626 5 v 2185 4834 5 179 v 1388 w Fl(Ctrl-c)g
Fg(>)p 2805 4834 V 2185 4839 626 5 v 3379 4893 5 283
v 468 4898 2913 5 v 3423 4939 5 2837 v 364 4944 3064
5 v 0 5181 a Fl(Befehle)e(sind)i(eb)5 b(enfalls)56 b(\177)-86
b(ub)5 b(er)58 b(GUI)f(ausf\177)-86 b(uhrba)-5 b(r)p
0 5521 4016 24 v 0 5653 a Fi(Debugging)2904 b(Seite)46
b(49)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
