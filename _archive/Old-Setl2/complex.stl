class Complex;
    procedure create(x, y);

    procedure abs();
end Complex;

class body Complex;
    var real, imag;

    procedure create(x,y);
        real := x;
        imag := y;
    end create;

    procedure abs();
        return sqrt(real ** 2 + imag ** 2);
    end abs;

    procedure self + z;
        return Complex(real + z.real, imag + z.imag);
    end;

    procedure self - z;
        return Complex(real - z.real, imag - z.imag);
    end;

    procedure self * z;
        resultReal := real * z.real - imag * z.imag;
        resultImag := real * z.imag + imag * z.real;
        return Complex(resultReal, resultImag);
    end;

    procedure self / z;
        resultReal := (real * z.real + imag * z.imag) / (z.real ** 2 + z.imag ** 2);
        resultImag := (imag * z.real - real * z.imag) / (z.real ** 2 + z.imag ** 2);
        return Complex(resultReal, resultImag);
    end;

    procedure selfstr();
        return str(real) + " + " + str(imag) + " * i";
    end selfstr;
end Complex;

program main;
    use Complex;

    z1 := Complex(1,  1);
    z2 := Complex(1, -1);
    print(z1, " + ", z2, " = ", z1 + z2);
    print(z1, " - ", z2, " = ", z1 - z2);
    print("(", z1, ") * (", z2, ") = ", z1 * z2);
    print("(", z1, ") / (", z2, ") = ", z1 / z2);
end main;