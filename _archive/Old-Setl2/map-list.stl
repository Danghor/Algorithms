class Map;
    procedure create();

    procedure find(k);
    procedure insert(k, v);
    procedure delete(k);
end Map;

class body Map;
    var L;

    procedure create();
        L := [];
    end create;

    procedure find(k);
        return findList(L, k);
    end find;

    procedure findList(L, k);
        if L = [] then
            return;
        end if;
        [k1, v1] := L(1); R := L(2..);
        if k = k1 then
            return v1;
        else
            return findList(R, k);
        end if;
    end findList;

    procedure insert(k, v);
        L := insertList(L, k, v);
    end insert;

    procedure insertList(List, k, v);
        if List = [] then
            return [ [k, v] ];
        end if;
        [k1, v1] := List(1); R := List(2..);
        if k = k1 then
            return [ [k, v] ] + R;
        else
            return [ [k1, v1] ] + insertList(R, k, v);
        end if;
    end insertList;

    procedure delete(k);
        L := deleteList(L, k);
    end delete;

    procedure deleteList(List, k);
        if List = [] then
            return List;
        end if;
        [k1, v1] := List(1); R := List(2..);
        if k = k1 then
            return R;
        else
            return [ [k1, v1] ] + deleteList(R, k);
        end if;
    end deleteList;
    
end Map;